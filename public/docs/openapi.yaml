openapi: 3.0.3
info:
  title: 'Memberz.Org API'
  description: 'API Endpoints for the Memberz.Org service'
  version: 1.0.0
servers:
  -
    url: 'http://api.memberz.test'
paths:
  /api/activity_logs/search:
    get:
      summary: 'Get All'
      operationId: getAll
      description: ''
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Activity Logs'
  /api/activity_logs/log_groups:
    get:
      summary: 'Get Log Groups'
      operationId: getLogGroups
      description: ''
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Activity Logs'
  /api/auth/forgot-password:
    post:
      summary: 'Forgot Password'
      operationId: forgotPassword
      description: 'Send a reset password link to user email. This endpoint allows user to reset their forgotten password.'
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Invalid user / email specified'
                properties:
                  message:
                    type: string
                    example: 'Invalid user / email specified'
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: email
                  description: 'The email for the password reset link.'
                  example: john@mail.com
              required:
                - username
  /api/auth/reset-password:
    post:
      summary: 'Reset Password'
      operationId: resetPassword
      description: ''
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Password reset successful'
                properties:
                  message:
                    type: string
                    example: 'Password reset successful'
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Error resetting password'
                properties:
                  message:
                    type: string
                    example: 'Error resetting password'
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: 'User email.'
                  example: john@mail.com
                token:
                  type: string
                  description: 'Password Reset Token.'
                  example: '123010100101'
                password:
                  type: string
                  description: 'New User Password.'
                  example: mypassword02
              required:
                - username
                - token
                - password
  /api/auth/register:
    post:
      summary: 'Register new user/member'
      operationId: registerNewUsermember
      description: 'This endpoint allows to create new user account.'
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Successfully created account'
                properties:
                  message:
                    type: string
                    example: 'Successfully created account'
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  description: 'User First Name.'
                  example: John
                last_name:
                  type: string
                  description: 'User Last Name.'
                  example: Ansah
                email:
                  type: string
                  description: 'user Email.'
                  example: john.ansah@mail.com
                gender:
                  type: string
                  description: 'User Gender.'
                  example: male
                dob:
                  type: string
                  description: 'User Date of Birth.'
                  example: '1980-01-03'
                mobile_number:
                  type: string
                  description: 'Mobile Number of User.'
                  example: '+2332440000001'
                password:
                  type: string
                  description: 'User Password.'
                  example: mypassword01
              required:
                - first_name
                - last_name
                - email
                - gender
                - dob
                - mobile_number
                - password
  /api/auth/login:
    post:
      summary: Login
      operationId: login
      description: 'Get a JWT via given credentials.'
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthorized
                  message: 'Account not found'
                properties:
                  error:
                    type: string
                    example: Unauthorized
                  message:
                    type: string
                    example: 'Account not found'
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: email
                  description: 'User Email.'
                  example: john@mail.com
                password:
                  type: string
                  description: 'User Password.'
                  example: mypassword01
              required:
                - username
                - password
      security: []
  '/api/auth/verify/{token}':
    get:
      summary: 'Verify Account'
      operationId: verifyAccount
      description: "Verify Newly Created User Account\n\nThis endpoint provides email verification for newly created user accounts"
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Account creation verification successful'
                properties:
                  message:
                    type: string
                    example: 'Account creation verification successful'
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Invalid login attempt'
                properties:
                  message:
                    type: string
                    example: 'Invalid login attempt'
      tags:
        - Auth
    parameters:
      -
        in: path
        name: token
        description: ''
        example: labore
        required: true
        schema:
          type: string
  /api/auth/2fa-validate:
    post:
      summary: 'Get the validity of 2FA code'
      operationId: getTheValidityOf2FACode
      description: ''
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message:
                    - 'The selected code is invalid.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: array
                    example:
                      - 'The selected code is invalid.'
                    items:
                      type: string
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  description: ''
                  example: dolorem
              required:
                - code
  /api/auth/logout:
    post:
      summary: Logout
      operationId: logout
      description: 'Log the user out (Invalidate the token).'
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'App\Services\AuthLogService::logLogout(): Argument #1 ($account) must be of type App\Models\MemberAccount, null given, called in D:\memberz-api\app\Http\Controllers\AuthController.php on line 172'
                  exception: TypeError
                  file: 'D:\memberz-api\app\Services\AuthLogService.php'
                  line: 9
                  trace:
                    -
                      file: 'D:\memberz-api\app\Http\Controllers\AuthController.php'
                      line: 172
                      function: logLogout
                      class: App\Services\AuthLogService
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Controller.php'
                      line: 54
                      function: logout
                      class: App\Http\Controllers\AuthController
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\ControllerDispatcher.php'
                      line: 43
                      function: callAction
                      class: Illuminate\Routing\Controller
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Route.php'
                      line: 260
                      function: dispatch
                      class: Illuminate\Routing\ControllerDispatcher
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Route.php'
                      line: 206
                      function: runController
                      class: Illuminate\Routing\Route
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                      line: 806
                      function: run
                      class: Illuminate\Routing\Route
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 144
                      function: 'Illuminate\Routing\{closure}'
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Middleware\SubstituteBindings.php'
                      line: 50
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Routing\Middleware\SubstituteBindings
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 119
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                      line: 805
                      function: then
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                      line: 784
                      function: runRouteWithinStack
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                      line: 748
                      function: runRoute
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                      line: 737
                      function: dispatchToRoute
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                      line: 200
                      function: dispatch
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 144
                      function: 'Illuminate\Foundation\Http\{closure}'
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: 'D:\memberz-api\app\Http\Middleware\Cors.php'
                      line: 34
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: App\Http\Middleware\Cors
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php'
                      line: 21
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull.php'
                      line: 31
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php'
                      line: 21
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TrimStrings.php'
                      line: 51
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TrimStrings
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Http\Middleware\ValidatePostSize.php'
                      line: 27
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Http\Middleware\ValidatePostSize
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance.php'
                      line: 110
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Http\Middleware\TrustProxies.php'
                      line: 57
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Http\Middleware\TrustProxies
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 119
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                      line: 175
                      function: then
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                      line: 144
                      function: sendRequestThroughRouter
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 310
                      function: handle
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 298
                      function: callLaravelOrLumenRoute
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 91
                      function: makeApiCall
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 44
                      function: makeResponseCall
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 35
                      function: makeResponseCallIfConditionsPass
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                      line: 236
                      function: __invoke
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                      line: 163
                      function: iterateThroughStrategies
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                      line: 95
                      function: fetchResponses
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                      line: 125
                      function: processRoute
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                      line: 72
                      function: extractEndpointsInfoFromLaravelApp
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                      line: 50
                      function: extractEndpointsInfoAndWriteToDisk
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Commands\GenerateDocumentation.php'
                      line: 53
                      function: get
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                      line: 36
                      function: handle
                      class: Knuckles\Scribe\Commands\GenerateDocumentation
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Util.php'
                      line: 41
                      function: 'Illuminate\Container\{closure}'
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                      line: 93
                      function: unwrapIfClosure
                      class: Illuminate\Container\Util
                      type: '::'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                      line: 35
                      function: callBoundMethod
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Container.php'
                      line: 662
                      function: call
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Console\Command.php'
                      line: 213
                      function: call
                      class: Illuminate\Container\Container
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\symfony\console\Command\Command.php'
                      line: 279
                      function: execute
                      class: Illuminate\Console\Command
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Console\Command.php'
                      line: 182
                      function: run
                      class: Symfony\Component\Console\Command\Command
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                      line: 1047
                      function: run
                      class: Illuminate\Console\Command
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                      line: 316
                      function: doRunCommand
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                      line: 167
                      function: doRun
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Console\Kernel.php'
                      line: 196
                      function: run
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: 'D:\memberz-api\artisan'
                      line: 35
                      function: handle
                      class: Illuminate\Foundation\Console\Kernel
                      type: '->'
                properties:
                  message:
                    type: string
                    example: 'App\Services\AuthLogService::logLogout(): Argument #1 ($account) must be of type App\Models\MemberAccount, null given, called in D:\memberz-api\app\Http\Controllers\AuthController.php on line 172'
                  exception:
                    type: string
                    example: TypeError
                  file:
                    type: string
                    example: 'D:\memberz-api\app\Services\AuthLogService.php'
                  line:
                    type: integer
                    example: 9
                  trace:
                    type: array
                    example:
                      -
                        file: 'D:\memberz-api\app\Http\Controllers\AuthController.php'
                        line: 172
                        function: logLogout
                        class: App\Services\AuthLogService
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Controller.php'
                        line: 54
                        function: logout
                        class: App\Http\Controllers\AuthController
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\ControllerDispatcher.php'
                        line: 43
                        function: callAction
                        class: Illuminate\Routing\Controller
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Route.php'
                        line: 260
                        function: dispatch
                        class: Illuminate\Routing\ControllerDispatcher
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Route.php'
                        line: 206
                        function: runController
                        class: Illuminate\Routing\Route
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                        line: 806
                        function: run
                        class: Illuminate\Routing\Route
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 144
                        function: 'Illuminate\Routing\{closure}'
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Middleware\SubstituteBindings.php'
                        line: 50
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Routing\Middleware\SubstituteBindings
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 119
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                        line: 805
                        function: then
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                        line: 784
                        function: runRouteWithinStack
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                        line: 748
                        function: runRoute
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                        line: 737
                        function: dispatchToRoute
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                        line: 200
                        function: dispatch
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 144
                        function: 'Illuminate\Foundation\Http\{closure}'
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: 'D:\memberz-api\app\Http\Middleware\Cors.php'
                        line: 34
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: App\Http\Middleware\Cors
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php'
                        line: 21
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull.php'
                        line: 31
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php'
                        line: 21
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TrimStrings.php'
                        line: 51
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TrimStrings
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Http\Middleware\ValidatePostSize.php'
                        line: 27
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Http\Middleware\ValidatePostSize
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance.php'
                        line: 110
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Http\Middleware\TrustProxies.php'
                        line: 57
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Http\Middleware\TrustProxies
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 119
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                        line: 175
                        function: then
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                        line: 144
                        function: sendRequestThroughRouter
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 310
                        function: handle
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 298
                        function: callLaravelOrLumenRoute
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 91
                        function: makeApiCall
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 44
                        function: makeResponseCall
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 35
                        function: makeResponseCallIfConditionsPass
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                        line: 236
                        function: __invoke
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                        line: 163
                        function: iterateThroughStrategies
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                        line: 95
                        function: fetchResponses
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                        line: 125
                        function: processRoute
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                        line: 72
                        function: extractEndpointsInfoFromLaravelApp
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                        line: 50
                        function: extractEndpointsInfoAndWriteToDisk
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Commands\GenerateDocumentation.php'
                        line: 53
                        function: get
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                        line: 36
                        function: handle
                        class: Knuckles\Scribe\Commands\GenerateDocumentation
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Util.php'
                        line: 41
                        function: 'Illuminate\Container\{closure}'
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                        line: 93
                        function: unwrapIfClosure
                        class: Illuminate\Container\Util
                        type: '::'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                        line: 35
                        function: callBoundMethod
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Container.php'
                        line: 662
                        function: call
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Console\Command.php'
                        line: 213
                        function: call
                        class: Illuminate\Container\Container
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\symfony\console\Command\Command.php'
                        line: 279
                        function: execute
                        class: Illuminate\Console\Command
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Console\Command.php'
                        line: 182
                        function: run
                        class: Symfony\Component\Console\Command\Command
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                        line: 1047
                        function: run
                        class: Illuminate\Console\Command
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                        line: 316
                        function: doRunCommand
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                        line: 167
                        function: doRun
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Console\Kernel.php'
                        line: 196
                        function: run
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: 'D:\memberz-api\artisan'
                        line: 35
                        function: handle
                        class: Illuminate\Foundation\Console\Kernel
                        type: '->'
                    items:
                      type: object
                      properties:
                        file:
                          type: string
                          example: 'D:\memberz-api\app\Http\Controllers\AuthController.php'
                        line:
                          type: integer
                          example: 172
                        function:
                          type: string
                          example: logLogout
                        class:
                          type: string
                          example: App\Services\AuthLogService
                        type:
                          type: string
                          example: '->'
      tags:
        - Auth
  /api/auth/refresh:
    post:
      summary: 'Refresh a token.'
      operationId: refreshAToken
      description: ''
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The token has been blacklisted'
                  exception: PHPOpenSourceSaver\JWTAuth\Exceptions\TokenBlacklistedException
                  file: 'D:\memberz-api\vendor\php-open-source-saver\jwt-auth\src\Manager.php'
                  line: 114
                  trace:
                    -
                      file: 'D:\memberz-api\vendor\php-open-source-saver\jwt-auth\src\Manager.php'
                      line: 132
                      function: decode
                      class: PHPOpenSourceSaver\JWTAuth\Manager
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\php-open-source-saver\jwt-auth\src\JWT.php'
                      line: 99
                      function: refresh
                      class: PHPOpenSourceSaver\JWTAuth\Manager
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\php-open-source-saver\jwt-auth\src\JWTGuard.php'
                      line: 201
                      function: refresh
                      class: PHPOpenSourceSaver\JWTAuth\JWT
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Auth\AuthManager.php'
                      line: 341
                      function: refresh
                      class: PHPOpenSourceSaver\JWTAuth\JWTGuard
                      type: '->'
                    -
                      file: 'D:\memberz-api\app\Http\Controllers\AuthController.php'
                      line: 186
                      function: __call
                      class: Illuminate\Auth\AuthManager
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Controller.php'
                      line: 54
                      function: refresh
                      class: App\Http\Controllers\AuthController
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\ControllerDispatcher.php'
                      line: 43
                      function: callAction
                      class: Illuminate\Routing\Controller
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Route.php'
                      line: 260
                      function: dispatch
                      class: Illuminate\Routing\ControllerDispatcher
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Route.php'
                      line: 206
                      function: runController
                      class: Illuminate\Routing\Route
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                      line: 806
                      function: run
                      class: Illuminate\Routing\Route
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 144
                      function: 'Illuminate\Routing\{closure}'
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Middleware\SubstituteBindings.php'
                      line: 50
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Routing\Middleware\SubstituteBindings
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 119
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                      line: 805
                      function: then
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                      line: 784
                      function: runRouteWithinStack
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                      line: 748
                      function: runRoute
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                      line: 737
                      function: dispatchToRoute
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                      line: 200
                      function: dispatch
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 144
                      function: 'Illuminate\Foundation\Http\{closure}'
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: 'D:\memberz-api\app\Http\Middleware\Cors.php'
                      line: 34
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: App\Http\Middleware\Cors
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php'
                      line: 21
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull.php'
                      line: 31
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php'
                      line: 21
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TrimStrings.php'
                      line: 51
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TrimStrings
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Http\Middleware\ValidatePostSize.php'
                      line: 27
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Http\Middleware\ValidatePostSize
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance.php'
                      line: 110
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Http\Middleware\TrustProxies.php'
                      line: 57
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Http\Middleware\TrustProxies
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 119
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                      line: 175
                      function: then
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                      line: 144
                      function: sendRequestThroughRouter
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 310
                      function: handle
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 298
                      function: callLaravelOrLumenRoute
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 91
                      function: makeApiCall
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 44
                      function: makeResponseCall
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 35
                      function: makeResponseCallIfConditionsPass
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                      line: 236
                      function: __invoke
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                      line: 163
                      function: iterateThroughStrategies
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                      line: 95
                      function: fetchResponses
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                      line: 125
                      function: processRoute
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                      line: 72
                      function: extractEndpointsInfoFromLaravelApp
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                      line: 50
                      function: extractEndpointsInfoAndWriteToDisk
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Commands\GenerateDocumentation.php'
                      line: 53
                      function: get
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                      line: 36
                      function: handle
                      class: Knuckles\Scribe\Commands\GenerateDocumentation
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Util.php'
                      line: 41
                      function: 'Illuminate\Container\{closure}'
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                      line: 93
                      function: unwrapIfClosure
                      class: Illuminate\Container\Util
                      type: '::'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                      line: 35
                      function: callBoundMethod
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Container.php'
                      line: 662
                      function: call
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Console\Command.php'
                      line: 213
                      function: call
                      class: Illuminate\Container\Container
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\symfony\console\Command\Command.php'
                      line: 279
                      function: execute
                      class: Illuminate\Console\Command
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Console\Command.php'
                      line: 182
                      function: run
                      class: Symfony\Component\Console\Command\Command
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                      line: 1047
                      function: run
                      class: Illuminate\Console\Command
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                      line: 316
                      function: doRunCommand
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                      line: 167
                      function: doRun
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Console\Kernel.php'
                      line: 196
                      function: run
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: 'D:\memberz-api\artisan'
                      line: 35
                      function: handle
                      class: Illuminate\Foundation\Console\Kernel
                      type: '->'
                properties:
                  message:
                    type: string
                    example: 'The token has been blacklisted'
                  exception:
                    type: string
                    example: PHPOpenSourceSaver\JWTAuth\Exceptions\TokenBlacklistedException
                  file:
                    type: string
                    example: 'D:\memberz-api\vendor\php-open-source-saver\jwt-auth\src\Manager.php'
                  line:
                    type: integer
                    example: 114
                  trace:
                    type: array
                    example:
                      -
                        file: 'D:\memberz-api\vendor\php-open-source-saver\jwt-auth\src\Manager.php'
                        line: 132
                        function: decode
                        class: PHPOpenSourceSaver\JWTAuth\Manager
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\php-open-source-saver\jwt-auth\src\JWT.php'
                        line: 99
                        function: refresh
                        class: PHPOpenSourceSaver\JWTAuth\Manager
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\php-open-source-saver\jwt-auth\src\JWTGuard.php'
                        line: 201
                        function: refresh
                        class: PHPOpenSourceSaver\JWTAuth\JWT
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Auth\AuthManager.php'
                        line: 341
                        function: refresh
                        class: PHPOpenSourceSaver\JWTAuth\JWTGuard
                        type: '->'
                      -
                        file: 'D:\memberz-api\app\Http\Controllers\AuthController.php'
                        line: 186
                        function: __call
                        class: Illuminate\Auth\AuthManager
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Controller.php'
                        line: 54
                        function: refresh
                        class: App\Http\Controllers\AuthController
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\ControllerDispatcher.php'
                        line: 43
                        function: callAction
                        class: Illuminate\Routing\Controller
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Route.php'
                        line: 260
                        function: dispatch
                        class: Illuminate\Routing\ControllerDispatcher
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Route.php'
                        line: 206
                        function: runController
                        class: Illuminate\Routing\Route
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                        line: 806
                        function: run
                        class: Illuminate\Routing\Route
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 144
                        function: 'Illuminate\Routing\{closure}'
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Middleware\SubstituteBindings.php'
                        line: 50
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Routing\Middleware\SubstituteBindings
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 119
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                        line: 805
                        function: then
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                        line: 784
                        function: runRouteWithinStack
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                        line: 748
                        function: runRoute
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                        line: 737
                        function: dispatchToRoute
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                        line: 200
                        function: dispatch
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 144
                        function: 'Illuminate\Foundation\Http\{closure}'
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: 'D:\memberz-api\app\Http\Middleware\Cors.php'
                        line: 34
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: App\Http\Middleware\Cors
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php'
                        line: 21
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull.php'
                        line: 31
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php'
                        line: 21
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TrimStrings.php'
                        line: 51
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TrimStrings
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Http\Middleware\ValidatePostSize.php'
                        line: 27
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Http\Middleware\ValidatePostSize
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance.php'
                        line: 110
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Http\Middleware\TrustProxies.php'
                        line: 57
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Http\Middleware\TrustProxies
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 119
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                        line: 175
                        function: then
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                        line: 144
                        function: sendRequestThroughRouter
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 310
                        function: handle
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 298
                        function: callLaravelOrLumenRoute
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 91
                        function: makeApiCall
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 44
                        function: makeResponseCall
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 35
                        function: makeResponseCallIfConditionsPass
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                        line: 236
                        function: __invoke
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                        line: 163
                        function: iterateThroughStrategies
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                        line: 95
                        function: fetchResponses
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                        line: 125
                        function: processRoute
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                        line: 72
                        function: extractEndpointsInfoFromLaravelApp
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                        line: 50
                        function: extractEndpointsInfoAndWriteToDisk
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Commands\GenerateDocumentation.php'
                        line: 53
                        function: get
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                        line: 36
                        function: handle
                        class: Knuckles\Scribe\Commands\GenerateDocumentation
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Util.php'
                        line: 41
                        function: 'Illuminate\Container\{closure}'
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                        line: 93
                        function: unwrapIfClosure
                        class: Illuminate\Container\Util
                        type: '::'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                        line: 35
                        function: callBoundMethod
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Container.php'
                        line: 662
                        function: call
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Console\Command.php'
                        line: 213
                        function: call
                        class: Illuminate\Container\Container
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\symfony\console\Command\Command.php'
                        line: 279
                        function: execute
                        class: Illuminate\Console\Command
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Console\Command.php'
                        line: 182
                        function: run
                        class: Symfony\Component\Console\Command\Command
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                        line: 1047
                        function: run
                        class: Illuminate\Console\Command
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                        line: 316
                        function: doRunCommand
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                        line: 167
                        function: doRun
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Console\Kernel.php'
                        line: 196
                        function: run
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: 'D:\memberz-api\artisan'
                        line: 35
                        function: handle
                        class: Illuminate\Foundation\Console\Kernel
                        type: '->'
                    items:
                      type: object
                      properties:
                        file:
                          type: string
                          example: 'D:\memberz-api\vendor\php-open-source-saver\jwt-auth\src\Manager.php'
                        line:
                          type: integer
                          example: 132
                        function:
                          type: string
                          example: decode
                        class:
                          type: string
                          example: PHPOpenSourceSaver\JWTAuth\Manager
                        type:
                          type: string
                          example: '->'
      tags:
        - Auth
  /api/auth/me:
    get:
      summary: 'User Profile'
      operationId: userProfile
      description: 'Get the authenticated User.'
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: Unauthenticated
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Unauthenticated
      tags:
        - Auth
  /api/2fa/send-code:
    post:
      summary: '2FA - Send Code'
      operationId: 2FASendCode
      description: ''
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                verification_type:
                  type: string
                  description: ''
                  example: est
              required:
                - verification_type
  /api/2fa/enable:
    post:
      summary: '2FA - Enable'
      operationId: 2FAEnable
      description: ''
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  description: ''
                  example: eligendi
              required:
                - code
  /api/2fa/disable:
    post:
      summary: '2FA - Disable'
      operationId: 2FADisable
      description: ''
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Auth
  /api/banks/count:
    get:
      summary: 'Count Resources'
      operationId: countResources
      description: 'Returns a simple count of data in this resource'
      parameters:
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Banks
  /api/banks/search:
    get:
      summary: 'Search Resources'
      operationId: searchResources
      description: "Allows searching for data in this resource using multiple options.\n\nOptions for searching\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
          example: qui
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
            example: qui
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Banks
  /api/banks:
    get:
      summary: 'Get All'
      operationId: getAll
      description: "Returns a list of items in this resource and allows filtering the data based on fields in the database\n\nOptions for searching / filtering\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Banks
    post:
      summary: 'Create Resource'
      operationId: createResource
      description: "Create a new record of this resource in the database. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message:
                    - 'validation error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: array
                    example:
                      - 'validation error message'
                    items:
                      type: string
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Details of error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Details of error message'
      tags:
        - Banks
  '/api/banks/{id}':
    get:
      summary: 'View Resource'
      operationId: viewResource
      description: "Returns information about a specific record in this resource. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - Banks
    put:
      summary: 'Update Resource'
      operationId: updateResource
      description: "Updates the data of the record with the specified `id`. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message:
                    - 'validation error messages'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: array
                    example:
                      - 'validation error messages'
                    items:
                      type: string
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Details of error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Details of error message'
      tags:
        - Banks
    delete:
      summary: 'Delete Resource'
      operationId: deleteResource
      description: 'Deletes the record with the specified `id`'
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Resource deleted'
                  data:
                    id: 1
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Resource deleted'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - Banks
    parameters:
      -
        in: path
        name: id
        description: 'The id of the resource to view'
        example: 13
        required: true
        schema:
          type: integer
  /api/batch:
    post:
      summary: 'Batch Request'
      operationId: batchRequest
      description: ''
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  responses: []
                properties:
                  responses:
                    type: array
                    example: []
      tags:
        - 'Batch Requests'
  /api/organisation_members/birthdays:
    get:
      summary: ''
      operationId: getApiOrganisation_membersBirthdays
      description: ''
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Birthdays
  /api/organisation_members/birthdays/summary:
    get:
      summary: 'Birthday Summary'
      operationId: birthdaySummary
      description: 'Get quick information about birthdays happening with the current month'
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Birthdays
  /api/contribution_receipt_settings:
    get:
      summary: 'Get Settings'
      operationId: getSettings
      description: ''
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Contribution Receipt Settings'
    post:
      summary: 'Create Resource'
      operationId: createResource
      description: "Create a new record of this resource in the database. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message:
                    - 'validation error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: array
                    example:
                      - 'validation error message'
                    items:
                      type: string
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Details of error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Details of error message'
      tags:
        - 'Contribution Receipt Settings'
  '/api/contribution_receipt_settings/{id}':
    put:
      summary: 'Update Settings'
      operationId: updateSettings
      description: ''
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Contribution Receipt Settings'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                organisation_id:
                  type: numeric
                  description: 'Organisation id'
                  example: facere
                receipt_mode:
                  type: string
                  description: "'auto|manual'"
                  example: qui
                receipt_prefix:
                  type: string
                  description: ''
                  example: quos
                receipt_postfix:
                  type: string
                  description: ''
                  example: enim
                receipt_counter:
                  type: numeric
                  description: ''
                  example: cupiditate
                default_currency:
                  type: numeric
                  description: 'default currency id'
                  example: est
                sms_notify:
                  type: boolean
                  description: ''
                  example: true
              required:
                - organisation_id
                - receipt_mode
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the contribution receipt setting.'
        example: 1
        required: true
        schema:
          type: integer
  /api/contribution_receipts/count:
    get:
      summary: 'Count Resources'
      operationId: countResources
      description: 'Returns a simple count of data in this resource'
      parameters:
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Contribution Receipts'
  /api/contribution_receipts/search:
    get:
      summary: 'Search Resources'
      operationId: searchResources
      description: "Allows searching for data in this resource using multiple options.\n\nOptions for searching\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
          example: omnis
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
            example: omnis
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Contribution Receipts'
  /api/contribution_receipts:
    get:
      summary: 'Get All'
      operationId: getAll
      description: "Returns a list of items in this resource and allows filtering the data based on fields in the database\n\nOptions for searching / filtering\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Contribution Receipts'
    post:
      summary: 'Create Resource'
      operationId: createResource
      description: "Create a new record of this resource in the database. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message:
                    - 'validation error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: array
                    example:
                      - 'validation error message'
                    items:
                      type: string
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Details of error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Details of error message'
      tags:
        - 'Contribution Receipts'
  '/api/contribution_receipts/{id}':
    get:
      summary: 'View Resource'
      operationId: viewResource
      description: "Returns information about a specific record in this resource. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'Contribution Receipts'
    put:
      summary: 'Update Resource'
      operationId: updateResource
      description: "Updates the data of the record with the specified `id`. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message:
                    - 'validation error messages'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: array
                    example:
                      - 'validation error messages'
                    items:
                      type: string
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Details of error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Details of error message'
      tags:
        - 'Contribution Receipts'
    delete:
      summary: 'Delete Resource'
      operationId: deleteResource
      description: 'Deletes the record with the specified `id`'
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Resource deleted'
                  data:
                    id: 1
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Resource deleted'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'Contribution Receipts'
    parameters:
      -
        in: path
        name: id
        description: 'The id of the resource to view'
        example: 8
        required: true
        schema:
          type: integer
  /api/contribution_summaries:
    get:
      summary: 'Get Contribution Summaries'
      operationId: getContributionSummaries
      description: ''
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Contribution Summary Reports'
  /api/contribution_summaries/weekly_breakdown:
    get:
      summary: 'Report by Weekly Breakdown'
      operationId: reportByWeeklyBreakdown
      description: ''
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Contribution Summary Reports'
  /api/contribution_summaries/totals_by_category:
    get:
      summary: 'Total Contributions By Type'
      operationId: totalContributionsByType
      description: ''
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Contribution Summary Reports'
  /api/contribution_summaries/category_breakdown:
    get:
      summary: 'Contribution Summaries By Category'
      operationId: contributionSummariesByCategory
      description: ''
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Contribution Summary Reports'
  /api/contribution_summaries/trend_report:
    get:
      summary: 'Contribution Trends'
      operationId: contributionTrends
      description: ''
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Contribution Summary Reports'
  /api/contribution_types/count:
    get:
      summary: 'Count Resources'
      operationId: countResources
      description: 'Returns a simple count of data in this resource'
      parameters:
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Contribution Types'
  /api/contribution_types/search:
    get:
      summary: 'Search Resources'
      operationId: searchResources
      description: "Allows searching for data in this resource using multiple options.\n\nOptions for searching\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
          example: dolores
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
            example: dolores
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Contribution Types'
  /api/contribution_types:
    get:
      summary: 'Get All'
      operationId: getAll
      description: "Returns a list of items in this resource and allows filtering the data based on fields in the database\n\nOptions for searching / filtering\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Contribution Types'
    post:
      summary: 'Create Resource'
      operationId: createResource
      description: "Create a new record of this resource in the database. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message:
                    - 'validation error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: array
                    example:
                      - 'validation error message'
                    items:
                      type: string
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Details of error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Details of error message'
      tags:
        - 'Contribution Types'
  '/api/contribution_types/{id}':
    get:
      summary: 'View Resource'
      operationId: viewResource
      description: "Returns information about a specific record in this resource. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'Contribution Types'
    put:
      summary: 'Update Resource'
      operationId: updateResource
      description: "Updates the data of the record with the specified `id`. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message:
                    - 'validation error messages'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: array
                    example:
                      - 'validation error messages'
                    items:
                      type: string
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Details of error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Details of error message'
      tags:
        - 'Contribution Types'
    delete:
      summary: 'Delete Resource'
      operationId: deleteResource
      description: 'Deletes the record with the specified `id`'
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Resource deleted'
                  data:
                    id: 1
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Resource deleted'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'Contribution Types'
    parameters:
      -
        in: path
        name: id
        description: 'The id of the resource to view'
        example: 13
        required: true
        schema:
          type: integer
  /api/contribution_payment_types/count:
    get:
      summary: 'Count Resources'
      operationId: countResources
      description: 'Returns a simple count of data in this resource'
      parameters:
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Contribution Types'
  /api/contribution_payment_types/search:
    get:
      summary: 'Search Resources'
      operationId: searchResources
      description: "Allows searching for data in this resource using multiple options.\n\nOptions for searching\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
          example: consequatur
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
            example: consequatur
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Contribution Types'
  /api/contribution_payment_types:
    get:
      summary: 'Get All'
      operationId: getAll
      description: "Returns a list of items in this resource and allows filtering the data based on fields in the database\n\nOptions for searching / filtering\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Contribution Types'
    post:
      summary: 'Create Resource'
      operationId: createResource
      description: "Create a new record of this resource in the database. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message:
                    - 'validation error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: array
                    example:
                      - 'validation error message'
                    items:
                      type: string
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Details of error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Details of error message'
      tags:
        - 'Contribution Types'
  '/api/contribution_payment_types/{id}':
    get:
      summary: 'View Resource'
      operationId: viewResource
      description: "Returns information about a specific record in this resource. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'Contribution Types'
    put:
      summary: 'Update Resource'
      operationId: updateResource
      description: "Updates the data of the record with the specified `id`. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message:
                    - 'validation error messages'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: array
                    example:
                      - 'validation error messages'
                    items:
                      type: string
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Details of error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Details of error message'
      tags:
        - 'Contribution Types'
    delete:
      summary: 'Delete Resource'
      operationId: deleteResource
      description: 'Deletes the record with the specified `id`'
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Resource deleted'
                  data:
                    id: 1
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Resource deleted'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'Contribution Types'
    parameters:
      -
        in: path
        name: id
        description: 'The id of the resource to view'
        example: 1
        required: true
        schema:
          type: integer
  /api/contributions/available_years:
    get:
      summary: 'Get Available Years'
      operationId: getAvailableYears
      description: ''
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Contributions
  /api/contributions/count:
    get:
      summary: 'Count Resources'
      operationId: countResources
      description: 'Returns a simple count of data in this resource'
      parameters:
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Contributions
  /api/contributions/search:
    get:
      summary: 'Search Resources'
      operationId: searchResources
      description: "Allows searching for data in this resource using multiple options.\n\nOptions for searching\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
          example: eum
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
            example: eum
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Contributions
  /api/contributions:
    get:
      summary: 'Get All'
      operationId: getAll
      description: "Returns a list of items in this resource and allows filtering the data based on fields in the database\n\nOptions for searching / filtering\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Contributions
    post:
      summary: 'Create Contribution'
      operationId: createContribution
      description: ''
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    organisation_id: 21
                    organisation_member_id: null
                    module_contribution_type_id: 2
                    module_contribution_receipt_id: 1
                    description: ''
                    week: 4
                    month: 1
                    year: 2015
                    module_contribution_payment_type_id: 1
                    cheque_status: 'Not Cleared'
                    cheque_number: null
                    bank_id: null
                    amount: 10
                    currency_id: 80
                    organisation_file_import_id: null
                    created: '2015-01-19T12:54:00.000000Z'
                    modified: '2015-07-31T08:28:49.000000Z'
                    active: true
                    contribution_type:
                      id: 2
                      organisation_id: 21
                      name: Welfare
                      description: 'Welfare Collection'
                      member_required: ''
                      fix_amount_per_period: false
                      currency_id: null
                      fixed_amount: null
                      system_generated: false
                      created: null
                      modified: null
                      active: true
                    member_id: null
                    member_name: null
                    payment_type: Cash
                    currency_code: GHS
                    receipt_no: '11'
                    receipt_dt: '2015-07-31'
                    month_name: January
                    bank: null
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      organisation_id:
                        type: integer
                        example: 21
                      organisation_member_id:
                        type: string
                        example: null
                      module_contribution_type_id:
                        type: integer
                        example: 2
                      module_contribution_receipt_id:
                        type: integer
                        example: 1
                      description:
                        type: string
                        example: ''
                      week:
                        type: integer
                        example: 4
                      month:
                        type: integer
                        example: 1
                      year:
                        type: integer
                        example: 2015
                      module_contribution_payment_type_id:
                        type: integer
                        example: 1
                      cheque_status:
                        type: string
                        example: 'Not Cleared'
                      cheque_number:
                        type: string
                        example: null
                      bank_id:
                        type: string
                        example: null
                      amount:
                        type: integer
                        example: 10
                      currency_id:
                        type: integer
                        example: 80
                      organisation_file_import_id:
                        type: string
                        example: null
                      created:
                        type: string
                        example: '2015-01-19T12:54:00.000000Z'
                      modified:
                        type: string
                        example: '2015-07-31T08:28:49.000000Z'
                      active:
                        type: boolean
                        example: true
                      contribution_type:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 2
                          organisation_id:
                            type: integer
                            example: 21
                          name:
                            type: string
                            example: Welfare
                          description:
                            type: string
                            example: 'Welfare Collection'
                          member_required:
                            type: string
                            example: ''
                          fix_amount_per_period:
                            type: boolean
                            example: false
                          currency_id:
                            type: string
                            example: null
                          fixed_amount:
                            type: string
                            example: null
                          system_generated:
                            type: boolean
                            example: false
                          created:
                            type: string
                            example: null
                          modified:
                            type: string
                            example: null
                          active:
                            type: boolean
                            example: true
                      member_id:
                        type: string
                        example: null
                      member_name:
                        type: string
                        example: null
                      payment_type:
                        type: string
                        example: Cash
                      currency_code:
                        type: string
                        example: GHS
                      receipt_no:
                        type: string
                        example: '11'
                      receipt_dt:
                        type: string
                        example: '2015-07-31'
                      month_name:
                        type: string
                        example: January
                      bank:
                        type: string
                        example: null
      tags:
        - Contributions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                organisation_id:
                  type: numeric
                  description: 'Organisation id.'
                  example: '1'
                organisation_member_id:
                  type: numeric
                  description: 'Organisation Member id.'
                  example: '1234'
                module_contribution_type_id:
                  type: numeric
                  description: 'Module contribution type id.'
                  example: '1'
                module_contribution_receipt_id:
                  type: numeric
                  description: 'Module contribution receipt id.'
                  example: '12'
                module_contribution_payment_type_id:
                  type: numeric
                  description: 'Module contribution payment type id.'
                  example: '1'
                bank_id:
                  type: numeric
                  description: 'Bank id.'
                  example: '123'
                currency_id:
                  type: numeric
                  description: 'Currency id.'
                  example: '15'
                organisation_file_import_id:
                  type: numeric
                  description: 'Organisation file import id.'
                  example: '145'
                description:
                  type: string
                  description: Description.
                  example: 'Monthly payment'
                week:
                  type: numeric
                  description: Week.
                  example: '1'
                month:
                  type: numeric
                  description: month.
                  example: '11'
                year:
                  type: numeric
                  description: year.
                  example: '2020'
                cheque_status:
                  type: enum
                  description: "'Cleared|Not Cleared'."
                  example: Cleared
                cheque_number:
                  type: string
                  description: 'Cheque Number.'
                  example: '001010'
                amount:
                  type: numeric
                  description: Amount.
                  example: '80'
                receipt_no:
                  type: string
                  description: 'Receipt no.'
                  example: '010010'
                receipt_dt:
                  type: date
                  description: 'Receipt date.'
                  example: '2020-01-01'
                active:
                  type: boolean
                  description: 'Active:'
                  example: true
                send_sms:
                  type: boolean
                  description: ''
                  example: true
              required:
                - receipt_no
                - receipt_dt
                - send_sms
  '/api/contributions/{id}':
    get:
      summary: 'View Resource'
      operationId: viewResource
      description: "Returns information about a specific record in this resource. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - Contributions
    put:
      summary: 'Update Contribution'
      operationId: updateContribution
      description: ''
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    organisation_id: 21
                    organisation_member_id: null
                    module_contribution_type_id: 2
                    module_contribution_receipt_id: 1
                    description: ''
                    week: 4
                    month: 1
                    year: 2015
                    module_contribution_payment_type_id: 1
                    cheque_status: 'Not Cleared'
                    cheque_number: null
                    bank_id: null
                    amount: 10
                    currency_id: 80
                    organisation_file_import_id: null
                    created: '2015-01-19T12:54:00.000000Z'
                    modified: '2015-07-31T08:28:49.000000Z'
                    active: true
                    contribution_type:
                      id: 2
                      organisation_id: 21
                      name: Welfare
                      description: 'Welfare Collection'
                      member_required: ''
                      fix_amount_per_period: false
                      currency_id: null
                      fixed_amount: null
                      system_generated: false
                      created: null
                      modified: null
                      active: true
                    member_id: null
                    member_name: null
                    payment_type: Cash
                    currency_code: GHS
                    receipt_no: '11'
                    receipt_dt: '2015-07-31'
                    month_name: January
                    bank: null
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      organisation_id:
                        type: integer
                        example: 21
                      organisation_member_id:
                        type: string
                        example: null
                      module_contribution_type_id:
                        type: integer
                        example: 2
                      module_contribution_receipt_id:
                        type: integer
                        example: 1
                      description:
                        type: string
                        example: ''
                      week:
                        type: integer
                        example: 4
                      month:
                        type: integer
                        example: 1
                      year:
                        type: integer
                        example: 2015
                      module_contribution_payment_type_id:
                        type: integer
                        example: 1
                      cheque_status:
                        type: string
                        example: 'Not Cleared'
                      cheque_number:
                        type: string
                        example: null
                      bank_id:
                        type: string
                        example: null
                      amount:
                        type: integer
                        example: 10
                      currency_id:
                        type: integer
                        example: 80
                      organisation_file_import_id:
                        type: string
                        example: null
                      created:
                        type: string
                        example: '2015-01-19T12:54:00.000000Z'
                      modified:
                        type: string
                        example: '2015-07-31T08:28:49.000000Z'
                      active:
                        type: boolean
                        example: true
                      contribution_type:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 2
                          organisation_id:
                            type: integer
                            example: 21
                          name:
                            type: string
                            example: Welfare
                          description:
                            type: string
                            example: 'Welfare Collection'
                          member_required:
                            type: string
                            example: ''
                          fix_amount_per_period:
                            type: boolean
                            example: false
                          currency_id:
                            type: string
                            example: null
                          fixed_amount:
                            type: string
                            example: null
                          system_generated:
                            type: boolean
                            example: false
                          created:
                            type: string
                            example: null
                          modified:
                            type: string
                            example: null
                          active:
                            type: boolean
                            example: true
                      member_id:
                        type: string
                        example: null
                      member_name:
                        type: string
                        example: null
                      payment_type:
                        type: string
                        example: Cash
                      currency_code:
                        type: string
                        example: GHS
                      receipt_no:
                        type: string
                        example: '11'
                      receipt_dt:
                        type: string
                        example: '2015-07-31'
                      month_name:
                        type: string
                        example: January
                      bank:
                        type: string
                        example: null
      tags:
        - Contributions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                organisation_id:
                  type: numeric
                  description: 'Organisation id.'
                  example: '1'
                organisation_member_id:
                  type: numeric
                  description: 'Organisation Member id.'
                  example: '1234'
                module_contribution_type_id:
                  type: numeric
                  description: 'Module contribution type id.'
                  example: '1'
                module_contribution_receipt_id:
                  type: numeric
                  description: 'Module contribution receipt id.'
                  example: '12'
                module_contribution_payment_type_id:
                  type: numeric
                  description: 'Module contribution payment type id.'
                  example: '1'
                bank_id:
                  type: numeric
                  description: 'Bank id.'
                  example: '123'
                currency_id:
                  type: numeric
                  description: 'Currency id.'
                  example: '15'
                organisation_file_import_id:
                  type: numeric
                  description: 'Organisation file import id.'
                  example: '145'
                description:
                  type: string
                  description: Description.
                  example: 'Monthly payment'
                week:
                  type: numeric
                  description: Week.
                  example: '1'
                month:
                  type: numeric
                  description: month.
                  example: '11'
                year:
                  type: numeric
                  description: year.
                  example: '2020'
                cheque_status:
                  type: enum
                  description: "'Cleared|Not Cleared'."
                  example: Cleared
                cheque_number:
                  type: string
                  description: 'Cheque Number.'
                  example: '001010'
                amount:
                  type: numeric
                  description: Amount.
                  example: '80'
                receipt_no:
                  type: string
                  description: 'Receipt no.'
                  example: '010010'
                receipt_dt:
                  type: date
                  description: 'Receipt date.'
                  example: '2020-01-01'
                active:
                  type: boolean
                  description: 'Active:'
                  example: true
                send_sms:
                  type: boolean
                  description: ''
                  example: false
              required:
                - receipt_no
                - receipt_dt
                - send_sms
    delete:
      summary: 'Delete Resource'
      operationId: deleteResource
      description: 'Deletes the record with the specified `id`'
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Resource deleted'
                  data:
                    id: 1
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Resource deleted'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - Contributions
    parameters:
      -
        in: path
        name: id
        description: 'The id of the resource to view'
        example: 6
        required: true
        schema:
          type: integer
  /api/countries/count:
    get:
      summary: 'Count Resources'
      operationId: countResources
      description: 'Returns a simple count of data in this resource'
      parameters:
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Countries
  /api/countries/search:
    get:
      summary: 'Search Resources'
      operationId: searchResources
      description: "Allows searching for data in this resource using multiple options.\n\nOptions for searching\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
          example: consequatur
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
            example: consequatur
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Countries
  /api/countries:
    get:
      summary: 'Get All'
      operationId: getAll
      description: "Returns a list of items in this resource and allows filtering the data based on fields in the database\n\nOptions for searching / filtering\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Countries
    post:
      summary: 'Create Resource'
      operationId: createResource
      description: "Create a new record of this resource in the database. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message:
                    - 'validation error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: array
                    example:
                      - 'validation error message'
                    items:
                      type: string
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Details of error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Details of error message'
      tags:
        - Countries
  '/api/countries/{id}':
    get:
      summary: 'View Resource'
      operationId: viewResource
      description: "Returns information about a specific record in this resource. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - Countries
    put:
      summary: 'Update Resource'
      operationId: updateResource
      description: "Updates the data of the record with the specified `id`. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message:
                    - 'validation error messages'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: array
                    example:
                      - 'validation error messages'
                    items:
                      type: string
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Details of error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Details of error message'
      tags:
        - Countries
    delete:
      summary: 'Delete Resource'
      operationId: deleteResource
      description: 'Deletes the record with the specified `id`'
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Resource deleted'
                  data:
                    id: 1
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Resource deleted'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - Countries
    parameters:
      -
        in: path
        name: id
        description: 'The id of the resource to view'
        example: 9
        required: true
        schema:
          type: integer
  /api/currencies/count:
    get:
      summary: 'Count Resources'
      operationId: countResources
      description: 'Returns a simple count of data in this resource'
      parameters:
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Currencies
  /api/currencies/search:
    get:
      summary: 'Search Resources'
      operationId: searchResources
      description: "Allows searching for data in this resource using multiple options.\n\nOptions for searching\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
          example: earum
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
            example: earum
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Currencies
  /api/currencies:
    get:
      summary: 'Get All'
      operationId: getAll
      description: "Returns a list of items in this resource and allows filtering the data based on fields in the database\n\nOptions for searching / filtering\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Currencies
    post:
      summary: 'Create Resource'
      operationId: createResource
      description: "Create a new record of this resource in the database. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message:
                    - 'validation error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: array
                    example:
                      - 'validation error message'
                    items:
                      type: string
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Details of error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Details of error message'
      tags:
        - Currencies
  '/api/currencies/{id}':
    get:
      summary: 'View Resource'
      operationId: viewResource
      description: "Returns information about a specific record in this resource. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - Currencies
    put:
      summary: 'Update Resource'
      operationId: updateResource
      description: "Updates the data of the record with the specified `id`. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message:
                    - 'validation error messages'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: array
                    example:
                      - 'validation error messages'
                    items:
                      type: string
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Details of error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Details of error message'
      tags:
        - Currencies
    delete:
      summary: 'Delete Resource'
      operationId: deleteResource
      description: 'Deletes the record with the specified `id`'
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Resource deleted'
                  data:
                    id: 1
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Resource deleted'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - Currencies
    parameters:
      -
        in: path
        name: id
        description: 'The id of the resource to view'
        example: 18
        required: true
        schema:
          type: integer
  '/api/events/{event_id}/register':
    post:
      summary: 'Handle the incoming request.'
      operationId: handleTheIncomingRequest
      description: ''
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                organisation_event_id:
                  type: number
                  description: ''
                  example: 2261.3077
                organisation_event_session_id:
                  type: number
                  description: ''
                  example: 51.69
                organisation_member_ids:
                  type: object
                  description: 'This field is required when none of <code>membership_uuids</code> and <code>member_ids</code> are present.'
                  example: null
                  properties: {  }
                membership_uuids:
                  type: object
                  description: 'This field is required when none of <code>organisation_member_ids</code> and <code>member_ids</code> are present.'
                  example: null
                  properties: {  }
                member_ids:
                  type: object
                  description: 'This field is required when none of <code>membership_uuids</code> and <code>organisation_member_ids</code> are present.'
                  example: null
                  properties: {  }
              required:
                - organisation_event_id
                - organisation_event_session_id
    parameters:
      -
        in: path
        name: event_id
        description: 'The ID of the event.'
        example: 1
        required: true
        schema:
          type: integer
  /api/event_attendees/count:
    get:
      summary: 'Count Resources'
      operationId: countResources
      description: 'Returns a simple count of data in this resource'
      parameters:
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Event Attendees'
  /api/event_attendees/search:
    get:
      summary: 'Search Resources'
      operationId: searchResources
      description: "Allows searching for data in this resource using multiple options.\n\nOptions for searching\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
          example: eos
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
            example: eos
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Event Attendees'
  /api/event_attendees:
    get:
      summary: 'Get All'
      operationId: getAll
      description: "Returns a list of items in this resource and allows filtering the data based on fields in the database\n\nOptions for searching / filtering\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Event Attendees'
    post:
      summary: 'Create Resource'
      operationId: createResource
      description: "Create a new record of this resource in the database. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message:
                    - 'validation error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: array
                    example:
                      - 'validation error message'
                    items:
                      type: string
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Details of error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Details of error message'
      tags:
        - 'Event Attendees'
  '/api/event_attendees/{id}':
    get:
      summary: 'View Resource'
      operationId: viewResource
      description: "Returns information about a specific record in this resource. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'Event Attendees'
    put:
      summary: 'Update Resource'
      operationId: updateResource
      description: "Updates the data of the record with the specified `id`. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message:
                    - 'validation error messages'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: array
                    example:
                      - 'validation error messages'
                    items:
                      type: string
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Details of error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Details of error message'
      tags:
        - 'Event Attendees'
    delete:
      summary: 'Delete Resource'
      operationId: deleteResource
      description: 'Deletes the record with the specified `id`'
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Resource deleted'
                  data:
                    id: 1
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Resource deleted'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'Event Attendees'
    parameters:
      -
        in: path
        name: id
        description: 'The id of the resource to view'
        example: 4
        required: true
        schema:
          type: integer
  /api/calendars/count:
    get:
      summary: 'Count Resources'
      operationId: countResources
      description: 'Returns a simple count of data in this resource'
      parameters:
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Event Calendars'
  /api/calendars/search:
    get:
      summary: 'Search Resources'
      operationId: searchResources
      description: "Allows searching for data in this resource using multiple options.\n\nOptions for searching\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
          example: est
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
            example: est
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Event Calendars'
  /api/calendars:
    get:
      summary: 'Get All'
      operationId: getAll
      description: "Returns a list of items in this resource and allows filtering the data based on fields in the database\n\nOptions for searching / filtering\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Event Calendars'
    post:
      summary: 'Create Resource'
      operationId: createResource
      description: "Create a new record of this resource in the database. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message:
                    - 'validation error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: array
                    example:
                      - 'validation error message'
                    items:
                      type: string
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Details of error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Details of error message'
      tags:
        - 'Event Calendars'
  '/api/calendars/{id}':
    get:
      summary: 'View Resource'
      operationId: viewResource
      description: "Returns information about a specific record in this resource. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'Event Calendars'
    put:
      summary: 'Update Resource'
      operationId: updateResource
      description: "Updates the data of the record with the specified `id`. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message:
                    - 'validation error messages'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: array
                    example:
                      - 'validation error messages'
                    items:
                      type: string
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Details of error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Details of error message'
      tags:
        - 'Event Calendars'
    delete:
      summary: 'Delete Resource'
      operationId: deleteResource
      description: 'Deletes the record with the specified `id`'
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Resource deleted'
                  data:
                    id: 1
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Resource deleted'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'Event Calendars'
    parameters:
      -
        in: path
        name: id
        description: 'The id of the resource to view'
        example: 4
        required: true
        schema:
          type: integer
  /api/event_reminder_broadcasts/count:
    get:
      summary: 'Count Resources'
      operationId: countResources
      description: 'Returns a simple count of data in this resource'
      parameters:
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Event Reminder Broadcasts'
  /api/event_reminder_broadcasts/search:
    get:
      summary: 'Search Resources'
      operationId: searchResources
      description: "Allows searching for data in this resource using multiple options.\n\nOptions for searching\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
          example: id
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
            example: id
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Event Reminder Broadcasts'
  /api/event_reminder_broadcasts:
    get:
      summary: 'Get All'
      operationId: getAll
      description: "Returns a list of items in this resource and allows filtering the data based on fields in the database\n\nOptions for searching / filtering\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Event Reminder Broadcasts'
    post:
      summary: 'Create Resource'
      operationId: createResource
      description: "Create a new record of this resource in the database. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message:
                    - 'validation error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: array
                    example:
                      - 'validation error message'
                    items:
                      type: string
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Details of error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Details of error message'
      tags:
        - 'Event Reminder Broadcasts'
  '/api/event_reminder_broadcasts/{id}':
    get:
      summary: 'View Resource'
      operationId: viewResource
      description: "Returns information about a specific record in this resource. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'Event Reminder Broadcasts'
    put:
      summary: 'Update Resource'
      operationId: updateResource
      description: "Updates the data of the record with the specified `id`. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message:
                    - 'validation error messages'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: array
                    example:
                      - 'validation error messages'
                    items:
                      type: string
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Details of error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Details of error message'
      tags:
        - 'Event Reminder Broadcasts'
    delete:
      summary: 'Delete Resource'
      operationId: deleteResource
      description: 'Deletes the record with the specified `id`'
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Resource deleted'
                  data:
                    id: 1
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Resource deleted'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'Event Reminder Broadcasts'
    parameters:
      -
        in: path
        name: id
        description: 'The id of the resource to view'
        example: 19
        required: true
        schema:
          type: integer
  /api/event_reminders/count:
    get:
      summary: 'Count Resources'
      operationId: countResources
      description: 'Returns a simple count of data in this resource'
      parameters:
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Event Reminders'
  /api/event_reminders/search:
    get:
      summary: 'Search Resources'
      operationId: searchResources
      description: "Allows searching for data in this resource using multiple options.\n\nOptions for searching\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
          example: exercitationem
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
            example: exercitationem
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Event Reminders'
  /api/event_reminders:
    get:
      summary: 'Get All'
      operationId: getAll
      description: "Returns a list of items in this resource and allows filtering the data based on fields in the database\n\nOptions for searching / filtering\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Event Reminders'
    post:
      summary: 'Create Resource'
      operationId: createResource
      description: "Create a new record of this resource in the database. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message:
                    - 'validation error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: array
                    example:
                      - 'validation error message'
                    items:
                      type: string
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Details of error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Details of error message'
      tags:
        - 'Event Reminders'
  '/api/event_reminders/{id}':
    get:
      summary: 'View Resource'
      operationId: viewResource
      description: "Returns information about a specific record in this resource. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'Event Reminders'
    put:
      summary: 'Update Resource'
      operationId: updateResource
      description: "Updates the data of the record with the specified `id`. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message:
                    - 'validation error messages'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: array
                    example:
                      - 'validation error messages'
                    items:
                      type: string
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Details of error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Details of error message'
      tags:
        - 'Event Reminders'
    delete:
      summary: 'Delete Resource'
      operationId: deleteResource
      description: 'Deletes the record with the specified `id`'
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Resource deleted'
                  data:
                    id: 1
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Resource deleted'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'Event Reminders'
    parameters:
      -
        in: path
        name: id
        description: 'The id of the resource to view'
        example: 17
        required: true
        schema:
          type: integer
  /api/event_sessions/count:
    get:
      summary: 'Count Resources'
      operationId: countResources
      description: 'Returns a simple count of data in this resource'
      parameters:
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Event Sessions'
  /api/event_sessions/search:
    get:
      summary: 'Search Resources'
      operationId: searchResources
      description: "Allows searching for data in this resource using multiple options.\n\nOptions for searching\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
          example: velit
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
            example: velit
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Event Sessions'
  /api/event_sessions:
    get:
      summary: 'Get All'
      operationId: getAll
      description: "Returns a list of items in this resource and allows filtering the data based on fields in the database\n\nOptions for searching / filtering\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Event Sessions'
    post:
      summary: ''
      operationId: postApiEvent_sessions
      description: ''
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Event Sessions'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                organisation_id:
                  type: number
                  description: ''
                  example: 122704588.85019
                organisation_event_id:
                  type: number
                  description: ''
                  example: 4391.17
                name:
                  type: string
                  description: ''
                  example: sint
                session_dt:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2024-11-08T10:13:06'
                session_name:
                  type: string
                  description: ''
                  example: reiciendis
                registration_code:
                  type: string
                  description: ''
                  example: et
              required:
                - organisation_id
                - organisation_event_id
                - name
                - session_dt
                - session_name
  '/api/event_sessions/{id}':
    get:
      summary: 'View Resource'
      operationId: viewResource
      description: "Returns information about a specific record in this resource. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'Event Sessions'
    put:
      summary: ''
      operationId: putApiEvent_sessionsId
      description: ''
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Event Sessions'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                organisation_id:
                  type: number
                  description: ''
                  example: 2.0
                organisation_event_id:
                  type: number
                  description: ''
                  example: 1496.0
                name:
                  type: string
                  description: ''
                  example: ut
                session_dt:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2024-11-08T10:13:06'
                session_name:
                  type: string
                  description: ''
                  example: et
                registration_code:
                  type: string
                  description: ''
                  example: velit
              required:
                - organisation_id
                - organisation_event_id
                - name
                - session_dt
                - session_name
    delete:
      summary: 'Delete Resource'
      operationId: deleteResource
      description: 'Deletes the record with the specified `id`'
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Resource deleted'
                  data:
                    id: 1
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Resource deleted'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'Event Sessions'
    parameters:
      -
        in: path
        name: id
        description: 'The id of the resource to view'
        example: 12
        required: true
        schema:
          type: integer
  '/api/events/{event_id}/attendees':
    get:
      summary: ''
      operationId: getApiEventsEvent_idAttendees
      description: ''
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Events
    parameters:
      -
        in: path
        name: event_id
        description: 'The ID of the event.'
        example: 1
        required: true
        schema:
          type: integer
  /api/events/statistics:
    get:
      summary: ''
      operationId: getApiEventsStatistics
      description: ''
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Events
  /api/events/count:
    get:
      summary: 'Count Resources'
      operationId: countResources
      description: 'Returns a simple count of data in this resource'
      parameters:
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Events
  /api/events/search:
    get:
      summary: 'Search Resources'
      operationId: searchResources
      description: "Allows searching for data in this resource using multiple options.\n\nOptions for searching\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
          example: ad
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
            example: ad
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Events
  /api/events:
    get:
      summary: 'Get All'
      operationId: getAll
      description: "Returns a list of items in this resource and allows filtering the data based on fields in the database\n\nOptions for searching / filtering\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Events
    post:
      summary: 'Create Resource'
      operationId: createResource
      description: "Create a new record of this resource in the database. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message:
                    - 'validation error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: array
                    example:
                      - 'validation error message'
                    items:
                      type: string
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Details of error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Details of error message'
      tags:
        - Events
  '/api/events/{id}':
    get:
      summary: ''
      operationId: getApiEventsId
      description: ''
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Events
    put:
      summary: 'Update Resource'
      operationId: updateResource
      description: "Updates the data of the record with the specified `id`. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message:
                    - 'validation error messages'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: array
                    example:
                      - 'validation error messages'
                    items:
                      type: string
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Details of error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Details of error message'
      tags:
        - Events
    delete:
      summary: 'Delete Resource'
      operationId: deleteResource
      description: 'Deletes the record with the specified `id`'
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Resource deleted'
                  data:
                    id: 1
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Resource deleted'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - Events
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the event.'
        example: impedit
        required: true
        schema:
          type: string
  /api/expense_account_balances/count:
    get:
      summary: 'Count Resources'
      operationId: countResources
      description: 'Returns a simple count of data in this resource'
      parameters:
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Expenditure - Account Balances'
  /api/expense_account_balances/search:
    get:
      summary: 'Search Resources'
      operationId: searchResources
      description: "Allows searching for data in this resource using multiple options.\n\nOptions for searching\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
          example: exercitationem
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
            example: exercitationem
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Expenditure - Account Balances'
  /api/expense_account_balances:
    get:
      summary: 'Get All'
      operationId: getAll
      description: "Returns a list of items in this resource and allows filtering the data based on fields in the database\n\nOptions for searching / filtering\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Expenditure - Account Balances'
    post:
      summary: ''
      operationId: postApiExpense_account_balances
      description: ''
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Expenditure - Account Balances'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                organisation_id:
                  type: number
                  description: ''
                  example: 219324.947
                currency_id:
                  type: number
                  description: ''
                  example: 74181.531
                module_contribution_account_id:
                  type: number
                  description: ''
                  example: 448345.025
                balance:
                  type: number
                  description: ''
                  example: 2192803.6
                balance_dt:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2024-11-08T10:13:08'
                member_account_id:
                  type: number
                  description: ''
                  example: 5562.29999
              required:
                - organisation_id
                - currency_id
                - module_contribution_account_id
                - balance
                - balance_dt
                - member_account_id
  '/api/expense_account_balances/{id}':
    get:
      summary: 'View Resource'
      operationId: viewResource
      description: "Returns information about a specific record in this resource. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'Expenditure - Account Balances'
    put:
      summary: ''
      operationId: putApiExpense_account_balancesId
      description: ''
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Expenditure - Account Balances'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                organisation_id:
                  type: number
                  description: ''
                  example: 901.50493549
                currency_id:
                  type: number
                  description: ''
                  example: 67571.1936
                module_contribution_account_id:
                  type: number
                  description: ''
                  example: 30.45941
                balance:
                  type: number
                  description: ''
                  example: 227.1
                balance_dt:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2024-11-08T10:13:08'
                member_account_id:
                  type: number
                  description: ''
                  example: 430.655322991
              required:
                - organisation_id
                - currency_id
                - module_contribution_account_id
                - balance
                - balance_dt
                - member_account_id
    delete:
      summary: 'Delete Resource'
      operationId: deleteResource
      description: 'Deletes the record with the specified `id`'
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Resource deleted'
                  data:
                    id: 1
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Resource deleted'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'Expenditure - Account Balances'
    parameters:
      -
        in: path
        name: id
        description: 'The id of the resource to view'
        example: 2
        required: true
        schema:
          type: integer
  /api/expense_accounts/count:
    get:
      summary: 'Count Resources'
      operationId: countResources
      description: 'Returns a simple count of data in this resource'
      parameters:
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Expenditure - Accounts'
  /api/expense_accounts/search:
    get:
      summary: 'Search Resources'
      operationId: searchResources
      description: "Allows searching for data in this resource using multiple options.\n\nOptions for searching\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
          example: ut
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
            example: ut
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Expenditure - Accounts'
  /api/expense_accounts:
    get:
      summary: 'Get All'
      operationId: getAll
      description: "Returns a list of items in this resource and allows filtering the data based on fields in the database\n\nOptions for searching / filtering\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Expenditure - Accounts'
    post:
      summary: ''
      operationId: postApiExpense_accounts
      description: ''
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Expenditure - Accounts'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                organisation_id:
                  type: number
                  description: ''
                  example: 4445.32
                currency_id:
                  type: number
                  description: ''
                  example: 3342023.7435643
                name:
                  type: string
                  description: ''
                  example: aut
                description:
                  type: string
                  description: ''
                  example: 'Magni corporis ipsam tempora officiis aut recusandae id.'
                account_type:
                  type: string
                  description: ''
                  example: Current
                  enum:
                    - Cash
                    - Current
                    - Savings
                    - Investment
                bank_id:
                  type: number
                  description: ''
                  example: 54768089.899016
                amount:
                  type: number
                  description: ''
                  example: 3.0
              required:
                - organisation_id
                - currency_id
                - name
                - account_type
                - bank_id
  '/api/expense_accounts/{id}':
    get:
      summary: 'View Resource'
      operationId: viewResource
      description: "Returns information about a specific record in this resource. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'Expenditure - Accounts'
    put:
      summary: ''
      operationId: putApiExpense_accountsId
      description: ''
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Expenditure - Accounts'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                organisation_id:
                  type: number
                  description: ''
                  example: 55.4147015
                currency_id:
                  type: number
                  description: ''
                  example: 2828120.3196496
                name:
                  type: string
                  description: ''
                  example: qui
                description:
                  type: string
                  description: ''
                  example: 'Quae unde harum omnis tempore quae et.'
                account_type:
                  type: string
                  description: ''
                  example: Savings
                  enum:
                    - Cash
                    - Current
                    - Savings
                    - Investment
                bank_id:
                  type: number
                  description: ''
                  example: 1799.0
                amount:
                  type: number
                  description: ''
                  example: 5953.143295
              required:
                - organisation_id
                - currency_id
                - name
                - account_type
                - bank_id
    delete:
      summary: 'Delete Resource'
      operationId: deleteResource
      description: 'Deletes the record with the specified `id`'
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Resource deleted'
                  data:
                    id: 1
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Resource deleted'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'Expenditure - Accounts'
    parameters:
      -
        in: path
        name: id
        description: 'The id of the resource to view'
        example: 17
        required: true
        schema:
          type: integer
  /api/expense_request_items/count:
    get:
      summary: 'Count Resources'
      operationId: countResources
      description: 'Returns a simple count of data in this resource'
      parameters:
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Expenditure - Expense Request Items'
  /api/expense_request_items/search:
    get:
      summary: 'Search Resources'
      operationId: searchResources
      description: "Allows searching for data in this resource using multiple options.\n\nOptions for searching\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
          example: qui
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
            example: qui
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Expenditure - Expense Request Items'
  /api/expense_request_items:
    get:
      summary: 'Get All'
      operationId: getAll
      description: "Returns a list of items in this resource and allows filtering the data based on fields in the database\n\nOptions for searching / filtering\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Expenditure - Expense Request Items'
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Expenditure - Expense Request Items'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                organisation_id:
                  type: number
                  description: ''
                  example: 5755.5744904
                expense_request_id:
                  type: number
                  description: ''
                  example: 337641830.474
                currency_id:
                  type: number
                  description: ''
                  example: 490.36243
                quantity:
                  type: number
                  description: ''
                  example: 66765325.095824
                unit_price:
                  type: number
                  description: 'Must be at least 1.'
                  example: 40
                total:
                  type: number
                  description: 'Must be at least 1.'
                  example: 24
                description:
                  type: string
                  description: ''
                  example: 'Pariatur quod eveniet dolorem ullam non.'
              required:
                - organisation_id
                - currency_id
                - quantity
                - unit_price
                - total
  '/api/expense_request_items/{id}':
    get:
      summary: 'View Resource'
      operationId: viewResource
      description: "Returns information about a specific record in this resource. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'Expenditure - Expense Request Items'
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Expenditure - Expense Request Items'
    delete:
      summary: 'Delete Resource'
      operationId: deleteResource
      description: 'Deletes the record with the specified `id`'
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Resource deleted'
                  data:
                    id: 1
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Resource deleted'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'Expenditure - Expense Request Items'
    parameters:
      -
        in: path
        name: id
        description: 'The id of the resource to view'
        example: 18
        required: true
        schema:
          type: integer
  /api/expense_requests/count:
    get:
      summary: 'Count Resources'
      operationId: countResources
      description: 'Returns a simple count of data in this resource'
      parameters:
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Expenditure - Expense Requests'
  /api/expense_requests/search:
    get:
      summary: 'Search Resources'
      operationId: searchResources
      description: "Allows searching for data in this resource using multiple options.\n\nOptions for searching\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
          example: voluptatum
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
            example: voluptatum
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Expenditure - Expense Requests'
  /api/expense_requests:
    get:
      summary: 'Get All'
      operationId: getAll
      description: "Returns a list of items in this resource and allows filtering the data based on fields in the database\n\nOptions for searching / filtering\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Expenditure - Expense Requests'
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Expenditure - Expense Requests'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                organisation_id:
                  type: number
                  description: ''
                  example: 63023352.179662
                currency_id:
                  type: number
                  description: ''
                  example: 277.587
                requested_by_id:
                  type: number
                  description: ''
                  example: 3911.978924099
                approved_by_id:
                  type: number
                  description: ''
                  example: 34424580.032062
                voucher_no:
                  type: string
                  description: ''
                  example: quae
                request_dt:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2024-11-08T10:13:09'
                amount:
                  type: number
                  description: 'Must be at least 1.'
                  example: 36
                approved_at:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2024-11-08T10:13:09'
              required:
                - organisation_id
                - currency_id
                - request_dt
                - amount
  '/api/expense_requests/{id}':
    get:
      summary: 'View Resource'
      operationId: viewResource
      description: "Returns information about a specific record in this resource. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'Expenditure - Expense Requests'
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Expenditure - Expense Requests'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                organisation_id:
                  type: number
                  description: ''
                  example: 22.115998642
                currency_id:
                  type: number
                  description: ''
                  example: 7974833.3074
                requested_by_id:
                  type: number
                  description: ''
                  example: 104.89917292
                approved_by_id:
                  type: number
                  description: ''
                  example: 0.0
                voucher_no:
                  type: string
                  description: ''
                  example: asperiores
                request_dt:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2024-11-08T10:13:09'
                amount:
                  type: number
                  description: 'Must be at least 1.'
                  example: 24
                approved_at:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2024-11-08T10:13:09'
              required:
                - organisation_id
                - currency_id
                - request_dt
                - amount
    delete:
      summary: 'Delete Resource'
      operationId: deleteResource
      description: 'Deletes the record with the specified `id`'
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Resource deleted'
                  data:
                    id: 1
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Resource deleted'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'Expenditure - Expense Requests'
    parameters:
      -
        in: path
        name: id
        description: 'The id of the resource to view'
        example: 13
        required: true
        schema:
          type: integer
  /api/expense_types/count:
    get:
      summary: 'Count Resources'
      operationId: countResources
      description: 'Returns a simple count of data in this resource'
      parameters:
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Expenditure - Expense Types'
  /api/expense_types/search:
    get:
      summary: 'Search Resources'
      operationId: searchResources
      description: "Allows searching for data in this resource using multiple options.\n\nOptions for searching\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
          example: blanditiis
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
            example: blanditiis
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Expenditure - Expense Types'
  /api/expense_types:
    get:
      summary: 'Get All'
      operationId: getAll
      description: "Returns a list of items in this resource and allows filtering the data based on fields in the database\n\nOptions for searching / filtering\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Expenditure - Expense Types'
    post:
      summary: 'Create Resource'
      operationId: createResource
      description: "Create a new record of this resource in the database. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message:
                    - 'validation error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: array
                    example:
                      - 'validation error message'
                    items:
                      type: string
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Details of error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Details of error message'
      tags:
        - 'Expenditure - Expense Types'
  '/api/expense_types/{id}':
    get:
      summary: 'View Resource'
      operationId: viewResource
      description: "Returns information about a specific record in this resource. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'Expenditure - Expense Types'
    put:
      summary: 'Update Resource'
      operationId: updateResource
      description: "Updates the data of the record with the specified `id`. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message:
                    - 'validation error messages'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: array
                    example:
                      - 'validation error messages'
                    items:
                      type: string
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Details of error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Details of error message'
      tags:
        - 'Expenditure - Expense Types'
    delete:
      summary: 'Delete Resource'
      operationId: deleteResource
      description: 'Deletes the record with the specified `id`'
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Resource deleted'
                  data:
                    id: 1
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Resource deleted'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'Expenditure - Expense Types'
    parameters:
      -
        in: path
        name: id
        description: 'The id of the resource to view'
        example: 16
        required: true
        schema:
          type: integer
  /api/expenses/count:
    get:
      summary: 'Count Resources'
      operationId: countResources
      description: 'Returns a simple count of data in this resource'
      parameters:
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Expenditure - Expenses'
  /api/expenses/search:
    get:
      summary: 'Search Resources'
      operationId: searchResources
      description: "Allows searching for data in this resource using multiple options.\n\nOptions for searching\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
          example: harum
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
            example: harum
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Expenditure - Expenses'
  /api/expenses:
    get:
      summary: 'Get All'
      operationId: getAll
      description: "Returns a list of items in this resource and allows filtering the data based on fields in the database\n\nOptions for searching / filtering\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Expenditure - Expenses'
    post:
      summary: 'Create Resource'
      operationId: createResource
      description: "Create a new record of this resource in the database. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message:
                    - 'validation error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: array
                    example:
                      - 'validation error message'
                    items:
                      type: string
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Details of error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Details of error message'
      tags:
        - 'Expenditure - Expenses'
  '/api/expenses/{id}':
    get:
      summary: 'View Resource'
      operationId: viewResource
      description: "Returns information about a specific record in this resource. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'Expenditure - Expenses'
    put:
      summary: 'Update Resource'
      operationId: updateResource
      description: "Updates the data of the record with the specified `id`. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message:
                    - 'validation error messages'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: array
                    example:
                      - 'validation error messages'
                    items:
                      type: string
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Details of error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Details of error message'
      tags:
        - 'Expenditure - Expenses'
    delete:
      summary: 'Delete Resource'
      operationId: deleteResource
      description: 'Deletes the record with the specified `id`'
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Resource deleted'
                  data:
                    id: 1
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Resource deleted'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'Expenditure - Expenses'
    parameters:
      -
        in: path
        name: id
        description: 'The id of the resource to view'
        example: 3
        required: true
        schema:
          type: integer
  /api/finance_reporting/non_contributing_members:
    get:
      summary: 'Non Contributing Members Report'
      operationId: nonContributingMembersReport
      description: ''
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Finance Reporting'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                year:
                  type: number
                  description: ''
                  example: 287143.852253
              required:
                - year
  /api/finance_reporting/income_summary:
    get:
      summary: 'Income Summary Report'
      operationId: incomeSummaryReport
      description: ''
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Finance Reporting'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                start_date:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2024-11-08T10:13:08'
                end_date:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2024-11-08T10:13:08'
                currency_id:
                  type: number
                  description: ''
                  example: 263.636
              required:
                - start_date
                - end_date
                - currency_id
  /api/finance_reporting/top_contributors:
    get:
      summary: 'Top Contributors'
      operationId: topContributors
      description: ''
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Finance Reporting'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                year:
                  type: number
                  description: ''
                  example: 26.70805959
                currency_id:
                  type: number
                  description: ''
                  example: 84207.89
              required:
                - year
                - currency_id
  /api/finance_reporting/monthly_consolidated_report:
    get:
      summary: 'Monthly Consolidated Report'
      operationId: monthlyConsolidatedReport
      description: ''
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Finance Reporting'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                year:
                  type: number
                  description: ''
                  example: 3444377.0
                currency_id:
                  type: number
                  description: ''
                  example: 3.2678348
              required:
                - year
                - currency_id
  /api/finance_reporting/contributors_by_type:
    get:
      summary: 'Top Contributors'
      operationId: topContributors
      description: ''
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Finance Reporting'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                year:
                  type: number
                  description: ''
                  example: 5051.2585555
                start_date:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2024-11-08T10:13:08'
                end_date:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2024-11-08T10:13:08'
                currency_id:
                  type: number
                  description: ''
                  example: 21042965.978116
                contribution_type_id:
                  type: number
                  description: ''
                  example: 58559750.90382
              required:
                - currency_id
                - contribution_type_id
  '/api/organisations/{org_slug}/member_accounts':
    post:
      summary: 'Create Resource'
      operationId: createResource
      description: "Create a new record of this resource in the database. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message:
                    - 'validation error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: array
                    example:
                      - 'validation error message'
                    items:
                      type: string
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Invalid organisation identifier specified'
                  exception: Symfony\Component\HttpKernel\Exception\HttpException
                  file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Application.php'
                  line: 1360
                  trace:
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\helpers.php'
                      line: 47
                      function: abort
                      class: Illuminate\Foundation\Application
                      type: '->'
                    -
                      file: 'D:\memberz-api\app\Http\Middleware\MultiTenantWithoutAuthentication.php'
                      line: 31
                      function: abort
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: App\Http\Middleware\MultiTenantWithoutAuthentication
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Middleware\SubstituteBindings.php'
                      line: 50
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Routing\Middleware\SubstituteBindings
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 119
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                      line: 805
                      function: then
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                      line: 784
                      function: runRouteWithinStack
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                      line: 748
                      function: runRoute
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                      line: 737
                      function: dispatchToRoute
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                      line: 200
                      function: dispatch
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 144
                      function: 'Illuminate\Foundation\Http\{closure}'
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: 'D:\memberz-api\app\Http\Middleware\Cors.php'
                      line: 34
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: App\Http\Middleware\Cors
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php'
                      line: 21
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull.php'
                      line: 31
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php'
                      line: 21
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TrimStrings.php'
                      line: 51
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TrimStrings
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Http\Middleware\ValidatePostSize.php'
                      line: 27
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Http\Middleware\ValidatePostSize
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance.php'
                      line: 110
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Http\Middleware\TrustProxies.php'
                      line: 57
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Http\Middleware\TrustProxies
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 119
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                      line: 175
                      function: then
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                      line: 144
                      function: sendRequestThroughRouter
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 310
                      function: handle
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 298
                      function: callLaravelOrLumenRoute
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 91
                      function: makeApiCall
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 44
                      function: makeResponseCall
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 35
                      function: makeResponseCallIfConditionsPass
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                      line: 236
                      function: __invoke
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                      line: 163
                      function: iterateThroughStrategies
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                      line: 95
                      function: fetchResponses
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                      line: 125
                      function: processRoute
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                      line: 72
                      function: extractEndpointsInfoFromLaravelApp
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                      line: 50
                      function: extractEndpointsInfoAndWriteToDisk
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Commands\GenerateDocumentation.php'
                      line: 53
                      function: get
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                      line: 36
                      function: handle
                      class: Knuckles\Scribe\Commands\GenerateDocumentation
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Util.php'
                      line: 41
                      function: 'Illuminate\Container\{closure}'
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                      line: 93
                      function: unwrapIfClosure
                      class: Illuminate\Container\Util
                      type: '::'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                      line: 35
                      function: callBoundMethod
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Container.php'
                      line: 662
                      function: call
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Console\Command.php'
                      line: 213
                      function: call
                      class: Illuminate\Container\Container
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\symfony\console\Command\Command.php'
                      line: 279
                      function: execute
                      class: Illuminate\Console\Command
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Console\Command.php'
                      line: 182
                      function: run
                      class: Symfony\Component\Console\Command\Command
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                      line: 1047
                      function: run
                      class: Illuminate\Console\Command
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                      line: 316
                      function: doRunCommand
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                      line: 167
                      function: doRun
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Console\Kernel.php'
                      line: 196
                      function: run
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: 'D:\memberz-api\artisan'
                      line: 35
                      function: handle
                      class: Illuminate\Foundation\Console\Kernel
                      type: '->'
                properties:
                  message:
                    type: string
                    example: 'Invalid organisation identifier specified'
                  exception:
                    type: string
                    example: Symfony\Component\HttpKernel\Exception\HttpException
                  file:
                    type: string
                    example: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Application.php'
                  line:
                    type: integer
                    example: 1360
                  trace:
                    type: array
                    example:
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\helpers.php'
                        line: 47
                        function: abort
                        class: Illuminate\Foundation\Application
                        type: '->'
                      -
                        file: 'D:\memberz-api\app\Http\Middleware\MultiTenantWithoutAuthentication.php'
                        line: 31
                        function: abort
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: App\Http\Middleware\MultiTenantWithoutAuthentication
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Middleware\SubstituteBindings.php'
                        line: 50
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Routing\Middleware\SubstituteBindings
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 119
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                        line: 805
                        function: then
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                        line: 784
                        function: runRouteWithinStack
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                        line: 748
                        function: runRoute
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                        line: 737
                        function: dispatchToRoute
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                        line: 200
                        function: dispatch
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 144
                        function: 'Illuminate\Foundation\Http\{closure}'
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: 'D:\memberz-api\app\Http\Middleware\Cors.php'
                        line: 34
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: App\Http\Middleware\Cors
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php'
                        line: 21
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull.php'
                        line: 31
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php'
                        line: 21
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TrimStrings.php'
                        line: 51
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TrimStrings
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Http\Middleware\ValidatePostSize.php'
                        line: 27
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Http\Middleware\ValidatePostSize
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance.php'
                        line: 110
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Http\Middleware\TrustProxies.php'
                        line: 57
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Http\Middleware\TrustProxies
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 119
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                        line: 175
                        function: then
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                        line: 144
                        function: sendRequestThroughRouter
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 310
                        function: handle
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 298
                        function: callLaravelOrLumenRoute
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 91
                        function: makeApiCall
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 44
                        function: makeResponseCall
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 35
                        function: makeResponseCallIfConditionsPass
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                        line: 236
                        function: __invoke
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                        line: 163
                        function: iterateThroughStrategies
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                        line: 95
                        function: fetchResponses
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                        line: 125
                        function: processRoute
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                        line: 72
                        function: extractEndpointsInfoFromLaravelApp
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                        line: 50
                        function: extractEndpointsInfoAndWriteToDisk
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Commands\GenerateDocumentation.php'
                        line: 53
                        function: get
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                        line: 36
                        function: handle
                        class: Knuckles\Scribe\Commands\GenerateDocumentation
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Util.php'
                        line: 41
                        function: 'Illuminate\Container\{closure}'
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                        line: 93
                        function: unwrapIfClosure
                        class: Illuminate\Container\Util
                        type: '::'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                        line: 35
                        function: callBoundMethod
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Container.php'
                        line: 662
                        function: call
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Console\Command.php'
                        line: 213
                        function: call
                        class: Illuminate\Container\Container
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\symfony\console\Command\Command.php'
                        line: 279
                        function: execute
                        class: Illuminate\Console\Command
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Console\Command.php'
                        line: 182
                        function: run
                        class: Symfony\Component\Console\Command\Command
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                        line: 1047
                        function: run
                        class: Illuminate\Console\Command
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                        line: 316
                        function: doRunCommand
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                        line: 167
                        function: doRun
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Console\Kernel.php'
                        line: 196
                        function: run
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: 'D:\memberz-api\artisan'
                        line: 35
                        function: handle
                        class: Illuminate\Foundation\Console\Kernel
                        type: '->'
                    items:
                      type: object
                      properties:
                        file:
                          type: string
                          example: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\helpers.php'
                        line:
                          type: integer
                          example: 47
                        function:
                          type: string
                          example: abort
                        class:
                          type: string
                          example: Illuminate\Foundation\Application
                        type:
                          type: string
                          example: '->'
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Details of error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Details of error message'
      tags:
        - 'Member Accounts'
    parameters:
      -
        in: path
        name: org_slug
        description: 'The slug of the org.'
        example: 21
        required: true
        schema:
          type: integer
  '/api/member_accounts/{id}/organisations':
    get:
      summary: 'Get Organisations'
      operationId: getOrganisations
      description: ''
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: '{"error" => "Member Account Not Found"}'
      tags:
        - 'Member Accounts'
    parameters:
      -
        in: path
        name: id
        description: 'Optional parameter. ID of member account.'
        required: true
        schema:
          type: integer
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 1
  /api/member_accounts/count:
    get:
      summary: 'Count Resources'
      operationId: countResources
      description: 'Returns a simple count of data in this resource'
      parameters:
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Member Accounts'
  /api/member_accounts/search:
    get:
      summary: 'Search Resources'
      operationId: searchResources
      description: "Allows searching for data in this resource using multiple options.\n\nOptions for searching\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
          example: ut
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
            example: ut
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Member Accounts'
  /api/member_accounts:
    get:
      summary: 'Get All'
      operationId: getAll
      description: "Returns a list of items in this resource and allows filtering the data based on fields in the database\n\nOptions for searching / filtering\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Member Accounts'
    post:
      summary: 'Create Resource'
      operationId: createResource
      description: "Create a new record of this resource in the database. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message:
                    - 'validation error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: array
                    example:
                      - 'validation error message'
                    items:
                      type: string
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Details of error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Details of error message'
      tags:
        - 'Member Accounts'
  '/api/member_accounts/{id}':
    get:
      summary: 'View Resource'
      operationId: viewResource
      description: "Returns information about a specific record in this resource. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'Member Accounts'
    put:
      summary: 'Update Resource'
      operationId: updateResource
      description: "Updates the data of the record with the specified `id`. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message:
                    - 'validation error messages'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: array
                    example:
                      - 'validation error messages'
                    items:
                      type: string
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Details of error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Details of error message'
      tags:
        - 'Member Accounts'
    delete:
      summary: 'Delete Resource'
      operationId: deleteResource
      description: 'Deletes the record with the specified `id`'
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Resource deleted'
                  data:
                    id: 1
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Resource deleted'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'Member Accounts'
    parameters:
      -
        in: path
        name: id
        description: 'The id of the resource to view'
        example: 4
        required: true
        schema:
          type: integer
  /api/organisation_member_category_settings/count:
    get:
      summary: 'Count Resources'
      operationId: countResources
      description: 'Returns a simple count of data in this resource'
      parameters:
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Cannot call constructor'
                  exception: Error
                  file: 'D:\memberz-api\app\Http\Controllers\OrganisationMemberCategorySettingController.php'
                  line: 22
                  trace:
                    -
                      function: __construct
                      class: App\Http\Controllers\OrganisationMemberCategorySettingController
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Container.php'
                      line: 944
                      function: newInstanceArgs
                      class: ReflectionClass
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Container.php'
                      line: 787
                      function: build
                      class: Illuminate\Container\Container
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Application.php'
                      line: 1034
                      function: resolve
                      class: Illuminate\Container\Container
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Container.php'
                      line: 723
                      function: resolve
                      class: Illuminate\Foundation\Application
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Application.php'
                      line: 1019
                      function: make
                      class: Illuminate\Container\Container
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Route.php'
                      line: 279
                      function: make
                      class: Illuminate\Foundation\Application
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Route.php'
                      line: 1105
                      function: getController
                      class: Illuminate\Routing\Route
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Route.php'
                      line: 1036
                      function: controllerMiddleware
                      class: Illuminate\Routing\Route
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                      line: 818
                      function: gatherMiddleware
                      class: Illuminate\Routing\Route
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                      line: 800
                      function: gatherRouteMiddleware
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                      line: 784
                      function: runRouteWithinStack
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                      line: 748
                      function: runRoute
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                      line: 737
                      function: dispatchToRoute
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                      line: 200
                      function: dispatch
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 144
                      function: 'Illuminate\Foundation\Http\{closure}'
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: 'D:\memberz-api\app\Http\Middleware\Cors.php'
                      line: 34
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: App\Http\Middleware\Cors
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php'
                      line: 21
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull.php'
                      line: 31
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php'
                      line: 21
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TrimStrings.php'
                      line: 51
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TrimStrings
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Http\Middleware\ValidatePostSize.php'
                      line: 27
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Http\Middleware\ValidatePostSize
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance.php'
                      line: 110
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Http\Middleware\TrustProxies.php'
                      line: 57
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Http\Middleware\TrustProxies
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 119
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                      line: 175
                      function: then
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                      line: 144
                      function: sendRequestThroughRouter
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 310
                      function: handle
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 298
                      function: callLaravelOrLumenRoute
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 91
                      function: makeApiCall
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 44
                      function: makeResponseCall
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 35
                      function: makeResponseCallIfConditionsPass
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                      line: 236
                      function: __invoke
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                      line: 163
                      function: iterateThroughStrategies
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                      line: 95
                      function: fetchResponses
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                      line: 125
                      function: processRoute
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                      line: 72
                      function: extractEndpointsInfoFromLaravelApp
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                      line: 50
                      function: extractEndpointsInfoAndWriteToDisk
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Commands\GenerateDocumentation.php'
                      line: 53
                      function: get
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                      line: 36
                      function: handle
                      class: Knuckles\Scribe\Commands\GenerateDocumentation
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Util.php'
                      line: 41
                      function: 'Illuminate\Container\{closure}'
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                      line: 93
                      function: unwrapIfClosure
                      class: Illuminate\Container\Util
                      type: '::'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                      line: 35
                      function: callBoundMethod
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Container.php'
                      line: 662
                      function: call
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Console\Command.php'
                      line: 213
                      function: call
                      class: Illuminate\Container\Container
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\symfony\console\Command\Command.php'
                      line: 279
                      function: execute
                      class: Illuminate\Console\Command
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Console\Command.php'
                      line: 182
                      function: run
                      class: Symfony\Component\Console\Command\Command
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                      line: 1047
                      function: run
                      class: Illuminate\Console\Command
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                      line: 316
                      function: doRunCommand
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                      line: 167
                      function: doRun
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Console\Kernel.php'
                      line: 196
                      function: run
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: 'D:\memberz-api\artisan'
                      line: 35
                      function: handle
                      class: Illuminate\Foundation\Console\Kernel
                      type: '->'
                properties:
                  message:
                    type: string
                    example: 'Cannot call constructor'
                  exception:
                    type: string
                    example: Error
                  file:
                    type: string
                    example: 'D:\memberz-api\app\Http\Controllers\OrganisationMemberCategorySettingController.php'
                  line:
                    type: integer
                    example: 22
                  trace:
                    type: array
                    example:
                      -
                        function: __construct
                        class: App\Http\Controllers\OrganisationMemberCategorySettingController
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Container.php'
                        line: 944
                        function: newInstanceArgs
                        class: ReflectionClass
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Container.php'
                        line: 787
                        function: build
                        class: Illuminate\Container\Container
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Application.php'
                        line: 1034
                        function: resolve
                        class: Illuminate\Container\Container
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Container.php'
                        line: 723
                        function: resolve
                        class: Illuminate\Foundation\Application
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Application.php'
                        line: 1019
                        function: make
                        class: Illuminate\Container\Container
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Route.php'
                        line: 279
                        function: make
                        class: Illuminate\Foundation\Application
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Route.php'
                        line: 1105
                        function: getController
                        class: Illuminate\Routing\Route
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Route.php'
                        line: 1036
                        function: controllerMiddleware
                        class: Illuminate\Routing\Route
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                        line: 818
                        function: gatherMiddleware
                        class: Illuminate\Routing\Route
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                        line: 800
                        function: gatherRouteMiddleware
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                        line: 784
                        function: runRouteWithinStack
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                        line: 748
                        function: runRoute
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                        line: 737
                        function: dispatchToRoute
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                        line: 200
                        function: dispatch
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 144
                        function: 'Illuminate\Foundation\Http\{closure}'
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: 'D:\memberz-api\app\Http\Middleware\Cors.php'
                        line: 34
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: App\Http\Middleware\Cors
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php'
                        line: 21
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull.php'
                        line: 31
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php'
                        line: 21
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TrimStrings.php'
                        line: 51
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TrimStrings
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Http\Middleware\ValidatePostSize.php'
                        line: 27
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Http\Middleware\ValidatePostSize
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance.php'
                        line: 110
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Http\Middleware\TrustProxies.php'
                        line: 57
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Http\Middleware\TrustProxies
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 119
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                        line: 175
                        function: then
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                        line: 144
                        function: sendRequestThroughRouter
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 310
                        function: handle
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 298
                        function: callLaravelOrLumenRoute
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 91
                        function: makeApiCall
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 44
                        function: makeResponseCall
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 35
                        function: makeResponseCallIfConditionsPass
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                        line: 236
                        function: __invoke
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                        line: 163
                        function: iterateThroughStrategies
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                        line: 95
                        function: fetchResponses
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                        line: 125
                        function: processRoute
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                        line: 72
                        function: extractEndpointsInfoFromLaravelApp
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                        line: 50
                        function: extractEndpointsInfoAndWriteToDisk
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Commands\GenerateDocumentation.php'
                        line: 53
                        function: get
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                        line: 36
                        function: handle
                        class: Knuckles\Scribe\Commands\GenerateDocumentation
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Util.php'
                        line: 41
                        function: 'Illuminate\Container\{closure}'
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                        line: 93
                        function: unwrapIfClosure
                        class: Illuminate\Container\Util
                        type: '::'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                        line: 35
                        function: callBoundMethod
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Container.php'
                        line: 662
                        function: call
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Console\Command.php'
                        line: 213
                        function: call
                        class: Illuminate\Container\Container
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\symfony\console\Command\Command.php'
                        line: 279
                        function: execute
                        class: Illuminate\Console\Command
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Console\Command.php'
                        line: 182
                        function: run
                        class: Symfony\Component\Console\Command\Command
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                        line: 1047
                        function: run
                        class: Illuminate\Console\Command
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                        line: 316
                        function: doRunCommand
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                        line: 167
                        function: doRun
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Console\Kernel.php'
                        line: 196
                        function: run
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: 'D:\memberz-api\artisan'
                        line: 35
                        function: handle
                        class: Illuminate\Foundation\Console\Kernel
                        type: '->'
                    items:
                      type: object
                      properties:
                        function:
                          type: string
                          example: __construct
                        class:
                          type: string
                          example: App\Http\Controllers\OrganisationMemberCategorySettingController
                        type:
                          type: string
                          example: '->'
      tags:
        - 'Member Category Settings'
  /api/organisation_member_category_settings/search:
    get:
      summary: 'Search Resources'
      operationId: searchResources
      description: "Allows searching for data in this resource using multiple options.\n\nOptions for searching\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
          example: amet
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
            example: amet
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Cannot call constructor'
                  exception: Error
                  file: 'D:\memberz-api\app\Http\Controllers\OrganisationMemberCategorySettingController.php'
                  line: 22
                  trace:
                    -
                      function: __construct
                      class: App\Http\Controllers\OrganisationMemberCategorySettingController
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Container.php'
                      line: 944
                      function: newInstanceArgs
                      class: ReflectionClass
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Container.php'
                      line: 787
                      function: build
                      class: Illuminate\Container\Container
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Application.php'
                      line: 1034
                      function: resolve
                      class: Illuminate\Container\Container
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Container.php'
                      line: 723
                      function: resolve
                      class: Illuminate\Foundation\Application
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Application.php'
                      line: 1019
                      function: make
                      class: Illuminate\Container\Container
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Route.php'
                      line: 279
                      function: make
                      class: Illuminate\Foundation\Application
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Route.php'
                      line: 1105
                      function: getController
                      class: Illuminate\Routing\Route
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Route.php'
                      line: 1036
                      function: controllerMiddleware
                      class: Illuminate\Routing\Route
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                      line: 818
                      function: gatherMiddleware
                      class: Illuminate\Routing\Route
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                      line: 800
                      function: gatherRouteMiddleware
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                      line: 784
                      function: runRouteWithinStack
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                      line: 748
                      function: runRoute
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                      line: 737
                      function: dispatchToRoute
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                      line: 200
                      function: dispatch
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 144
                      function: 'Illuminate\Foundation\Http\{closure}'
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: 'D:\memberz-api\app\Http\Middleware\Cors.php'
                      line: 34
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: App\Http\Middleware\Cors
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php'
                      line: 21
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull.php'
                      line: 31
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php'
                      line: 21
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TrimStrings.php'
                      line: 51
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TrimStrings
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Http\Middleware\ValidatePostSize.php'
                      line: 27
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Http\Middleware\ValidatePostSize
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance.php'
                      line: 110
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Http\Middleware\TrustProxies.php'
                      line: 57
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Http\Middleware\TrustProxies
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 119
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                      line: 175
                      function: then
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                      line: 144
                      function: sendRequestThroughRouter
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 310
                      function: handle
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 298
                      function: callLaravelOrLumenRoute
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 91
                      function: makeApiCall
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 44
                      function: makeResponseCall
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 35
                      function: makeResponseCallIfConditionsPass
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                      line: 236
                      function: __invoke
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                      line: 163
                      function: iterateThroughStrategies
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                      line: 95
                      function: fetchResponses
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                      line: 125
                      function: processRoute
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                      line: 72
                      function: extractEndpointsInfoFromLaravelApp
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                      line: 50
                      function: extractEndpointsInfoAndWriteToDisk
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Commands\GenerateDocumentation.php'
                      line: 53
                      function: get
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                      line: 36
                      function: handle
                      class: Knuckles\Scribe\Commands\GenerateDocumentation
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Util.php'
                      line: 41
                      function: 'Illuminate\Container\{closure}'
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                      line: 93
                      function: unwrapIfClosure
                      class: Illuminate\Container\Util
                      type: '::'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                      line: 35
                      function: callBoundMethod
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Container.php'
                      line: 662
                      function: call
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Console\Command.php'
                      line: 213
                      function: call
                      class: Illuminate\Container\Container
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\symfony\console\Command\Command.php'
                      line: 279
                      function: execute
                      class: Illuminate\Console\Command
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Console\Command.php'
                      line: 182
                      function: run
                      class: Symfony\Component\Console\Command\Command
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                      line: 1047
                      function: run
                      class: Illuminate\Console\Command
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                      line: 316
                      function: doRunCommand
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                      line: 167
                      function: doRun
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Console\Kernel.php'
                      line: 196
                      function: run
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: 'D:\memberz-api\artisan'
                      line: 35
                      function: handle
                      class: Illuminate\Foundation\Console\Kernel
                      type: '->'
                properties:
                  message:
                    type: string
                    example: 'Cannot call constructor'
                  exception:
                    type: string
                    example: Error
                  file:
                    type: string
                    example: 'D:\memberz-api\app\Http\Controllers\OrganisationMemberCategorySettingController.php'
                  line:
                    type: integer
                    example: 22
                  trace:
                    type: array
                    example:
                      -
                        function: __construct
                        class: App\Http\Controllers\OrganisationMemberCategorySettingController
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Container.php'
                        line: 944
                        function: newInstanceArgs
                        class: ReflectionClass
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Container.php'
                        line: 787
                        function: build
                        class: Illuminate\Container\Container
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Application.php'
                        line: 1034
                        function: resolve
                        class: Illuminate\Container\Container
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Container.php'
                        line: 723
                        function: resolve
                        class: Illuminate\Foundation\Application
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Application.php'
                        line: 1019
                        function: make
                        class: Illuminate\Container\Container
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Route.php'
                        line: 279
                        function: make
                        class: Illuminate\Foundation\Application
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Route.php'
                        line: 1105
                        function: getController
                        class: Illuminate\Routing\Route
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Route.php'
                        line: 1036
                        function: controllerMiddleware
                        class: Illuminate\Routing\Route
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                        line: 818
                        function: gatherMiddleware
                        class: Illuminate\Routing\Route
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                        line: 800
                        function: gatherRouteMiddleware
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                        line: 784
                        function: runRouteWithinStack
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                        line: 748
                        function: runRoute
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                        line: 737
                        function: dispatchToRoute
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                        line: 200
                        function: dispatch
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 144
                        function: 'Illuminate\Foundation\Http\{closure}'
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: 'D:\memberz-api\app\Http\Middleware\Cors.php'
                        line: 34
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: App\Http\Middleware\Cors
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php'
                        line: 21
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull.php'
                        line: 31
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php'
                        line: 21
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TrimStrings.php'
                        line: 51
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TrimStrings
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Http\Middleware\ValidatePostSize.php'
                        line: 27
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Http\Middleware\ValidatePostSize
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance.php'
                        line: 110
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Http\Middleware\TrustProxies.php'
                        line: 57
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Http\Middleware\TrustProxies
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 119
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                        line: 175
                        function: then
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                        line: 144
                        function: sendRequestThroughRouter
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 310
                        function: handle
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 298
                        function: callLaravelOrLumenRoute
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 91
                        function: makeApiCall
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 44
                        function: makeResponseCall
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 35
                        function: makeResponseCallIfConditionsPass
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                        line: 236
                        function: __invoke
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                        line: 163
                        function: iterateThroughStrategies
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                        line: 95
                        function: fetchResponses
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                        line: 125
                        function: processRoute
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                        line: 72
                        function: extractEndpointsInfoFromLaravelApp
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                        line: 50
                        function: extractEndpointsInfoAndWriteToDisk
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Commands\GenerateDocumentation.php'
                        line: 53
                        function: get
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                        line: 36
                        function: handle
                        class: Knuckles\Scribe\Commands\GenerateDocumentation
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Util.php'
                        line: 41
                        function: 'Illuminate\Container\{closure}'
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                        line: 93
                        function: unwrapIfClosure
                        class: Illuminate\Container\Util
                        type: '::'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                        line: 35
                        function: callBoundMethod
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Container.php'
                        line: 662
                        function: call
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Console\Command.php'
                        line: 213
                        function: call
                        class: Illuminate\Container\Container
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\symfony\console\Command\Command.php'
                        line: 279
                        function: execute
                        class: Illuminate\Console\Command
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Console\Command.php'
                        line: 182
                        function: run
                        class: Symfony\Component\Console\Command\Command
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                        line: 1047
                        function: run
                        class: Illuminate\Console\Command
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                        line: 316
                        function: doRunCommand
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                        line: 167
                        function: doRun
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Console\Kernel.php'
                        line: 196
                        function: run
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: 'D:\memberz-api\artisan'
                        line: 35
                        function: handle
                        class: Illuminate\Foundation\Console\Kernel
                        type: '->'
                    items:
                      type: object
                      properties:
                        function:
                          type: string
                          example: __construct
                        class:
                          type: string
                          example: App\Http\Controllers\OrganisationMemberCategorySettingController
                        type:
                          type: string
                          example: '->'
      tags:
        - 'Member Category Settings'
  /api/organisation_member_category_settings:
    get:
      summary: 'Get All'
      operationId: getAll
      description: "Returns a list of items in this resource and allows filtering the data based on fields in the database\n\nOptions for searching / filtering\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Cannot call constructor'
                  exception: Error
                  file: 'D:\memberz-api\app\Http\Controllers\OrganisationMemberCategorySettingController.php'
                  line: 22
                  trace:
                    -
                      function: __construct
                      class: App\Http\Controllers\OrganisationMemberCategorySettingController
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Container.php'
                      line: 944
                      function: newInstanceArgs
                      class: ReflectionClass
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Container.php'
                      line: 787
                      function: build
                      class: Illuminate\Container\Container
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Application.php'
                      line: 1034
                      function: resolve
                      class: Illuminate\Container\Container
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Container.php'
                      line: 723
                      function: resolve
                      class: Illuminate\Foundation\Application
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Application.php'
                      line: 1019
                      function: make
                      class: Illuminate\Container\Container
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Route.php'
                      line: 279
                      function: make
                      class: Illuminate\Foundation\Application
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Route.php'
                      line: 1105
                      function: getController
                      class: Illuminate\Routing\Route
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Route.php'
                      line: 1036
                      function: controllerMiddleware
                      class: Illuminate\Routing\Route
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                      line: 818
                      function: gatherMiddleware
                      class: Illuminate\Routing\Route
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                      line: 800
                      function: gatherRouteMiddleware
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                      line: 784
                      function: runRouteWithinStack
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                      line: 748
                      function: runRoute
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                      line: 737
                      function: dispatchToRoute
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                      line: 200
                      function: dispatch
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 144
                      function: 'Illuminate\Foundation\Http\{closure}'
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: 'D:\memberz-api\app\Http\Middleware\Cors.php'
                      line: 34
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: App\Http\Middleware\Cors
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php'
                      line: 21
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull.php'
                      line: 31
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php'
                      line: 21
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TrimStrings.php'
                      line: 51
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TrimStrings
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Http\Middleware\ValidatePostSize.php'
                      line: 27
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Http\Middleware\ValidatePostSize
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance.php'
                      line: 110
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Http\Middleware\TrustProxies.php'
                      line: 57
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Http\Middleware\TrustProxies
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 119
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                      line: 175
                      function: then
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                      line: 144
                      function: sendRequestThroughRouter
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 310
                      function: handle
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 298
                      function: callLaravelOrLumenRoute
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 91
                      function: makeApiCall
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 44
                      function: makeResponseCall
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 35
                      function: makeResponseCallIfConditionsPass
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                      line: 236
                      function: __invoke
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                      line: 163
                      function: iterateThroughStrategies
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                      line: 95
                      function: fetchResponses
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                      line: 125
                      function: processRoute
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                      line: 72
                      function: extractEndpointsInfoFromLaravelApp
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                      line: 50
                      function: extractEndpointsInfoAndWriteToDisk
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Commands\GenerateDocumentation.php'
                      line: 53
                      function: get
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                      line: 36
                      function: handle
                      class: Knuckles\Scribe\Commands\GenerateDocumentation
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Util.php'
                      line: 41
                      function: 'Illuminate\Container\{closure}'
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                      line: 93
                      function: unwrapIfClosure
                      class: Illuminate\Container\Util
                      type: '::'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                      line: 35
                      function: callBoundMethod
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Container.php'
                      line: 662
                      function: call
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Console\Command.php'
                      line: 213
                      function: call
                      class: Illuminate\Container\Container
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\symfony\console\Command\Command.php'
                      line: 279
                      function: execute
                      class: Illuminate\Console\Command
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Console\Command.php'
                      line: 182
                      function: run
                      class: Symfony\Component\Console\Command\Command
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                      line: 1047
                      function: run
                      class: Illuminate\Console\Command
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                      line: 316
                      function: doRunCommand
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                      line: 167
                      function: doRun
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Console\Kernel.php'
                      line: 196
                      function: run
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: 'D:\memberz-api\artisan'
                      line: 35
                      function: handle
                      class: Illuminate\Foundation\Console\Kernel
                      type: '->'
                properties:
                  message:
                    type: string
                    example: 'Cannot call constructor'
                  exception:
                    type: string
                    example: Error
                  file:
                    type: string
                    example: 'D:\memberz-api\app\Http\Controllers\OrganisationMemberCategorySettingController.php'
                  line:
                    type: integer
                    example: 22
                  trace:
                    type: array
                    example:
                      -
                        function: __construct
                        class: App\Http\Controllers\OrganisationMemberCategorySettingController
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Container.php'
                        line: 944
                        function: newInstanceArgs
                        class: ReflectionClass
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Container.php'
                        line: 787
                        function: build
                        class: Illuminate\Container\Container
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Application.php'
                        line: 1034
                        function: resolve
                        class: Illuminate\Container\Container
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Container.php'
                        line: 723
                        function: resolve
                        class: Illuminate\Foundation\Application
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Application.php'
                        line: 1019
                        function: make
                        class: Illuminate\Container\Container
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Route.php'
                        line: 279
                        function: make
                        class: Illuminate\Foundation\Application
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Route.php'
                        line: 1105
                        function: getController
                        class: Illuminate\Routing\Route
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Route.php'
                        line: 1036
                        function: controllerMiddleware
                        class: Illuminate\Routing\Route
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                        line: 818
                        function: gatherMiddleware
                        class: Illuminate\Routing\Route
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                        line: 800
                        function: gatherRouteMiddleware
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                        line: 784
                        function: runRouteWithinStack
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                        line: 748
                        function: runRoute
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                        line: 737
                        function: dispatchToRoute
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                        line: 200
                        function: dispatch
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 144
                        function: 'Illuminate\Foundation\Http\{closure}'
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: 'D:\memberz-api\app\Http\Middleware\Cors.php'
                        line: 34
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: App\Http\Middleware\Cors
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php'
                        line: 21
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull.php'
                        line: 31
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php'
                        line: 21
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TrimStrings.php'
                        line: 51
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TrimStrings
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Http\Middleware\ValidatePostSize.php'
                        line: 27
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Http\Middleware\ValidatePostSize
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance.php'
                        line: 110
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Http\Middleware\TrustProxies.php'
                        line: 57
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Http\Middleware\TrustProxies
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 119
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                        line: 175
                        function: then
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                        line: 144
                        function: sendRequestThroughRouter
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 310
                        function: handle
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 298
                        function: callLaravelOrLumenRoute
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 91
                        function: makeApiCall
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 44
                        function: makeResponseCall
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 35
                        function: makeResponseCallIfConditionsPass
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                        line: 236
                        function: __invoke
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                        line: 163
                        function: iterateThroughStrategies
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                        line: 95
                        function: fetchResponses
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                        line: 125
                        function: processRoute
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                        line: 72
                        function: extractEndpointsInfoFromLaravelApp
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                        line: 50
                        function: extractEndpointsInfoAndWriteToDisk
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Commands\GenerateDocumentation.php'
                        line: 53
                        function: get
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                        line: 36
                        function: handle
                        class: Knuckles\Scribe\Commands\GenerateDocumentation
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Util.php'
                        line: 41
                        function: 'Illuminate\Container\{closure}'
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                        line: 93
                        function: unwrapIfClosure
                        class: Illuminate\Container\Util
                        type: '::'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                        line: 35
                        function: callBoundMethod
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Container.php'
                        line: 662
                        function: call
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Console\Command.php'
                        line: 213
                        function: call
                        class: Illuminate\Container\Container
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\symfony\console\Command\Command.php'
                        line: 279
                        function: execute
                        class: Illuminate\Console\Command
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Console\Command.php'
                        line: 182
                        function: run
                        class: Symfony\Component\Console\Command\Command
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                        line: 1047
                        function: run
                        class: Illuminate\Console\Command
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                        line: 316
                        function: doRunCommand
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                        line: 167
                        function: doRun
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Console\Kernel.php'
                        line: 196
                        function: run
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: 'D:\memberz-api\artisan'
                        line: 35
                        function: handle
                        class: Illuminate\Foundation\Console\Kernel
                        type: '->'
                    items:
                      type: object
                      properties:
                        function:
                          type: string
                          example: __construct
                        class:
                          type: string
                          example: App\Http\Controllers\OrganisationMemberCategorySettingController
                        type:
                          type: string
                          example: '->'
      tags:
        - 'Member Category Settings'
    post:
      summary: ''
      operationId: postApiOrganisation_member_category_settings
      description: ''
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Cannot call constructor'
                  exception: Error
                  file: 'D:\memberz-api\app\Http\Controllers\OrganisationMemberCategorySettingController.php'
                  line: 22
                  trace:
                    -
                      function: __construct
                      class: App\Http\Controllers\OrganisationMemberCategorySettingController
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Container.php'
                      line: 944
                      function: newInstanceArgs
                      class: ReflectionClass
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Container.php'
                      line: 787
                      function: build
                      class: Illuminate\Container\Container
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Application.php'
                      line: 1034
                      function: resolve
                      class: Illuminate\Container\Container
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Container.php'
                      line: 723
                      function: resolve
                      class: Illuminate\Foundation\Application
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Application.php'
                      line: 1019
                      function: make
                      class: Illuminate\Container\Container
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Route.php'
                      line: 279
                      function: make
                      class: Illuminate\Foundation\Application
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Route.php'
                      line: 1105
                      function: getController
                      class: Illuminate\Routing\Route
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Route.php'
                      line: 1036
                      function: controllerMiddleware
                      class: Illuminate\Routing\Route
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                      line: 818
                      function: gatherMiddleware
                      class: Illuminate\Routing\Route
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                      line: 800
                      function: gatherRouteMiddleware
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                      line: 784
                      function: runRouteWithinStack
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                      line: 748
                      function: runRoute
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                      line: 737
                      function: dispatchToRoute
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                      line: 200
                      function: dispatch
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 144
                      function: 'Illuminate\Foundation\Http\{closure}'
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: 'D:\memberz-api\app\Http\Middleware\Cors.php'
                      line: 34
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: App\Http\Middleware\Cors
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php'
                      line: 21
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull.php'
                      line: 31
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php'
                      line: 21
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TrimStrings.php'
                      line: 51
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TrimStrings
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Http\Middleware\ValidatePostSize.php'
                      line: 27
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Http\Middleware\ValidatePostSize
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance.php'
                      line: 110
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Http\Middleware\TrustProxies.php'
                      line: 57
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Http\Middleware\TrustProxies
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 119
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                      line: 175
                      function: then
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                      line: 144
                      function: sendRequestThroughRouter
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 310
                      function: handle
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 298
                      function: callLaravelOrLumenRoute
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 91
                      function: makeApiCall
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 44
                      function: makeResponseCall
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 35
                      function: makeResponseCallIfConditionsPass
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                      line: 236
                      function: __invoke
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                      line: 163
                      function: iterateThroughStrategies
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                      line: 95
                      function: fetchResponses
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                      line: 125
                      function: processRoute
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                      line: 72
                      function: extractEndpointsInfoFromLaravelApp
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                      line: 50
                      function: extractEndpointsInfoAndWriteToDisk
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Commands\GenerateDocumentation.php'
                      line: 53
                      function: get
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                      line: 36
                      function: handle
                      class: Knuckles\Scribe\Commands\GenerateDocumentation
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Util.php'
                      line: 41
                      function: 'Illuminate\Container\{closure}'
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                      line: 93
                      function: unwrapIfClosure
                      class: Illuminate\Container\Util
                      type: '::'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                      line: 35
                      function: callBoundMethod
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Container.php'
                      line: 662
                      function: call
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Console\Command.php'
                      line: 213
                      function: call
                      class: Illuminate\Container\Container
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\symfony\console\Command\Command.php'
                      line: 279
                      function: execute
                      class: Illuminate\Console\Command
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Console\Command.php'
                      line: 182
                      function: run
                      class: Symfony\Component\Console\Command\Command
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                      line: 1047
                      function: run
                      class: Illuminate\Console\Command
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                      line: 316
                      function: doRunCommand
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                      line: 167
                      function: doRun
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Console\Kernel.php'
                      line: 196
                      function: run
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: 'D:\memberz-api\artisan'
                      line: 35
                      function: handle
                      class: Illuminate\Foundation\Console\Kernel
                      type: '->'
                properties:
                  message:
                    type: string
                    example: 'Cannot call constructor'
                  exception:
                    type: string
                    example: Error
                  file:
                    type: string
                    example: 'D:\memberz-api\app\Http\Controllers\OrganisationMemberCategorySettingController.php'
                  line:
                    type: integer
                    example: 22
                  trace:
                    type: array
                    example:
                      -
                        function: __construct
                        class: App\Http\Controllers\OrganisationMemberCategorySettingController
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Container.php'
                        line: 944
                        function: newInstanceArgs
                        class: ReflectionClass
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Container.php'
                        line: 787
                        function: build
                        class: Illuminate\Container\Container
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Application.php'
                        line: 1034
                        function: resolve
                        class: Illuminate\Container\Container
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Container.php'
                        line: 723
                        function: resolve
                        class: Illuminate\Foundation\Application
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Application.php'
                        line: 1019
                        function: make
                        class: Illuminate\Container\Container
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Route.php'
                        line: 279
                        function: make
                        class: Illuminate\Foundation\Application
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Route.php'
                        line: 1105
                        function: getController
                        class: Illuminate\Routing\Route
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Route.php'
                        line: 1036
                        function: controllerMiddleware
                        class: Illuminate\Routing\Route
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                        line: 818
                        function: gatherMiddleware
                        class: Illuminate\Routing\Route
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                        line: 800
                        function: gatherRouteMiddleware
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                        line: 784
                        function: runRouteWithinStack
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                        line: 748
                        function: runRoute
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                        line: 737
                        function: dispatchToRoute
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                        line: 200
                        function: dispatch
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 144
                        function: 'Illuminate\Foundation\Http\{closure}'
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: 'D:\memberz-api\app\Http\Middleware\Cors.php'
                        line: 34
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: App\Http\Middleware\Cors
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php'
                        line: 21
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull.php'
                        line: 31
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php'
                        line: 21
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TrimStrings.php'
                        line: 51
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TrimStrings
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Http\Middleware\ValidatePostSize.php'
                        line: 27
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Http\Middleware\ValidatePostSize
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance.php'
                        line: 110
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Http\Middleware\TrustProxies.php'
                        line: 57
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Http\Middleware\TrustProxies
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 119
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                        line: 175
                        function: then
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                        line: 144
                        function: sendRequestThroughRouter
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 310
                        function: handle
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 298
                        function: callLaravelOrLumenRoute
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 91
                        function: makeApiCall
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 44
                        function: makeResponseCall
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 35
                        function: makeResponseCallIfConditionsPass
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                        line: 236
                        function: __invoke
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                        line: 163
                        function: iterateThroughStrategies
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                        line: 95
                        function: fetchResponses
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                        line: 125
                        function: processRoute
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                        line: 72
                        function: extractEndpointsInfoFromLaravelApp
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                        line: 50
                        function: extractEndpointsInfoAndWriteToDisk
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Commands\GenerateDocumentation.php'
                        line: 53
                        function: get
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                        line: 36
                        function: handle
                        class: Knuckles\Scribe\Commands\GenerateDocumentation
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Util.php'
                        line: 41
                        function: 'Illuminate\Container\{closure}'
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                        line: 93
                        function: unwrapIfClosure
                        class: Illuminate\Container\Util
                        type: '::'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                        line: 35
                        function: callBoundMethod
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Container.php'
                        line: 662
                        function: call
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Console\Command.php'
                        line: 213
                        function: call
                        class: Illuminate\Container\Container
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\symfony\console\Command\Command.php'
                        line: 279
                        function: execute
                        class: Illuminate\Console\Command
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Console\Command.php'
                        line: 182
                        function: run
                        class: Symfony\Component\Console\Command\Command
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                        line: 1047
                        function: run
                        class: Illuminate\Console\Command
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                        line: 316
                        function: doRunCommand
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                        line: 167
                        function: doRun
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Console\Kernel.php'
                        line: 196
                        function: run
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: 'D:\memberz-api\artisan'
                        line: 35
                        function: handle
                        class: Illuminate\Foundation\Console\Kernel
                        type: '->'
                    items:
                      type: object
                      properties:
                        function:
                          type: string
                          example: __construct
                        class:
                          type: string
                          example: App\Http\Controllers\OrganisationMemberCategorySettingController
                        type:
                          type: string
                          example: '->'
      tags:
        - 'Member Category Settings'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                organisation_id:
                  type: number
                  description: ''
                  example: 1146.0
                organisation_member_category_id:
                  type: number
                  description: ''
                  example: 1.0
                member_category_setting_id:
                  type: number
                  description: ''
                  example: 45978029.0
                value:
                  type: string
                  description: ''
                  example: est
              required:
                - organisation_id
                - organisation_member_category_id
                - member_category_setting_id
                - value
  '/api/organisation_member_category_settings/{setting}':
    get:
      summary: 'View Resource'
      operationId: viewResource
      description: "Returns information about a specific record in this resource. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Cannot call constructor'
                  exception: Error
                  file: 'D:\memberz-api\app\Http\Controllers\OrganisationMemberCategorySettingController.php'
                  line: 22
                  trace:
                    -
                      function: __construct
                      class: App\Http\Controllers\OrganisationMemberCategorySettingController
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Container.php'
                      line: 944
                      function: newInstanceArgs
                      class: ReflectionClass
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Container.php'
                      line: 787
                      function: build
                      class: Illuminate\Container\Container
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Application.php'
                      line: 1034
                      function: resolve
                      class: Illuminate\Container\Container
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Container.php'
                      line: 723
                      function: resolve
                      class: Illuminate\Foundation\Application
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Application.php'
                      line: 1019
                      function: make
                      class: Illuminate\Container\Container
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Route.php'
                      line: 279
                      function: make
                      class: Illuminate\Foundation\Application
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Route.php'
                      line: 1105
                      function: getController
                      class: Illuminate\Routing\Route
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Route.php'
                      line: 1036
                      function: controllerMiddleware
                      class: Illuminate\Routing\Route
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                      line: 818
                      function: gatherMiddleware
                      class: Illuminate\Routing\Route
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                      line: 800
                      function: gatherRouteMiddleware
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                      line: 784
                      function: runRouteWithinStack
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                      line: 748
                      function: runRoute
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                      line: 737
                      function: dispatchToRoute
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                      line: 200
                      function: dispatch
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 144
                      function: 'Illuminate\Foundation\Http\{closure}'
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: 'D:\memberz-api\app\Http\Middleware\Cors.php'
                      line: 34
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: App\Http\Middleware\Cors
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php'
                      line: 21
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull.php'
                      line: 31
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php'
                      line: 21
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TrimStrings.php'
                      line: 51
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TrimStrings
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Http\Middleware\ValidatePostSize.php'
                      line: 27
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Http\Middleware\ValidatePostSize
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance.php'
                      line: 110
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Http\Middleware\TrustProxies.php'
                      line: 57
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Http\Middleware\TrustProxies
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 119
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                      line: 175
                      function: then
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                      line: 144
                      function: sendRequestThroughRouter
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 310
                      function: handle
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 298
                      function: callLaravelOrLumenRoute
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 91
                      function: makeApiCall
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 44
                      function: makeResponseCall
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 35
                      function: makeResponseCallIfConditionsPass
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                      line: 236
                      function: __invoke
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                      line: 163
                      function: iterateThroughStrategies
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                      line: 95
                      function: fetchResponses
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                      line: 125
                      function: processRoute
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                      line: 72
                      function: extractEndpointsInfoFromLaravelApp
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                      line: 50
                      function: extractEndpointsInfoAndWriteToDisk
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Commands\GenerateDocumentation.php'
                      line: 53
                      function: get
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                      line: 36
                      function: handle
                      class: Knuckles\Scribe\Commands\GenerateDocumentation
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Util.php'
                      line: 41
                      function: 'Illuminate\Container\{closure}'
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                      line: 93
                      function: unwrapIfClosure
                      class: Illuminate\Container\Util
                      type: '::'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                      line: 35
                      function: callBoundMethod
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Container.php'
                      line: 662
                      function: call
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Console\Command.php'
                      line: 213
                      function: call
                      class: Illuminate\Container\Container
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\symfony\console\Command\Command.php'
                      line: 279
                      function: execute
                      class: Illuminate\Console\Command
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Console\Command.php'
                      line: 182
                      function: run
                      class: Symfony\Component\Console\Command\Command
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                      line: 1047
                      function: run
                      class: Illuminate\Console\Command
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                      line: 316
                      function: doRunCommand
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                      line: 167
                      function: doRun
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Console\Kernel.php'
                      line: 196
                      function: run
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: 'D:\memberz-api\artisan'
                      line: 35
                      function: handle
                      class: Illuminate\Foundation\Console\Kernel
                      type: '->'
                properties:
                  message:
                    type: string
                    example: 'Cannot call constructor'
                  exception:
                    type: string
                    example: Error
                  file:
                    type: string
                    example: 'D:\memberz-api\app\Http\Controllers\OrganisationMemberCategorySettingController.php'
                  line:
                    type: integer
                    example: 22
                  trace:
                    type: array
                    example:
                      -
                        function: __construct
                        class: App\Http\Controllers\OrganisationMemberCategorySettingController
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Container.php'
                        line: 944
                        function: newInstanceArgs
                        class: ReflectionClass
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Container.php'
                        line: 787
                        function: build
                        class: Illuminate\Container\Container
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Application.php'
                        line: 1034
                        function: resolve
                        class: Illuminate\Container\Container
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Container.php'
                        line: 723
                        function: resolve
                        class: Illuminate\Foundation\Application
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Application.php'
                        line: 1019
                        function: make
                        class: Illuminate\Container\Container
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Route.php'
                        line: 279
                        function: make
                        class: Illuminate\Foundation\Application
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Route.php'
                        line: 1105
                        function: getController
                        class: Illuminate\Routing\Route
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Route.php'
                        line: 1036
                        function: controllerMiddleware
                        class: Illuminate\Routing\Route
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                        line: 818
                        function: gatherMiddleware
                        class: Illuminate\Routing\Route
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                        line: 800
                        function: gatherRouteMiddleware
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                        line: 784
                        function: runRouteWithinStack
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                        line: 748
                        function: runRoute
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                        line: 737
                        function: dispatchToRoute
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                        line: 200
                        function: dispatch
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 144
                        function: 'Illuminate\Foundation\Http\{closure}'
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: 'D:\memberz-api\app\Http\Middleware\Cors.php'
                        line: 34
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: App\Http\Middleware\Cors
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php'
                        line: 21
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull.php'
                        line: 31
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php'
                        line: 21
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TrimStrings.php'
                        line: 51
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TrimStrings
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Http\Middleware\ValidatePostSize.php'
                        line: 27
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Http\Middleware\ValidatePostSize
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance.php'
                        line: 110
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Http\Middleware\TrustProxies.php'
                        line: 57
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Http\Middleware\TrustProxies
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 119
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                        line: 175
                        function: then
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                        line: 144
                        function: sendRequestThroughRouter
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 310
                        function: handle
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 298
                        function: callLaravelOrLumenRoute
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 91
                        function: makeApiCall
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 44
                        function: makeResponseCall
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 35
                        function: makeResponseCallIfConditionsPass
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                        line: 236
                        function: __invoke
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                        line: 163
                        function: iterateThroughStrategies
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                        line: 95
                        function: fetchResponses
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                        line: 125
                        function: processRoute
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                        line: 72
                        function: extractEndpointsInfoFromLaravelApp
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                        line: 50
                        function: extractEndpointsInfoAndWriteToDisk
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Commands\GenerateDocumentation.php'
                        line: 53
                        function: get
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                        line: 36
                        function: handle
                        class: Knuckles\Scribe\Commands\GenerateDocumentation
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Util.php'
                        line: 41
                        function: 'Illuminate\Container\{closure}'
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                        line: 93
                        function: unwrapIfClosure
                        class: Illuminate\Container\Util
                        type: '::'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                        line: 35
                        function: callBoundMethod
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Container.php'
                        line: 662
                        function: call
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Console\Command.php'
                        line: 213
                        function: call
                        class: Illuminate\Container\Container
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\symfony\console\Command\Command.php'
                        line: 279
                        function: execute
                        class: Illuminate\Console\Command
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Console\Command.php'
                        line: 182
                        function: run
                        class: Symfony\Component\Console\Command\Command
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                        line: 1047
                        function: run
                        class: Illuminate\Console\Command
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                        line: 316
                        function: doRunCommand
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                        line: 167
                        function: doRun
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Console\Kernel.php'
                        line: 196
                        function: run
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: 'D:\memberz-api\artisan'
                        line: 35
                        function: handle
                        class: Illuminate\Foundation\Console\Kernel
                        type: '->'
                    items:
                      type: object
                      properties:
                        function:
                          type: string
                          example: __construct
                        class:
                          type: string
                          example: App\Http\Controllers\OrganisationMemberCategorySettingController
                        type:
                          type: string
                          example: '->'
      tags:
        - 'Member Category Settings'
    put:
      summary: ''
      operationId: putApiOrganisation_member_category_settingsSetting
      description: ''
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Cannot call constructor'
                  exception: Error
                  file: 'D:\memberz-api\app\Http\Controllers\OrganisationMemberCategorySettingController.php'
                  line: 22
                  trace:
                    -
                      function: __construct
                      class: App\Http\Controllers\OrganisationMemberCategorySettingController
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Container.php'
                      line: 944
                      function: newInstanceArgs
                      class: ReflectionClass
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Container.php'
                      line: 787
                      function: build
                      class: Illuminate\Container\Container
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Application.php'
                      line: 1034
                      function: resolve
                      class: Illuminate\Container\Container
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Container.php'
                      line: 723
                      function: resolve
                      class: Illuminate\Foundation\Application
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Application.php'
                      line: 1019
                      function: make
                      class: Illuminate\Container\Container
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Route.php'
                      line: 279
                      function: make
                      class: Illuminate\Foundation\Application
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Route.php'
                      line: 1105
                      function: getController
                      class: Illuminate\Routing\Route
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Route.php'
                      line: 1036
                      function: controllerMiddleware
                      class: Illuminate\Routing\Route
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                      line: 818
                      function: gatherMiddleware
                      class: Illuminate\Routing\Route
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                      line: 800
                      function: gatherRouteMiddleware
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                      line: 784
                      function: runRouteWithinStack
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                      line: 748
                      function: runRoute
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                      line: 737
                      function: dispatchToRoute
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                      line: 200
                      function: dispatch
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 144
                      function: 'Illuminate\Foundation\Http\{closure}'
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: 'D:\memberz-api\app\Http\Middleware\Cors.php'
                      line: 34
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: App\Http\Middleware\Cors
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php'
                      line: 21
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull.php'
                      line: 31
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php'
                      line: 21
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TrimStrings.php'
                      line: 51
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TrimStrings
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Http\Middleware\ValidatePostSize.php'
                      line: 27
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Http\Middleware\ValidatePostSize
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance.php'
                      line: 110
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Http\Middleware\TrustProxies.php'
                      line: 57
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Http\Middleware\TrustProxies
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 119
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                      line: 175
                      function: then
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                      line: 144
                      function: sendRequestThroughRouter
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 310
                      function: handle
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 298
                      function: callLaravelOrLumenRoute
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 91
                      function: makeApiCall
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 44
                      function: makeResponseCall
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 35
                      function: makeResponseCallIfConditionsPass
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                      line: 236
                      function: __invoke
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                      line: 163
                      function: iterateThroughStrategies
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                      line: 95
                      function: fetchResponses
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                      line: 125
                      function: processRoute
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                      line: 72
                      function: extractEndpointsInfoFromLaravelApp
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                      line: 50
                      function: extractEndpointsInfoAndWriteToDisk
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Commands\GenerateDocumentation.php'
                      line: 53
                      function: get
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                      line: 36
                      function: handle
                      class: Knuckles\Scribe\Commands\GenerateDocumentation
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Util.php'
                      line: 41
                      function: 'Illuminate\Container\{closure}'
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                      line: 93
                      function: unwrapIfClosure
                      class: Illuminate\Container\Util
                      type: '::'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                      line: 35
                      function: callBoundMethod
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Container.php'
                      line: 662
                      function: call
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Console\Command.php'
                      line: 213
                      function: call
                      class: Illuminate\Container\Container
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\symfony\console\Command\Command.php'
                      line: 279
                      function: execute
                      class: Illuminate\Console\Command
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Console\Command.php'
                      line: 182
                      function: run
                      class: Symfony\Component\Console\Command\Command
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                      line: 1047
                      function: run
                      class: Illuminate\Console\Command
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                      line: 316
                      function: doRunCommand
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                      line: 167
                      function: doRun
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Console\Kernel.php'
                      line: 196
                      function: run
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: 'D:\memberz-api\artisan'
                      line: 35
                      function: handle
                      class: Illuminate\Foundation\Console\Kernel
                      type: '->'
                properties:
                  message:
                    type: string
                    example: 'Cannot call constructor'
                  exception:
                    type: string
                    example: Error
                  file:
                    type: string
                    example: 'D:\memberz-api\app\Http\Controllers\OrganisationMemberCategorySettingController.php'
                  line:
                    type: integer
                    example: 22
                  trace:
                    type: array
                    example:
                      -
                        function: __construct
                        class: App\Http\Controllers\OrganisationMemberCategorySettingController
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Container.php'
                        line: 944
                        function: newInstanceArgs
                        class: ReflectionClass
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Container.php'
                        line: 787
                        function: build
                        class: Illuminate\Container\Container
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Application.php'
                        line: 1034
                        function: resolve
                        class: Illuminate\Container\Container
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Container.php'
                        line: 723
                        function: resolve
                        class: Illuminate\Foundation\Application
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Application.php'
                        line: 1019
                        function: make
                        class: Illuminate\Container\Container
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Route.php'
                        line: 279
                        function: make
                        class: Illuminate\Foundation\Application
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Route.php'
                        line: 1105
                        function: getController
                        class: Illuminate\Routing\Route
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Route.php'
                        line: 1036
                        function: controllerMiddleware
                        class: Illuminate\Routing\Route
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                        line: 818
                        function: gatherMiddleware
                        class: Illuminate\Routing\Route
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                        line: 800
                        function: gatherRouteMiddleware
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                        line: 784
                        function: runRouteWithinStack
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                        line: 748
                        function: runRoute
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                        line: 737
                        function: dispatchToRoute
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                        line: 200
                        function: dispatch
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 144
                        function: 'Illuminate\Foundation\Http\{closure}'
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: 'D:\memberz-api\app\Http\Middleware\Cors.php'
                        line: 34
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: App\Http\Middleware\Cors
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php'
                        line: 21
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull.php'
                        line: 31
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php'
                        line: 21
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TrimStrings.php'
                        line: 51
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TrimStrings
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Http\Middleware\ValidatePostSize.php'
                        line: 27
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Http\Middleware\ValidatePostSize
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance.php'
                        line: 110
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Http\Middleware\TrustProxies.php'
                        line: 57
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Http\Middleware\TrustProxies
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 119
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                        line: 175
                        function: then
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                        line: 144
                        function: sendRequestThroughRouter
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 310
                        function: handle
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 298
                        function: callLaravelOrLumenRoute
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 91
                        function: makeApiCall
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 44
                        function: makeResponseCall
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 35
                        function: makeResponseCallIfConditionsPass
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                        line: 236
                        function: __invoke
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                        line: 163
                        function: iterateThroughStrategies
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                        line: 95
                        function: fetchResponses
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                        line: 125
                        function: processRoute
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                        line: 72
                        function: extractEndpointsInfoFromLaravelApp
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                        line: 50
                        function: extractEndpointsInfoAndWriteToDisk
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Commands\GenerateDocumentation.php'
                        line: 53
                        function: get
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                        line: 36
                        function: handle
                        class: Knuckles\Scribe\Commands\GenerateDocumentation
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Util.php'
                        line: 41
                        function: 'Illuminate\Container\{closure}'
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                        line: 93
                        function: unwrapIfClosure
                        class: Illuminate\Container\Util
                        type: '::'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                        line: 35
                        function: callBoundMethod
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Container.php'
                        line: 662
                        function: call
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Console\Command.php'
                        line: 213
                        function: call
                        class: Illuminate\Container\Container
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\symfony\console\Command\Command.php'
                        line: 279
                        function: execute
                        class: Illuminate\Console\Command
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Console\Command.php'
                        line: 182
                        function: run
                        class: Symfony\Component\Console\Command\Command
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                        line: 1047
                        function: run
                        class: Illuminate\Console\Command
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                        line: 316
                        function: doRunCommand
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                        line: 167
                        function: doRun
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Console\Kernel.php'
                        line: 196
                        function: run
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: 'D:\memberz-api\artisan'
                        line: 35
                        function: handle
                        class: Illuminate\Foundation\Console\Kernel
                        type: '->'
                    items:
                      type: object
                      properties:
                        function:
                          type: string
                          example: __construct
                        class:
                          type: string
                          example: App\Http\Controllers\OrganisationMemberCategorySettingController
                        type:
                          type: string
                          example: '->'
      tags:
        - 'Member Category Settings'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                organisation_id:
                  type: number
                  description: ''
                  example: 790622.33083
                organisation_member_category_id:
                  type: number
                  description: ''
                  example: 2023.021
                member_category_setting_id:
                  type: number
                  description: ''
                  example: 7.32126555
                value:
                  type: string
                  description: ''
                  example: ut
              required:
                - organisation_id
                - organisation_member_category_id
                - member_category_setting_id
                - value
    delete:
      summary: 'Delete Resource'
      operationId: deleteResource
      description: 'Deletes the record with the specified `id`'
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Resource deleted'
                  data:
                    id: 1
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Resource deleted'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'Member Category Settings'
    parameters:
      -
        in: path
        name: setting
        description: ''
        example: 1
        required: true
        schema:
          type: integer
      -
        in: path
        name: id
        description: 'The id of the resource to view'
        example: 6
        required: true
        schema:
          type: integer
  /api/member_images/count:
    get:
      summary: 'Count Resources'
      operationId: countResources
      description: 'Returns a simple count of data in this resource'
      parameters:
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Member Images'
  /api/member_images/search:
    get:
      summary: 'Search Resources'
      operationId: searchResources
      description: "Allows searching for data in this resource using multiple options.\n\nOptions for searching\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
          example: nostrum
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
            example: nostrum
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Member Images'
  /api/member_images:
    get:
      summary: 'Get All'
      operationId: getAll
      description: "Returns a list of items in this resource and allows filtering the data based on fields in the database\n\nOptions for searching / filtering\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Member Images'
    post:
      summary: ''
      operationId: postApiMember_images
      description: ''
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Member Images'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                member_id:
                  type: number
                  description: ''
                  example: 259627173.80896
                image:
                  type: string
                  format: binary
                  description: 'Must be a file. Must not be greater than 5000 kilobytes.'
                image_base64:
                  type: string
                  description: ''
                  example: ut
              required:
                - member_id
                - image
                - image_base64
  '/api/member_images/{id}':
    get:
      summary: 'View Resource'
      operationId: viewResource
      description: "Returns information about a specific record in this resource. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'Member Images'
    put:
      summary: ''
      operationId: putApiMember_imagesId
      description: ''
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Member Images'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                member_id:
                  type: number
                  description: ''
                  example: 0.21
                image:
                  type: string
                  format: binary
                  description: 'Must be a file. Must not be greater than 5000 kilobytes.'
                image_base64:
                  type: string
                  description: ''
                  example: nesciunt
              required:
                - member_id
                - image
                - image_base64
    delete:
      summary: 'Delete Resource'
      operationId: deleteResource
      description: 'Deletes the record with the specified `id`'
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Resource deleted'
                  data:
                    id: 1
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Resource deleted'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'Member Images'
    parameters:
      -
        in: path
        name: id
        description: 'The id of the resource to view'
        example: 11
        required: true
        schema:
          type: integer
  '/api/organisations/{org_slug}/members':
    post:
      summary: 'Create Resource'
      operationId: createResource
      description: "Create a new record of this resource in the database. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message:
                    - 'validation error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: array
                    example:
                      - 'validation error message'
                    items:
                      type: string
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Invalid organisation identifier specified'
                  exception: Symfony\Component\HttpKernel\Exception\HttpException
                  file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Application.php'
                  line: 1360
                  trace:
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\helpers.php'
                      line: 47
                      function: abort
                      class: Illuminate\Foundation\Application
                      type: '->'
                    -
                      file: 'D:\memberz-api\app\Http\Middleware\MultiTenantWithoutAuthentication.php'
                      line: 31
                      function: abort
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: App\Http\Middleware\MultiTenantWithoutAuthentication
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Middleware\SubstituteBindings.php'
                      line: 50
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Routing\Middleware\SubstituteBindings
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 119
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                      line: 805
                      function: then
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                      line: 784
                      function: runRouteWithinStack
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                      line: 748
                      function: runRoute
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                      line: 737
                      function: dispatchToRoute
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                      line: 200
                      function: dispatch
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 144
                      function: 'Illuminate\Foundation\Http\{closure}'
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: 'D:\memberz-api\app\Http\Middleware\Cors.php'
                      line: 34
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: App\Http\Middleware\Cors
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php'
                      line: 21
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull.php'
                      line: 31
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php'
                      line: 21
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TrimStrings.php'
                      line: 51
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TrimStrings
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Http\Middleware\ValidatePostSize.php'
                      line: 27
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Http\Middleware\ValidatePostSize
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance.php'
                      line: 110
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Http\Middleware\TrustProxies.php'
                      line: 57
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Http\Middleware\TrustProxies
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 119
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                      line: 175
                      function: then
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                      line: 144
                      function: sendRequestThroughRouter
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 310
                      function: handle
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 298
                      function: callLaravelOrLumenRoute
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 91
                      function: makeApiCall
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 44
                      function: makeResponseCall
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 35
                      function: makeResponseCallIfConditionsPass
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                      line: 236
                      function: __invoke
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                      line: 163
                      function: iterateThroughStrategies
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                      line: 95
                      function: fetchResponses
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                      line: 125
                      function: processRoute
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                      line: 72
                      function: extractEndpointsInfoFromLaravelApp
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                      line: 50
                      function: extractEndpointsInfoAndWriteToDisk
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Commands\GenerateDocumentation.php'
                      line: 53
                      function: get
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                      line: 36
                      function: handle
                      class: Knuckles\Scribe\Commands\GenerateDocumentation
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Util.php'
                      line: 41
                      function: 'Illuminate\Container\{closure}'
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                      line: 93
                      function: unwrapIfClosure
                      class: Illuminate\Container\Util
                      type: '::'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                      line: 35
                      function: callBoundMethod
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Container.php'
                      line: 662
                      function: call
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Console\Command.php'
                      line: 213
                      function: call
                      class: Illuminate\Container\Container
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\symfony\console\Command\Command.php'
                      line: 279
                      function: execute
                      class: Illuminate\Console\Command
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Console\Command.php'
                      line: 182
                      function: run
                      class: Symfony\Component\Console\Command\Command
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                      line: 1047
                      function: run
                      class: Illuminate\Console\Command
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                      line: 316
                      function: doRunCommand
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                      line: 167
                      function: doRun
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Console\Kernel.php'
                      line: 196
                      function: run
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: 'D:\memberz-api\artisan'
                      line: 35
                      function: handle
                      class: Illuminate\Foundation\Console\Kernel
                      type: '->'
                properties:
                  message:
                    type: string
                    example: 'Invalid organisation identifier specified'
                  exception:
                    type: string
                    example: Symfony\Component\HttpKernel\Exception\HttpException
                  file:
                    type: string
                    example: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Application.php'
                  line:
                    type: integer
                    example: 1360
                  trace:
                    type: array
                    example:
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\helpers.php'
                        line: 47
                        function: abort
                        class: Illuminate\Foundation\Application
                        type: '->'
                      -
                        file: 'D:\memberz-api\app\Http\Middleware\MultiTenantWithoutAuthentication.php'
                        line: 31
                        function: abort
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: App\Http\Middleware\MultiTenantWithoutAuthentication
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Middleware\SubstituteBindings.php'
                        line: 50
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Routing\Middleware\SubstituteBindings
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 119
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                        line: 805
                        function: then
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                        line: 784
                        function: runRouteWithinStack
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                        line: 748
                        function: runRoute
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                        line: 737
                        function: dispatchToRoute
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                        line: 200
                        function: dispatch
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 144
                        function: 'Illuminate\Foundation\Http\{closure}'
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: 'D:\memberz-api\app\Http\Middleware\Cors.php'
                        line: 34
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: App\Http\Middleware\Cors
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php'
                        line: 21
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull.php'
                        line: 31
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php'
                        line: 21
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TrimStrings.php'
                        line: 51
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TrimStrings
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Http\Middleware\ValidatePostSize.php'
                        line: 27
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Http\Middleware\ValidatePostSize
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance.php'
                        line: 110
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Http\Middleware\TrustProxies.php'
                        line: 57
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Http\Middleware\TrustProxies
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 119
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                        line: 175
                        function: then
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                        line: 144
                        function: sendRequestThroughRouter
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 310
                        function: handle
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 298
                        function: callLaravelOrLumenRoute
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 91
                        function: makeApiCall
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 44
                        function: makeResponseCall
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 35
                        function: makeResponseCallIfConditionsPass
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                        line: 236
                        function: __invoke
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                        line: 163
                        function: iterateThroughStrategies
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                        line: 95
                        function: fetchResponses
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                        line: 125
                        function: processRoute
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                        line: 72
                        function: extractEndpointsInfoFromLaravelApp
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                        line: 50
                        function: extractEndpointsInfoAndWriteToDisk
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Commands\GenerateDocumentation.php'
                        line: 53
                        function: get
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                        line: 36
                        function: handle
                        class: Knuckles\Scribe\Commands\GenerateDocumentation
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Util.php'
                        line: 41
                        function: 'Illuminate\Container\{closure}'
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                        line: 93
                        function: unwrapIfClosure
                        class: Illuminate\Container\Util
                        type: '::'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                        line: 35
                        function: callBoundMethod
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Container.php'
                        line: 662
                        function: call
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Console\Command.php'
                        line: 213
                        function: call
                        class: Illuminate\Container\Container
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\symfony\console\Command\Command.php'
                        line: 279
                        function: execute
                        class: Illuminate\Console\Command
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Console\Command.php'
                        line: 182
                        function: run
                        class: Symfony\Component\Console\Command\Command
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                        line: 1047
                        function: run
                        class: Illuminate\Console\Command
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                        line: 316
                        function: doRunCommand
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                        line: 167
                        function: doRun
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Console\Kernel.php'
                        line: 196
                        function: run
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: 'D:\memberz-api\artisan'
                        line: 35
                        function: handle
                        class: Illuminate\Foundation\Console\Kernel
                        type: '->'
                    items:
                      type: object
                      properties:
                        file:
                          type: string
                          example: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\helpers.php'
                        line:
                          type: integer
                          example: 47
                        function:
                          type: string
                          example: abort
                        class:
                          type: string
                          example: Illuminate\Foundation\Application
                        type:
                          type: string
                          example: '->'
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Details of error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Details of error message'
      tags:
        - 'Member Profiles'
    parameters:
      -
        in: path
        name: org_slug
        description: 'The slug of the org.'
        example: 21
        required: true
        schema:
          type: integer
  '/api/members/{id}/organisations':
    get:
      summary: 'Membership Organisations'
      operationId: membershipOrganisations
      description: ''
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: '{"error" => "Profile Not Found"}'
      tags:
        - 'Member Profiles'
    parameters:
      -
        in: path
        name: id
        description: 'Optional parameter. ID of profile.'
        required: true
        schema:
          type: integer
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 1
  '/api/members/{id}/memberships':
    get:
      summary: 'Member Memberships'
      operationId: memberMemberships
      description: ''
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: '{"error" => "Profile Not Found"}'
      tags:
        - 'Member Profiles'
    parameters:
      -
        in: path
        name: id
        description: 'Optional parameter. ID of profile.'
        required: true
        schema:
          type: integer
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 1
  '/api/members/{id}/upcoming-events':
    get:
      summary: ''
      operationId: getApiMembersIdUpcomingEvents
      description: ''
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Member Profiles'
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the member.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/members/{id}/past-events':
    get:
      summary: ''
      operationId: getApiMembersIdPastEvents
      description: ''
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Member Profiles'
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the member.'
        example: 1
        required: true
        schema:
          type: integer
  /api/members/count:
    get:
      summary: 'Count Resources'
      operationId: countResources
      description: 'Returns a simple count of data in this resource'
      parameters:
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Member Profiles'
  /api/members/search:
    get:
      summary: 'Search Resources'
      operationId: searchResources
      description: "Allows searching for data in this resource using multiple options.\n\nOptions for searching\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
          example: possimus
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
            example: possimus
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Member Profiles'
  /api/members:
    get:
      summary: 'Get All'
      operationId: getAll
      description: "Returns a list of items in this resource and allows filtering the data based on fields in the database\n\nOptions for searching / filtering\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Member Profiles'
    post:
      summary: 'Create Resource'
      operationId: createResource
      description: "Create a new record of this resource in the database. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message:
                    - 'validation error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: array
                    example:
                      - 'validation error message'
                    items:
                      type: string
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Details of error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Details of error message'
      tags:
        - 'Member Profiles'
  '/api/members/{id}':
    get:
      summary: 'View Resource'
      operationId: viewResource
      description: "Returns information about a specific record in this resource. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'Member Profiles'
    put:
      summary: 'Update Resource'
      operationId: updateResource
      description: "Updates the data of the record with the specified `id`. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message:
                    - 'validation error messages'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: array
                    example:
                      - 'validation error messages'
                    items:
                      type: string
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Details of error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Details of error message'
      tags:
        - 'Member Profiles'
    delete:
      summary: 'Delete Resource'
      operationId: deleteResource
      description: 'Deletes the record with the specified `id`'
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Resource deleted'
                  data:
                    id: 1
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Resource deleted'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'Member Profiles'
    parameters:
      -
        in: path
        name: id
        description: 'The id of the resource to view'
        example: 12
        required: true
        schema:
          type: integer
  /api/member_relation_types/count:
    get:
      summary: 'Count Resources'
      operationId: countResources
      description: 'Returns a simple count of data in this resource'
      parameters:
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Member Relation Types'
  /api/member_relation_types/search:
    get:
      summary: 'Search Resources'
      operationId: searchResources
      description: "Allows searching for data in this resource using multiple options.\n\nOptions for searching\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
          example: ad
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
            example: ad
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Member Relation Types'
  /api/member_relation_types:
    get:
      summary: 'Get All'
      operationId: getAll
      description: "Returns a list of items in this resource and allows filtering the data based on fields in the database\n\nOptions for searching / filtering\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Member Relation Types'
    post:
      summary: 'Create Resource'
      operationId: createResource
      description: "Create a new record of this resource in the database. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message:
                    - 'validation error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: array
                    example:
                      - 'validation error message'
                    items:
                      type: string
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Details of error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Details of error message'
      tags:
        - 'Member Relation Types'
  '/api/member_relation_types/{id}':
    get:
      summary: 'View Resource'
      operationId: viewResource
      description: "Returns information about a specific record in this resource. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'Member Relation Types'
    put:
      summary: 'Update Resource'
      operationId: updateResource
      description: "Updates the data of the record with the specified `id`. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message:
                    - 'validation error messages'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: array
                    example:
                      - 'validation error messages'
                    items:
                      type: string
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Details of error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Details of error message'
      tags:
        - 'Member Relation Types'
    delete:
      summary: 'Delete Resource'
      operationId: deleteResource
      description: 'Deletes the record with the specified `id`'
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Resource deleted'
                  data:
                    id: 1
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Resource deleted'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'Member Relation Types'
    parameters:
      -
        in: path
        name: id
        description: 'The id of the resource to view'
        example: 4
        required: true
        schema:
          type: integer
  /api/member_relations/count:
    get:
      summary: 'Count Resources'
      operationId: countResources
      description: 'Returns a simple count of data in this resource'
      parameters:
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Member Relations'
  /api/member_relations/search:
    get:
      summary: 'Search Resources'
      operationId: searchResources
      description: "Allows searching for data in this resource using multiple options.\n\nOptions for searching\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
          example: labore
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
            example: labore
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Member Relations'
  /api/member_relations:
    get:
      summary: 'Get All'
      operationId: getAll
      description: "Returns a list of items in this resource and allows filtering the data based on fields in the database\n\nOptions for searching / filtering\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Member Relations'
    post:
      summary: 'Create Member Relation'
      operationId: createMemberRelation
      description: ''
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    member_id: 1
                    name: 'Isaac Aubin'
                    gender: male
                    dob: null
                    is_alive: 1
                    relation_member_id: null
                    member_relation_type_id: 2
                    active: true
                    created_at: '2022-06-18T15:26:54.000000Z'
                    updated_at: '2022-06-18T15:26:54.000000Z'
                    relative: null
                    member_relation_type:
                      id: 2
                      name: Parent
                      created_at: null
                      updated_at: null
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      member_id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'Isaac Aubin'
                      gender:
                        type: string
                        example: male
                      dob:
                        type: string
                        example: null
                      is_alive:
                        type: integer
                        example: 1
                      relation_member_id:
                        type: string
                        example: null
                      member_relation_type_id:
                        type: integer
                        example: 2
                      active:
                        type: boolean
                        example: true
                      created_at:
                        type: string
                        example: '2022-06-18T15:26:54.000000Z'
                      updated_at:
                        type: string
                        example: '2022-06-18T15:26:54.000000Z'
                      relative:
                        type: string
                        example: null
                      member_relation_type:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 2
                          name:
                            type: string
                            example: Parent
                          created_at:
                            type: string
                            example: null
                          updated_at:
                            type: string
                            example: null
      tags:
        - 'Member Relations'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                member_id:
                  type: number
                  description: 'Id of member.'
                  example: 1.0
                name:
                  type: string
                  description: 'Name of member relation.'
                  example: 'Joseph Ansah'
                gender:
                  type: string
                  description: 'Gender of member relation.'
                  example: Male
                dob:
                  type: string
                  description: 'Date of birth of member relation.'
                  example: '1990-01-04'
                is_alive:
                  type: boolean
                  description: 'Member relation alive or dead.'
                  example: true
                active:
                  type: boolean
                  description: 'Member relation active or inactive.'
                  example: true
                member_relation_type_id:
                  type: number
                  description: 'Id of member relation type.'
                  example: 1.0
                relation_member_id:
                  type: number
                  description: 'Linked to member id of members table.'
                  example: 1.0
              required:
                - member_id
                - name
                - gender
                - dob
                - member_relation_type_id
  '/api/member_relations/{id}':
    get:
      summary: 'View Resource'
      operationId: viewResource
      description: "Returns information about a specific record in this resource. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'Member Relations'
    put:
      summary: 'Update Member Relation'
      operationId: updateMemberRelation
      description: ''
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    member_id: 1
                    name: 'Isaac Aubin'
                    gender: male
                    dob: null
                    is_alive: 1
                    relation_member_id: null
                    member_relation_type_id: 2
                    active: true
                    created_at: '2022-06-18T15:26:54.000000Z'
                    updated_at: '2022-06-18T15:26:54.000000Z'
                    relative: null
                    member_relation_type:
                      id: 2
                      name: Parent
                      created_at: null
                      updated_at: null
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      member_id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'Isaac Aubin'
                      gender:
                        type: string
                        example: male
                      dob:
                        type: string
                        example: null
                      is_alive:
                        type: integer
                        example: 1
                      relation_member_id:
                        type: string
                        example: null
                      member_relation_type_id:
                        type: integer
                        example: 2
                      active:
                        type: boolean
                        example: true
                      created_at:
                        type: string
                        example: '2022-06-18T15:26:54.000000Z'
                      updated_at:
                        type: string
                        example: '2022-06-18T15:26:54.000000Z'
                      relative:
                        type: string
                        example: null
                      member_relation_type:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 2
                          name:
                            type: string
                            example: Parent
                          created_at:
                            type: string
                            example: null
                          updated_at:
                            type: string
                            example: null
      tags:
        - 'Member Relations'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                member_id:
                  type: number
                  description: 'Id of member.'
                  example: 1.0
                name:
                  type: string
                  description: 'Name of member relation.'
                  example: 'Joseph Ansah'
                gender:
                  type: string
                  description: 'Gender of member relation.'
                  example: Male
                dob:
                  type: string
                  description: 'Date of birth of member relation.'
                  example: '1990-01-04'
                is_alive:
                  type: boolean
                  description: 'Member relation alive or dead.'
                  example: true
                active:
                  type: boolean
                  description: 'Member relation active or inactive.'
                  example: true
                member_relation_type_id:
                  type: number
                  description: 'Id of member relation type.'
                  example: 1.0
                relation_member_id:
                  type: number
                  description: 'Linked to member id of members table.'
                  example: 1.0
              required:
                - member_id
                - name
                - gender
                - dob
                - member_relation_type_id
    delete:
      summary: 'Delete Resource'
      operationId: deleteResource
      description: 'Deletes the record with the specified `id`'
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Resource deleted'
                  data:
                    id: 1
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Resource deleted'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'Member Relations'
    parameters:
      -
        in: path
        name: id
        description: 'The id of the resource to view'
        example: 8
        required: true
        schema:
          type: integer
  '/api/organisations/{org_slug}':
    get:
      summary: 'Get Organisation By Slug'
      operationId: getOrganisationBySlug
      description: ''
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Organisation not found'
                properties:
                  message:
                    type: string
                    example: 'Organisation not found'
      tags:
        - 'Membership Registration'
    parameters:
      -
        in: path
        name: org_slug
        description: 'The slug of the org.'
        example: 21
        required: true
        schema:
          type: integer
  '/api/organisations/{org_slug}/organisation_registration_forms/{slug}':
    get:
      summary: 'Get Registration Form By Slug'
      operationId: getRegistrationFormBySlug
      description: ''
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Invalid organisation identifier specified'
                  exception: Symfony\Component\HttpKernel\Exception\HttpException
                  file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Application.php'
                  line: 1360
                  trace:
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\helpers.php'
                      line: 47
                      function: abort
                      class: Illuminate\Foundation\Application
                      type: '->'
                    -
                      file: 'D:\memberz-api\app\Http\Middleware\MultiTenantWithoutAuthentication.php'
                      line: 31
                      function: abort
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: App\Http\Middleware\MultiTenantWithoutAuthentication
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Middleware\SubstituteBindings.php'
                      line: 50
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Routing\Middleware\SubstituteBindings
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 119
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                      line: 805
                      function: then
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                      line: 784
                      function: runRouteWithinStack
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                      line: 748
                      function: runRoute
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                      line: 737
                      function: dispatchToRoute
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                      line: 200
                      function: dispatch
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 144
                      function: 'Illuminate\Foundation\Http\{closure}'
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: 'D:\memberz-api\app\Http\Middleware\Cors.php'
                      line: 34
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: App\Http\Middleware\Cors
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php'
                      line: 21
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull.php'
                      line: 31
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php'
                      line: 21
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TrimStrings.php'
                      line: 51
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TrimStrings
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Http\Middleware\ValidatePostSize.php'
                      line: 27
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Http\Middleware\ValidatePostSize
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance.php'
                      line: 110
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Http\Middleware\TrustProxies.php'
                      line: 57
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Http\Middleware\TrustProxies
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 119
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                      line: 175
                      function: then
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                      line: 144
                      function: sendRequestThroughRouter
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 310
                      function: handle
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 298
                      function: callLaravelOrLumenRoute
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 91
                      function: makeApiCall
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 44
                      function: makeResponseCall
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 35
                      function: makeResponseCallIfConditionsPass
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                      line: 236
                      function: __invoke
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                      line: 163
                      function: iterateThroughStrategies
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                      line: 95
                      function: fetchResponses
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                      line: 125
                      function: processRoute
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                      line: 72
                      function: extractEndpointsInfoFromLaravelApp
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                      line: 50
                      function: extractEndpointsInfoAndWriteToDisk
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Commands\GenerateDocumentation.php'
                      line: 53
                      function: get
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                      line: 36
                      function: handle
                      class: Knuckles\Scribe\Commands\GenerateDocumentation
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Util.php'
                      line: 41
                      function: 'Illuminate\Container\{closure}'
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                      line: 93
                      function: unwrapIfClosure
                      class: Illuminate\Container\Util
                      type: '::'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                      line: 35
                      function: callBoundMethod
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Container.php'
                      line: 662
                      function: call
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Console\Command.php'
                      line: 213
                      function: call
                      class: Illuminate\Container\Container
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\symfony\console\Command\Command.php'
                      line: 279
                      function: execute
                      class: Illuminate\Console\Command
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Console\Command.php'
                      line: 182
                      function: run
                      class: Symfony\Component\Console\Command\Command
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                      line: 1047
                      function: run
                      class: Illuminate\Console\Command
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                      line: 316
                      function: doRunCommand
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                      line: 167
                      function: doRun
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Console\Kernel.php'
                      line: 196
                      function: run
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: 'D:\memberz-api\artisan'
                      line: 35
                      function: handle
                      class: Illuminate\Foundation\Console\Kernel
                      type: '->'
                properties:
                  message:
                    type: string
                    example: 'Invalid organisation identifier specified'
                  exception:
                    type: string
                    example: Symfony\Component\HttpKernel\Exception\HttpException
                  file:
                    type: string
                    example: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Application.php'
                  line:
                    type: integer
                    example: 1360
                  trace:
                    type: array
                    example:
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\helpers.php'
                        line: 47
                        function: abort
                        class: Illuminate\Foundation\Application
                        type: '->'
                      -
                        file: 'D:\memberz-api\app\Http\Middleware\MultiTenantWithoutAuthentication.php'
                        line: 31
                        function: abort
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: App\Http\Middleware\MultiTenantWithoutAuthentication
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Middleware\SubstituteBindings.php'
                        line: 50
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Routing\Middleware\SubstituteBindings
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 119
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                        line: 805
                        function: then
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                        line: 784
                        function: runRouteWithinStack
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                        line: 748
                        function: runRoute
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                        line: 737
                        function: dispatchToRoute
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                        line: 200
                        function: dispatch
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 144
                        function: 'Illuminate\Foundation\Http\{closure}'
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: 'D:\memberz-api\app\Http\Middleware\Cors.php'
                        line: 34
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: App\Http\Middleware\Cors
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php'
                        line: 21
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull.php'
                        line: 31
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php'
                        line: 21
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TrimStrings.php'
                        line: 51
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TrimStrings
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Http\Middleware\ValidatePostSize.php'
                        line: 27
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Http\Middleware\ValidatePostSize
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance.php'
                        line: 110
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Http\Middleware\TrustProxies.php'
                        line: 57
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Http\Middleware\TrustProxies
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 119
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                        line: 175
                        function: then
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                        line: 144
                        function: sendRequestThroughRouter
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 310
                        function: handle
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 298
                        function: callLaravelOrLumenRoute
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 91
                        function: makeApiCall
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 44
                        function: makeResponseCall
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 35
                        function: makeResponseCallIfConditionsPass
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                        line: 236
                        function: __invoke
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                        line: 163
                        function: iterateThroughStrategies
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                        line: 95
                        function: fetchResponses
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                        line: 125
                        function: processRoute
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                        line: 72
                        function: extractEndpointsInfoFromLaravelApp
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                        line: 50
                        function: extractEndpointsInfoAndWriteToDisk
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Commands\GenerateDocumentation.php'
                        line: 53
                        function: get
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                        line: 36
                        function: handle
                        class: Knuckles\Scribe\Commands\GenerateDocumentation
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Util.php'
                        line: 41
                        function: 'Illuminate\Container\{closure}'
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                        line: 93
                        function: unwrapIfClosure
                        class: Illuminate\Container\Util
                        type: '::'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                        line: 35
                        function: callBoundMethod
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Container.php'
                        line: 662
                        function: call
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Console\Command.php'
                        line: 213
                        function: call
                        class: Illuminate\Container\Container
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\symfony\console\Command\Command.php'
                        line: 279
                        function: execute
                        class: Illuminate\Console\Command
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Console\Command.php'
                        line: 182
                        function: run
                        class: Symfony\Component\Console\Command\Command
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                        line: 1047
                        function: run
                        class: Illuminate\Console\Command
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                        line: 316
                        function: doRunCommand
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                        line: 167
                        function: doRun
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Console\Kernel.php'
                        line: 196
                        function: run
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: 'D:\memberz-api\artisan'
                        line: 35
                        function: handle
                        class: Illuminate\Foundation\Console\Kernel
                        type: '->'
                    items:
                      type: object
                      properties:
                        file:
                          type: string
                          example: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\helpers.php'
                        line:
                          type: integer
                          example: 47
                        function:
                          type: string
                          example: abort
                        class:
                          type: string
                          example: Illuminate\Foundation\Application
                        type:
                          type: string
                          example: '->'
      tags:
        - 'Membership Registration'
    parameters:
      -
        in: path
        name: org_slug
        description: 'The slug of the org.'
        example: 21
        required: true
        schema:
          type: integer
      -
        in: path
        name: slug
        description: 'The slug of the organisation registration form.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/organisations/{org_slug}/organisation_members/{id}':
    get:
      summary: 'Registration Form Registrants'
      operationId: registrationFormRegistrants
      description: ''
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Invalid organisation identifier specified'
                  exception: Symfony\Component\HttpKernel\Exception\HttpException
                  file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Application.php'
                  line: 1360
                  trace:
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\helpers.php'
                      line: 47
                      function: abort
                      class: Illuminate\Foundation\Application
                      type: '->'
                    -
                      file: 'D:\memberz-api\app\Http\Middleware\MultiTenantWithoutAuthentication.php'
                      line: 31
                      function: abort
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: App\Http\Middleware\MultiTenantWithoutAuthentication
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Middleware\SubstituteBindings.php'
                      line: 50
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Routing\Middleware\SubstituteBindings
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 119
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                      line: 805
                      function: then
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                      line: 784
                      function: runRouteWithinStack
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                      line: 748
                      function: runRoute
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                      line: 737
                      function: dispatchToRoute
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                      line: 200
                      function: dispatch
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 144
                      function: 'Illuminate\Foundation\Http\{closure}'
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: 'D:\memberz-api\app\Http\Middleware\Cors.php'
                      line: 34
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: App\Http\Middleware\Cors
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php'
                      line: 21
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull.php'
                      line: 31
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php'
                      line: 21
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TrimStrings.php'
                      line: 51
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TrimStrings
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Http\Middleware\ValidatePostSize.php'
                      line: 27
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Http\Middleware\ValidatePostSize
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance.php'
                      line: 110
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Http\Middleware\TrustProxies.php'
                      line: 57
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Http\Middleware\TrustProxies
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 119
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                      line: 175
                      function: then
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                      line: 144
                      function: sendRequestThroughRouter
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 310
                      function: handle
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 298
                      function: callLaravelOrLumenRoute
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 91
                      function: makeApiCall
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 44
                      function: makeResponseCall
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 35
                      function: makeResponseCallIfConditionsPass
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                      line: 236
                      function: __invoke
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                      line: 163
                      function: iterateThroughStrategies
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                      line: 95
                      function: fetchResponses
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                      line: 125
                      function: processRoute
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                      line: 72
                      function: extractEndpointsInfoFromLaravelApp
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                      line: 50
                      function: extractEndpointsInfoAndWriteToDisk
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Commands\GenerateDocumentation.php'
                      line: 53
                      function: get
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                      line: 36
                      function: handle
                      class: Knuckles\Scribe\Commands\GenerateDocumentation
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Util.php'
                      line: 41
                      function: 'Illuminate\Container\{closure}'
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                      line: 93
                      function: unwrapIfClosure
                      class: Illuminate\Container\Util
                      type: '::'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                      line: 35
                      function: callBoundMethod
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Container.php'
                      line: 662
                      function: call
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Console\Command.php'
                      line: 213
                      function: call
                      class: Illuminate\Container\Container
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\symfony\console\Command\Command.php'
                      line: 279
                      function: execute
                      class: Illuminate\Console\Command
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Console\Command.php'
                      line: 182
                      function: run
                      class: Symfony\Component\Console\Command\Command
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                      line: 1047
                      function: run
                      class: Illuminate\Console\Command
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                      line: 316
                      function: doRunCommand
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                      line: 167
                      function: doRun
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Console\Kernel.php'
                      line: 196
                      function: run
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: 'D:\memberz-api\artisan'
                      line: 35
                      function: handle
                      class: Illuminate\Foundation\Console\Kernel
                      type: '->'
                properties:
                  message:
                    type: string
                    example: 'Invalid organisation identifier specified'
                  exception:
                    type: string
                    example: Symfony\Component\HttpKernel\Exception\HttpException
                  file:
                    type: string
                    example: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Application.php'
                  line:
                    type: integer
                    example: 1360
                  trace:
                    type: array
                    example:
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\helpers.php'
                        line: 47
                        function: abort
                        class: Illuminate\Foundation\Application
                        type: '->'
                      -
                        file: 'D:\memberz-api\app\Http\Middleware\MultiTenantWithoutAuthentication.php'
                        line: 31
                        function: abort
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: App\Http\Middleware\MultiTenantWithoutAuthentication
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Middleware\SubstituteBindings.php'
                        line: 50
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Routing\Middleware\SubstituteBindings
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 119
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                        line: 805
                        function: then
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                        line: 784
                        function: runRouteWithinStack
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                        line: 748
                        function: runRoute
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                        line: 737
                        function: dispatchToRoute
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                        line: 200
                        function: dispatch
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 144
                        function: 'Illuminate\Foundation\Http\{closure}'
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: 'D:\memberz-api\app\Http\Middleware\Cors.php'
                        line: 34
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: App\Http\Middleware\Cors
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php'
                        line: 21
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull.php'
                        line: 31
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php'
                        line: 21
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TrimStrings.php'
                        line: 51
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TrimStrings
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Http\Middleware\ValidatePostSize.php'
                        line: 27
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Http\Middleware\ValidatePostSize
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance.php'
                        line: 110
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Http\Middleware\TrustProxies.php'
                        line: 57
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Http\Middleware\TrustProxies
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 119
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                        line: 175
                        function: then
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                        line: 144
                        function: sendRequestThroughRouter
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 310
                        function: handle
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 298
                        function: callLaravelOrLumenRoute
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 91
                        function: makeApiCall
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 44
                        function: makeResponseCall
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 35
                        function: makeResponseCallIfConditionsPass
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                        line: 236
                        function: __invoke
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                        line: 163
                        function: iterateThroughStrategies
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                        line: 95
                        function: fetchResponses
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                        line: 125
                        function: processRoute
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                        line: 72
                        function: extractEndpointsInfoFromLaravelApp
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                        line: 50
                        function: extractEndpointsInfoAndWriteToDisk
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Commands\GenerateDocumentation.php'
                        line: 53
                        function: get
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                        line: 36
                        function: handle
                        class: Knuckles\Scribe\Commands\GenerateDocumentation
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Util.php'
                        line: 41
                        function: 'Illuminate\Container\{closure}'
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                        line: 93
                        function: unwrapIfClosure
                        class: Illuminate\Container\Util
                        type: '::'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                        line: 35
                        function: callBoundMethod
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Container.php'
                        line: 662
                        function: call
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Console\Command.php'
                        line: 213
                        function: call
                        class: Illuminate\Container\Container
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\symfony\console\Command\Command.php'
                        line: 279
                        function: execute
                        class: Illuminate\Console\Command
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Console\Command.php'
                        line: 182
                        function: run
                        class: Symfony\Component\Console\Command\Command
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                        line: 1047
                        function: run
                        class: Illuminate\Console\Command
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                        line: 316
                        function: doRunCommand
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                        line: 167
                        function: doRun
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Console\Kernel.php'
                        line: 196
                        function: run
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: 'D:\memberz-api\artisan'
                        line: 35
                        function: handle
                        class: Illuminate\Foundation\Console\Kernel
                        type: '->'
                    items:
                      type: object
                      properties:
                        file:
                          type: string
                          example: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\helpers.php'
                        line:
                          type: integer
                          example: 47
                        function:
                          type: string
                          example: abort
                        class:
                          type: string
                          example: Illuminate\Foundation\Application
                        type:
                          type: string
                          example: '->'
      tags:
        - 'Membership Registration'
    parameters:
      -
        in: path
        name: org_slug
        description: 'The slug of the org.'
        example: 21
        required: true
        schema:
          type: integer
      -
        in: path
        name: id
        description: 'The ID of the organisation member.'
        example: 711
        required: true
        schema:
          type: integer
  '/api/organisations/{org_slug}/memberships/{id}':
    get:
      summary: 'Registration Form Registrants'
      operationId: registrationFormRegistrants
      description: ''
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Invalid organisation identifier specified'
                  exception: Symfony\Component\HttpKernel\Exception\HttpException
                  file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Application.php'
                  line: 1360
                  trace:
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\helpers.php'
                      line: 47
                      function: abort
                      class: Illuminate\Foundation\Application
                      type: '->'
                    -
                      file: 'D:\memberz-api\app\Http\Middleware\MultiTenantWithoutAuthentication.php'
                      line: 31
                      function: abort
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: App\Http\Middleware\MultiTenantWithoutAuthentication
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Middleware\SubstituteBindings.php'
                      line: 50
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Routing\Middleware\SubstituteBindings
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 119
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                      line: 805
                      function: then
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                      line: 784
                      function: runRouteWithinStack
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                      line: 748
                      function: runRoute
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                      line: 737
                      function: dispatchToRoute
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                      line: 200
                      function: dispatch
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 144
                      function: 'Illuminate\Foundation\Http\{closure}'
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: 'D:\memberz-api\app\Http\Middleware\Cors.php'
                      line: 34
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: App\Http\Middleware\Cors
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php'
                      line: 21
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull.php'
                      line: 31
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php'
                      line: 21
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TrimStrings.php'
                      line: 51
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TrimStrings
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Http\Middleware\ValidatePostSize.php'
                      line: 27
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Http\Middleware\ValidatePostSize
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance.php'
                      line: 110
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Http\Middleware\TrustProxies.php'
                      line: 57
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Http\Middleware\TrustProxies
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 119
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                      line: 175
                      function: then
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                      line: 144
                      function: sendRequestThroughRouter
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 310
                      function: handle
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 298
                      function: callLaravelOrLumenRoute
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 91
                      function: makeApiCall
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 44
                      function: makeResponseCall
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 35
                      function: makeResponseCallIfConditionsPass
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                      line: 236
                      function: __invoke
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                      line: 163
                      function: iterateThroughStrategies
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                      line: 95
                      function: fetchResponses
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                      line: 125
                      function: processRoute
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                      line: 72
                      function: extractEndpointsInfoFromLaravelApp
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                      line: 50
                      function: extractEndpointsInfoAndWriteToDisk
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Commands\GenerateDocumentation.php'
                      line: 53
                      function: get
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                      line: 36
                      function: handle
                      class: Knuckles\Scribe\Commands\GenerateDocumentation
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Util.php'
                      line: 41
                      function: 'Illuminate\Container\{closure}'
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                      line: 93
                      function: unwrapIfClosure
                      class: Illuminate\Container\Util
                      type: '::'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                      line: 35
                      function: callBoundMethod
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Container.php'
                      line: 662
                      function: call
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Console\Command.php'
                      line: 213
                      function: call
                      class: Illuminate\Container\Container
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\symfony\console\Command\Command.php'
                      line: 279
                      function: execute
                      class: Illuminate\Console\Command
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Console\Command.php'
                      line: 182
                      function: run
                      class: Symfony\Component\Console\Command\Command
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                      line: 1047
                      function: run
                      class: Illuminate\Console\Command
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                      line: 316
                      function: doRunCommand
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                      line: 167
                      function: doRun
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Console\Kernel.php'
                      line: 196
                      function: run
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: 'D:\memberz-api\artisan'
                      line: 35
                      function: handle
                      class: Illuminate\Foundation\Console\Kernel
                      type: '->'
                properties:
                  message:
                    type: string
                    example: 'Invalid organisation identifier specified'
                  exception:
                    type: string
                    example: Symfony\Component\HttpKernel\Exception\HttpException
                  file:
                    type: string
                    example: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Application.php'
                  line:
                    type: integer
                    example: 1360
                  trace:
                    type: array
                    example:
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\helpers.php'
                        line: 47
                        function: abort
                        class: Illuminate\Foundation\Application
                        type: '->'
                      -
                        file: 'D:\memberz-api\app\Http\Middleware\MultiTenantWithoutAuthentication.php'
                        line: 31
                        function: abort
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: App\Http\Middleware\MultiTenantWithoutAuthentication
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Middleware\SubstituteBindings.php'
                        line: 50
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Routing\Middleware\SubstituteBindings
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 119
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                        line: 805
                        function: then
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                        line: 784
                        function: runRouteWithinStack
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                        line: 748
                        function: runRoute
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                        line: 737
                        function: dispatchToRoute
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                        line: 200
                        function: dispatch
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 144
                        function: 'Illuminate\Foundation\Http\{closure}'
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: 'D:\memberz-api\app\Http\Middleware\Cors.php'
                        line: 34
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: App\Http\Middleware\Cors
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php'
                        line: 21
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull.php'
                        line: 31
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php'
                        line: 21
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TrimStrings.php'
                        line: 51
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TrimStrings
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Http\Middleware\ValidatePostSize.php'
                        line: 27
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Http\Middleware\ValidatePostSize
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance.php'
                        line: 110
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Http\Middleware\TrustProxies.php'
                        line: 57
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Http\Middleware\TrustProxies
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 119
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                        line: 175
                        function: then
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                        line: 144
                        function: sendRequestThroughRouter
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 310
                        function: handle
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 298
                        function: callLaravelOrLumenRoute
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 91
                        function: makeApiCall
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 44
                        function: makeResponseCall
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 35
                        function: makeResponseCallIfConditionsPass
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                        line: 236
                        function: __invoke
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                        line: 163
                        function: iterateThroughStrategies
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                        line: 95
                        function: fetchResponses
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                        line: 125
                        function: processRoute
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                        line: 72
                        function: extractEndpointsInfoFromLaravelApp
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                        line: 50
                        function: extractEndpointsInfoAndWriteToDisk
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Commands\GenerateDocumentation.php'
                        line: 53
                        function: get
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                        line: 36
                        function: handle
                        class: Knuckles\Scribe\Commands\GenerateDocumentation
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Util.php'
                        line: 41
                        function: 'Illuminate\Container\{closure}'
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                        line: 93
                        function: unwrapIfClosure
                        class: Illuminate\Container\Util
                        type: '::'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                        line: 35
                        function: callBoundMethod
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Container.php'
                        line: 662
                        function: call
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Console\Command.php'
                        line: 213
                        function: call
                        class: Illuminate\Container\Container
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\symfony\console\Command\Command.php'
                        line: 279
                        function: execute
                        class: Illuminate\Console\Command
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Console\Command.php'
                        line: 182
                        function: run
                        class: Symfony\Component\Console\Command\Command
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                        line: 1047
                        function: run
                        class: Illuminate\Console\Command
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                        line: 316
                        function: doRunCommand
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                        line: 167
                        function: doRun
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Console\Kernel.php'
                        line: 196
                        function: run
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: 'D:\memberz-api\artisan'
                        line: 35
                        function: handle
                        class: Illuminate\Foundation\Console\Kernel
                        type: '->'
                    items:
                      type: object
                      properties:
                        file:
                          type: string
                          example: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\helpers.php'
                        line:
                          type: integer
                          example: 47
                        function:
                          type: string
                          example: abort
                        class:
                          type: string
                          example: Illuminate\Foundation\Application
                        type:
                          type: string
                          example: '->'
      tags:
        - 'Membership Registration'
    delete:
      summary: 'Delete Membership'
      operationId: deleteMembership
      description: ''
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Invalid organisation identifier specified'
                  exception: Symfony\Component\HttpKernel\Exception\HttpException
                  file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Application.php'
                  line: 1360
                  trace:
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\helpers.php'
                      line: 47
                      function: abort
                      class: Illuminate\Foundation\Application
                      type: '->'
                    -
                      file: 'D:\memberz-api\app\Http\Middleware\MultiTenantWithoutAuthentication.php'
                      line: 31
                      function: abort
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: App\Http\Middleware\MultiTenantWithoutAuthentication
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Middleware\SubstituteBindings.php'
                      line: 50
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Routing\Middleware\SubstituteBindings
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 119
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                      line: 805
                      function: then
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                      line: 784
                      function: runRouteWithinStack
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                      line: 748
                      function: runRoute
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                      line: 737
                      function: dispatchToRoute
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                      line: 200
                      function: dispatch
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 144
                      function: 'Illuminate\Foundation\Http\{closure}'
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: 'D:\memberz-api\app\Http\Middleware\Cors.php'
                      line: 34
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: App\Http\Middleware\Cors
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php'
                      line: 21
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull.php'
                      line: 31
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php'
                      line: 21
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TrimStrings.php'
                      line: 51
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TrimStrings
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Http\Middleware\ValidatePostSize.php'
                      line: 27
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Http\Middleware\ValidatePostSize
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance.php'
                      line: 110
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Http\Middleware\TrustProxies.php'
                      line: 57
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Http\Middleware\TrustProxies
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 119
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                      line: 175
                      function: then
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                      line: 144
                      function: sendRequestThroughRouter
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 310
                      function: handle
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 298
                      function: callLaravelOrLumenRoute
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 91
                      function: makeApiCall
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 44
                      function: makeResponseCall
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 35
                      function: makeResponseCallIfConditionsPass
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                      line: 236
                      function: __invoke
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                      line: 163
                      function: iterateThroughStrategies
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                      line: 95
                      function: fetchResponses
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                      line: 125
                      function: processRoute
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                      line: 72
                      function: extractEndpointsInfoFromLaravelApp
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                      line: 50
                      function: extractEndpointsInfoAndWriteToDisk
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Commands\GenerateDocumentation.php'
                      line: 53
                      function: get
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                      line: 36
                      function: handle
                      class: Knuckles\Scribe\Commands\GenerateDocumentation
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Util.php'
                      line: 41
                      function: 'Illuminate\Container\{closure}'
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                      line: 93
                      function: unwrapIfClosure
                      class: Illuminate\Container\Util
                      type: '::'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                      line: 35
                      function: callBoundMethod
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Container.php'
                      line: 662
                      function: call
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Console\Command.php'
                      line: 213
                      function: call
                      class: Illuminate\Container\Container
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\symfony\console\Command\Command.php'
                      line: 279
                      function: execute
                      class: Illuminate\Console\Command
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Console\Command.php'
                      line: 182
                      function: run
                      class: Symfony\Component\Console\Command\Command
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                      line: 1047
                      function: run
                      class: Illuminate\Console\Command
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                      line: 316
                      function: doRunCommand
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                      line: 167
                      function: doRun
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Console\Kernel.php'
                      line: 196
                      function: run
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: 'D:\memberz-api\artisan'
                      line: 35
                      function: handle
                      class: Illuminate\Foundation\Console\Kernel
                      type: '->'
                properties:
                  message:
                    type: string
                    example: 'Invalid organisation identifier specified'
                  exception:
                    type: string
                    example: Symfony\Component\HttpKernel\Exception\HttpException
                  file:
                    type: string
                    example: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Application.php'
                  line:
                    type: integer
                    example: 1360
                  trace:
                    type: array
                    example:
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\helpers.php'
                        line: 47
                        function: abort
                        class: Illuminate\Foundation\Application
                        type: '->'
                      -
                        file: 'D:\memberz-api\app\Http\Middleware\MultiTenantWithoutAuthentication.php'
                        line: 31
                        function: abort
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: App\Http\Middleware\MultiTenantWithoutAuthentication
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Middleware\SubstituteBindings.php'
                        line: 50
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Routing\Middleware\SubstituteBindings
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 119
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                        line: 805
                        function: then
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                        line: 784
                        function: runRouteWithinStack
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                        line: 748
                        function: runRoute
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                        line: 737
                        function: dispatchToRoute
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                        line: 200
                        function: dispatch
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 144
                        function: 'Illuminate\Foundation\Http\{closure}'
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: 'D:\memberz-api\app\Http\Middleware\Cors.php'
                        line: 34
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: App\Http\Middleware\Cors
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php'
                        line: 21
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull.php'
                        line: 31
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php'
                        line: 21
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TrimStrings.php'
                        line: 51
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TrimStrings
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Http\Middleware\ValidatePostSize.php'
                        line: 27
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Http\Middleware\ValidatePostSize
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance.php'
                        line: 110
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Http\Middleware\TrustProxies.php'
                        line: 57
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Http\Middleware\TrustProxies
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 119
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                        line: 175
                        function: then
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                        line: 144
                        function: sendRequestThroughRouter
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 310
                        function: handle
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 298
                        function: callLaravelOrLumenRoute
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 91
                        function: makeApiCall
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 44
                        function: makeResponseCall
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 35
                        function: makeResponseCallIfConditionsPass
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                        line: 236
                        function: __invoke
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                        line: 163
                        function: iterateThroughStrategies
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                        line: 95
                        function: fetchResponses
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                        line: 125
                        function: processRoute
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                        line: 72
                        function: extractEndpointsInfoFromLaravelApp
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                        line: 50
                        function: extractEndpointsInfoAndWriteToDisk
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Commands\GenerateDocumentation.php'
                        line: 53
                        function: get
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                        line: 36
                        function: handle
                        class: Knuckles\Scribe\Commands\GenerateDocumentation
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Util.php'
                        line: 41
                        function: 'Illuminate\Container\{closure}'
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                        line: 93
                        function: unwrapIfClosure
                        class: Illuminate\Container\Util
                        type: '::'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                        line: 35
                        function: callBoundMethod
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Container.php'
                        line: 662
                        function: call
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Console\Command.php'
                        line: 213
                        function: call
                        class: Illuminate\Container\Container
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\symfony\console\Command\Command.php'
                        line: 279
                        function: execute
                        class: Illuminate\Console\Command
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Console\Command.php'
                        line: 182
                        function: run
                        class: Symfony\Component\Console\Command\Command
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                        line: 1047
                        function: run
                        class: Illuminate\Console\Command
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                        line: 316
                        function: doRunCommand
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                        line: 167
                        function: doRun
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Console\Kernel.php'
                        line: 196
                        function: run
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: 'D:\memberz-api\artisan'
                        line: 35
                        function: handle
                        class: Illuminate\Foundation\Console\Kernel
                        type: '->'
                    items:
                      type: object
                      properties:
                        file:
                          type: string
                          example: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\helpers.php'
                        line:
                          type: integer
                          example: 47
                        function:
                          type: string
                          example: abort
                        class:
                          type: string
                          example: Illuminate\Foundation\Application
                        type:
                          type: string
                          example: '->'
      tags:
        - 'Organisation Members'
    parameters:
      -
        in: path
        name: org_slug
        description: 'The slug of the org.'
        example: 21
        required: true
        schema:
          type: integer
      -
        in: path
        name: id
        description: 'The ID of the membership.'
        example: et
        required: true
        schema:
          type: string
  '/api/notifications/{id}/mark_read':
    post:
      summary: 'Mark As Read'
      operationId: markAsRead
      description: 'Mark a specific notification as read'
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Notifications
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the notification.'
        example: et
        required: true
        schema:
          type: string
  /api/notifications/mark_all_read:
    post:
      summary: 'Mark All Read'
      operationId: markAllRead
      description: 'Mark all unread notifications as read'
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Notifications
  /api/notifications/unread:
    get:
      summary: 'Get Unread'
      operationId: getUnread
      description: ''
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Notifications
  /api/notifications:
    get:
      summary: 'Get All'
      operationId: getAll
      description: "Returns a list of items in this resource and allows filtering the data based on fields in the database\n\nOptions for searching / filtering\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Notifications
  '/api/notifications/subscribe/{member_id}':
    get:
      summary: 'Subscribe To Notifications'
      operationId: subscribeToNotifications
      description: "Subscribe to Server Sent Events (SSEs) for real time notification of new notification\nmessages that come through for the logged in user"
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: ''
      tags:
        - Notifications
    parameters:
      -
        in: path
        name: member_id
        description: 'The ID of the member.'
        example: laborum
        required: true
        schema:
          type: string
  /api/organisation_registration_forms/count:
    get:
      summary: 'Count Resources'
      operationId: countResources
      description: 'Returns a simple count of data in this resource'
      parameters:
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Organisation
  /api/organisation_registration_forms/search:
    get:
      summary: 'Search Resources'
      operationId: searchResources
      description: "Allows searching for data in this resource using multiple options.\n\nOptions for searching\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
          example: ut
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
            example: ut
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Organisation
  /api/organisation_registration_forms:
    get:
      summary: 'Get All'
      operationId: getAll
      description: "Returns a list of items in this resource and allows filtering the data based on fields in the database\n\nOptions for searching / filtering\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Organisation
    post:
      summary: 'Send Message'
      operationId: sendMessage
      description: 'Adds a message to the queue to dispatch to the phone number'
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Organisation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                organisation_id:
                  type: number
                  description: ''
                  example: 67.751051
                organisation_member_category_id:
                  type: number
                  description: ''
                  example: 14085908.516
                name:
                  type: string
                  description: ''
                  example: veritatis
                description:
                  type: string
                  description: ''
                  example: 'Quos odit est placeat dolores qui labore.'
                expiration_dt:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2024-11-08T10:13:05'
                excluded_standard_fields:
                  type: string
                  description: ''
                  example: earum
                custom_fields:
                  type: string
                  description: 'Must be a valid JSON string.'
                  example: '["aut","ex"]'
                form_enabled:
                  type: boolean
                  description: ''
                  example: false
                deleted_at:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2024-11-08T10:13:05'
              required:
                - organisation_id
                - organisation_member_category_id
                - name
  '/api/organisation_registration_forms/{id}':
    get:
      summary: 'View Resource'
      operationId: viewResource
      description: "Returns information about a specific record in this resource. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - Organisation
    put:
      summary: 'Update Resource'
      operationId: updateResource
      description: "Updates the data of the record with the specified `id`. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message:
                    - 'validation error messages'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: array
                    example:
                      - 'validation error messages'
                    items:
                      type: string
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Details of error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Details of error message'
      tags:
        - Organisation
    delete:
      summary: 'Delete Resource'
      operationId: deleteResource
      description: 'Deletes the record with the specified `id`'
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Resource deleted'
                  data:
                    id: 1
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Resource deleted'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - Organisation
    parameters:
      -
        in: path
        name: id
        description: 'The id of the resource to view'
        example: 2
        required: true
        schema:
          type: integer
  '/api/organisation_accounts/{organisation_id}/{member_account_id}':
    get:
      summary: 'Get User Specific Account'
      operationId: getUserSpecificAccount
      description: ''
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Organisation Accounts'
    parameters:
      -
        in: path
        name: organisation_id
        description: 'The ID of the organisation.'
        example: 12
        required: true
        schema:
          type: integer
      -
        in: path
        name: member_account_id
        description: 'The ID of the member account.'
        example: quia
        required: true
        schema:
          type: string
  /api/organisation_accounts/count:
    get:
      summary: 'Count Resources'
      operationId: countResources
      description: 'Returns a simple count of data in this resource'
      parameters:
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Organisation Accounts'
  /api/organisation_accounts/search:
    get:
      summary: 'Search Resources'
      operationId: searchResources
      description: "Allows searching for data in this resource using multiple options.\n\nOptions for searching\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
          example: inventore
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
            example: inventore
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Organisation Accounts'
  /api/organisation_accounts:
    get:
      summary: 'Get All'
      operationId: getAll
      description: "Returns a list of items in this resource and allows filtering the data based on fields in the database\n\nOptions for searching / filtering\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Organisation Accounts'
    post:
      summary: 'Create Account'
      operationId: createAccount
      description: "NOTE: If the MemberAccount does not exist for this organisation account being created,\none will be created in the prepareValidation method of the OrganisationAccountRequest\nobject and the member_account_id updated before it is saved to the database\n\nUser will receive a notification via email to reset their password"
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Organisation Accounts'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                organisation_id:
                  type: number
                  description: ''
                  example: 619224012.30826
                member_id:
                  type: number
                  description: 'This field is required when <code>member_account_id</code> is not present.'
                  example: 879900.648179
                member_account_id:
                  type: number
                  description: 'This field is required when <code>member_id</code> is not present.'
                  example: 1408.752942
                organisation_role_id:
                  type: number
                  description: ''
                  example: 11388.6
              required:
                - organisation_id
                - organisation_role_id
  '/api/organisation_accounts/{id}':
    get:
      summary: 'View Resource'
      operationId: viewResource
      description: "Returns information about a specific record in this resource. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'Organisation Accounts'
    put:
      summary: 'Update Account'
      operationId: updateAccount
      description: ''
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Organisation Accounts'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                organisation_id:
                  type: number
                  description: ''
                  example: 47189490.809696
                member_id:
                  type: number
                  description: 'This field is required when <code>member_account_id</code> is not present.'
                  example: 520.36415561
                member_account_id:
                  type: number
                  description: 'This field is required when <code>member_id</code> is not present.'
                  example: 20044290.418
                organisation_role_id:
                  type: number
                  description: ''
                  example: 19.10577
              required:
                - organisation_id
                - organisation_role_id
    delete:
      summary: 'Delete Resource'
      operationId: deleteResource
      description: 'Deletes the record with the specified `id`'
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Resource deleted'
                  data:
                    id: 1
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Resource deleted'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'Organisation Accounts'
    parameters:
      -
        in: path
        name: id
        description: 'The id of the resource to view'
        example: 15
        required: true
        schema:
          type: integer
  /api/organisation_anniversaries/count:
    get:
      summary: 'Count Resources'
      operationId: countResources
      description: 'Returns a simple count of data in this resource'
      parameters:
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Organisation Anniversary'
  /api/organisation_anniversaries/search:
    get:
      summary: 'Search Resources'
      operationId: searchResources
      description: "Allows searching for data in this resource using multiple options.\n\nOptions for searching\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
          example: rerum
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
            example: rerum
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Organisation Anniversary'
  /api/organisation_anniversaries:
    get:
      summary: 'Get All'
      operationId: getAll
      description: "Returns a list of items in this resource and allows filtering the data based on fields in the database\n\nOptions for searching / filtering\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Organisation Anniversary'
    post:
      summary: 'Create Resource'
      operationId: createResource
      description: "Create a new record of this resource in the database. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message:
                    - 'validation error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: array
                    example:
                      - 'validation error message'
                    items:
                      type: string
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Details of error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Details of error message'
      tags:
        - 'Organisation Anniversary'
  '/api/organisation_anniversaries/{id}':
    get:
      summary: 'View Resource'
      operationId: viewResource
      description: "Returns information about a specific record in this resource. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'Organisation Anniversary'
    put:
      summary: 'Update Resource'
      operationId: updateResource
      description: "Updates the data of the record with the specified `id`. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message:
                    - 'validation error messages'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: array
                    example:
                      - 'validation error messages'
                    items:
                      type: string
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Details of error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Details of error message'
      tags:
        - 'Organisation Anniversary'
    delete:
      summary: 'Delete Resource'
      operationId: deleteResource
      description: 'Deletes the record with the specified `id`'
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Resource deleted'
                  data:
                    id: 1
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Resource deleted'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'Organisation Anniversary'
    parameters:
      -
        in: path
        name: id
        description: 'The id of the resource to view'
        example: 1
        required: true
        schema:
          type: integer
  /api/organisation_member_anniversaries/count:
    get:
      summary: 'Count Resources'
      operationId: countResources
      description: 'Returns a simple count of data in this resource'
      parameters:
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Organisation Anniversary'
  /api/organisation_member_anniversaries/search:
    get:
      summary: 'Search Resources'
      operationId: searchResources
      description: "Allows searching for data in this resource using multiple options.\n\nOptions for searching\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
          example: iste
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
            example: iste
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Organisation Anniversary'
  /api/organisation_member_anniversaries:
    get:
      summary: 'Get All'
      operationId: getAll
      description: "Returns a list of items in this resource and allows filtering the data based on fields in the database\n\nOptions for searching / filtering\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Organisation Anniversary'
    post:
      summary: 'Create Resource'
      operationId: createResource
      description: "Create a new record of this resource in the database. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message:
                    - 'validation error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: array
                    example:
                      - 'validation error message'
                    items:
                      type: string
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Details of error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Details of error message'
      tags:
        - 'Organisation Anniversary'
  '/api/organisation_member_anniversaries/{id}':
    get:
      summary: 'View Resource'
      operationId: viewResource
      description: "Returns information about a specific record in this resource. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'Organisation Anniversary'
    put:
      summary: 'Update Resource'
      operationId: updateResource
      description: "Updates the data of the record with the specified `id`. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message:
                    - 'validation error messages'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: array
                    example:
                      - 'validation error messages'
                    items:
                      type: string
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Details of error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Details of error message'
      tags:
        - 'Organisation Anniversary'
    delete:
      summary: 'Delete Resource'
      operationId: deleteResource
      description: 'Deletes the record with the specified `id`'
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Resource deleted'
                  data:
                    id: 1
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Resource deleted'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'Organisation Anniversary'
    parameters:
      -
        in: path
        name: id
        description: 'The id of the resource to view'
        example: 8
        required: true
        schema:
          type: integer
  /api/organisation_branches/count:
    get:
      summary: 'Count Resources'
      operationId: countResources
      description: 'Returns a simple count of data in this resource'
      parameters:
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Organisation Branches'
  /api/organisation_branches/search:
    get:
      summary: 'Search Resources'
      operationId: searchResources
      description: "Allows searching for data in this resource using multiple options.\n\nOptions for searching\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
          example: recusandae
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
            example: recusandae
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Organisation Branches'
  /api/organisation_branches:
    get:
      summary: 'Get All'
      operationId: getAll
      description: "Returns a list of items in this resource and allows filtering the data based on fields in the database\n\nOptions for searching / filtering\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Organisation Branches'
    post:
      summary: 'Create Branch'
      operationId: createBranch
      description: ''
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Organisation Branches'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                organisation_id:
                  type: number
                  description: 'The parent organisation of this relationship.'
                  example: 1.0
                branch_organisation_id:
                  type: number
                  description: 'The branch organisation of this relationship.'
                  example: 2.0
                primary_member_id:
                  type: number
                  description: 'The primary contact person in this organisation.'
                  example: 1234.0
                secondary_member_id:
                  type: number
                  description: 'The secondary contact person in this organisation.'
                  example: 1444.0
                tags:
                  type: object
                  description: ''
                  example: null
                  properties: {  }
              required:
                - organisation_id
                - branch_organisation_id
  '/api/organisation_branches/{id}':
    get:
      summary: 'View Resource'
      operationId: viewResource
      description: "Returns information about a specific record in this resource. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'Organisation Branches'
    put:
      summary: 'Update Branch'
      operationId: updateBranch
      description: ''
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Organisation Branches'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                organisation_id:
                  type: number
                  description: 'The parent organisation of this relationship.'
                  example: 1.0
                branch_organisation_id:
                  type: number
                  description: 'The branch organisation of this relationship.'
                  example: 2.0
                primary_member_id:
                  type: number
                  description: 'The primary contact person in this organisation.'
                  example: 1234.0
                secondary_member_id:
                  type: number
                  description: 'The secondary contact person in this organisation.'
                  example: 1444.0
                tags:
                  type: object
                  description: ''
                  example: null
                  properties: {  }
              required:
                - organisation_id
                - branch_organisation_id
    delete:
      summary: 'Delete Resource'
      operationId: deleteResource
      description: 'Deletes the record with the specified `id`'
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Resource deleted'
                  data:
                    id: 1
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Resource deleted'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'Organisation Branches'
    parameters:
      -
        in: path
        name: id
        description: 'The id of the resource to view'
        example: 17
        required: true
        schema:
          type: integer
  /api/organisation_file_imports/count:
    get:
      summary: 'Count Resources'
      operationId: countResources
      description: 'Returns a simple count of data in this resource'
      parameters:
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Organisation File Imports'
  /api/organisation_file_imports/search:
    get:
      summary: 'Search Resources'
      operationId: searchResources
      description: "Allows searching for data in this resource using multiple options.\n\nOptions for searching\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
          example: quaerat
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
            example: quaerat
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Organisation File Imports'
  /api/organisation_file_imports:
    get:
      summary: 'Get All'
      operationId: getAll
      description: "Returns a list of items in this resource and allows filtering the data based on fields in the database\n\nOptions for searching / filtering\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Organisation File Imports'
    post:
      summary: 'Import File'
      operationId: importFile
      description: ''
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Organisation File Imports'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                organisation_id:
                  type: number
                  description: ''
                  example: 82187143.735
                import_to_id:
                  type: number
                  description: ''
                  example: 289470752.387
                import_type:
                  type: string
                  description: ''
                  example: contributions
                  enum:
                    - members
                    - contributions
                import_file:
                  type: string
                  format: binary
                  description: 'Must be a file.'
              required:
                - organisation_id
                - import_to_id
                - import_type
                - import_file
  '/api/organisation_file_imports/{id}':
    get:
      summary: 'View Resource'
      operationId: viewResource
      description: "Returns information about a specific record in this resource. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'Organisation File Imports'
    put:
      summary: 'Update Import'
      operationId: updateImport
      description: ''
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Organisation File Imports'
    delete:
      summary: 'Delete Resource'
      operationId: deleteResource
      description: 'Deletes the record with the specified `id`'
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Resource deleted'
                  data:
                    id: 1
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Resource deleted'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'Organisation File Imports'
    parameters:
      -
        in: path
        name: id
        description: 'The id of the resource to view'
        example: 14
        required: true
        schema:
          type: integer
  /api/organisation_group_leaders/count:
    get:
      summary: 'Count Resources'
      operationId: countResources
      description: 'Returns a simple count of data in this resource'
      parameters:
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Organisation Group Leaders'
  /api/organisation_group_leaders/search:
    get:
      summary: 'Search Resources'
      operationId: searchResources
      description: "Allows searching for data in this resource using multiple options.\n\nOptions for searching\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
          example: veritatis
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
            example: veritatis
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Organisation Group Leaders'
  /api/organisation_group_leaders:
    get:
      summary: 'Get All'
      operationId: getAll
      description: "Returns a list of items in this resource and allows filtering the data based on fields in the database\n\nOptions for searching / filtering\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Organisation Group Leaders'
    post:
      summary: 'Create Resource'
      operationId: createResource
      description: "Create a new record of this resource in the database. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message:
                    - 'validation error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: array
                    example:
                      - 'validation error message'
                    items:
                      type: string
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Details of error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Details of error message'
      tags:
        - 'Organisation Group Leaders'
  '/api/organisation_group_leaders/{id}':
    get:
      summary: 'View Resource'
      operationId: viewResource
      description: "Returns information about a specific record in this resource. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'Organisation Group Leaders'
    put:
      summary: 'Update Resource'
      operationId: updateResource
      description: "Updates the data of the record with the specified `id`. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message:
                    - 'validation error messages'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: array
                    example:
                      - 'validation error messages'
                    items:
                      type: string
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Details of error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Details of error message'
      tags:
        - 'Organisation Group Leaders'
    delete:
      summary: 'Delete Resource'
      operationId: deleteResource
      description: 'Deletes the record with the specified `id`'
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Resource deleted'
                  data:
                    id: 1
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Resource deleted'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'Organisation Group Leaders'
    parameters:
      -
        in: path
        name: id
        description: 'The id of the resource to view'
        example: 16
        required: true
        schema:
          type: integer
  /api/organisation_group_types/count:
    get:
      summary: 'Count Resources'
      operationId: countResources
      description: 'Returns a simple count of data in this resource'
      parameters:
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Organisation Group Types'
  /api/organisation_group_types/search:
    get:
      summary: 'Search Resources'
      operationId: searchResources
      description: "Allows searching for data in this resource using multiple options.\n\nOptions for searching\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
          example: enim
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
            example: enim
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Organisation Group Types'
  /api/organisation_group_types:
    get:
      summary: 'Get All'
      operationId: getAll
      description: "Returns a list of items in this resource and allows filtering the data based on fields in the database\n\nOptions for searching / filtering\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Organisation Group Types'
    post:
      summary: 'Create Resource'
      operationId: createResource
      description: "Create a new record of this resource in the database. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message:
                    - 'validation error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: array
                    example:
                      - 'validation error message'
                    items:
                      type: string
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Details of error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Details of error message'
      tags:
        - 'Organisation Group Types'
  '/api/organisation_group_types/{id}':
    get:
      summary: 'View Resource'
      operationId: viewResource
      description: "Returns information about a specific record in this resource. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'Organisation Group Types'
    put:
      summary: 'Update Resource'
      operationId: updateResource
      description: "Updates the data of the record with the specified `id`. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message:
                    - 'validation error messages'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: array
                    example:
                      - 'validation error messages'
                    items:
                      type: string
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Details of error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Details of error message'
      tags:
        - 'Organisation Group Types'
    delete:
      summary: 'Delete Resource'
      operationId: deleteResource
      description: 'Deletes the record with the specified `id`'
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Resource deleted'
                  data:
                    id: 1
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Resource deleted'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'Organisation Group Types'
    parameters:
      -
        in: path
        name: id
        description: 'The id of the resource to view'
        example: 12
        required: true
        schema:
          type: integer
  /api/organisation_groups/count:
    get:
      summary: 'Count Resources'
      operationId: countResources
      description: 'Returns a simple count of data in this resource'
      parameters:
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Organisation Groups'
  /api/organisation_groups/search:
    get:
      summary: 'Search Resources'
      operationId: searchResources
      description: "Allows searching for data in this resource using multiple options.\n\nOptions for searching\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
          example: ut
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
            example: ut
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Organisation Groups'
  /api/organisation_groups:
    get:
      summary: 'Get All'
      operationId: getAll
      description: "Returns a list of items in this resource and allows filtering the data based on fields in the database\n\nOptions for searching / filtering\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Organisation Groups'
    post:
      summary: 'Create Group'
      operationId: createGroup
      description: ''
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Organisation Groups'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                organisation_id:
                  type: number
                  description: 'The organisation of this group record.'
                  example: 1.0
                organisation_group_type_id:
                  type: number
                  description: 'The group type of this group record.'
                  example: 1.0
                name:
                  type: string
                  description: 'The name of this group record.'
                  example: Default
                active:
                  type: string
                  description: 'The active state of this group record.'
                  example: 1
                organisation_group_leaders:
                  type: array
                  description: ''
                  example:
                    - []
                  items:
                    type: object
                    properties:
                      id:
                        type: number
                        description: 'The ID of a leader of this group.'
                        example: 1.0
                      name:
                        type: string
                        description: 'The name of a leader of this group.'
                        example: 'James Ans'
                      role:
                        type: string
                        description: 'The role of a leader of this group.'
                        example: President
                      organisation_member_id:
                        type: number
                        description: 'The membership ID of a leader of this group.'
                        example: 1.0
              required:
                - organisation_id
                - organisation_group_type_id
                - name
  '/api/organisation_groups/{id}':
    get:
      summary: 'View Resource'
      operationId: viewResource
      description: "Returns information about a specific record in this resource. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'Organisation Groups'
    put:
      summary: 'Update Group'
      operationId: updateGroup
      description: ''
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Organisation Groups'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                organisation_id:
                  type: number
                  description: 'The organisation of this group record.'
                  example: 1.0
                organisation_group_type_id:
                  type: number
                  description: 'The group type of this group record.'
                  example: 1.0
                name:
                  type: string
                  description: 'The name of this group record.'
                  example: Default
                active:
                  type: string
                  description: 'The active state of this group record.'
                  example: 1
                organisation_group_leaders:
                  type: array
                  description: ''
                  example:
                    - []
                  items:
                    type: object
                    properties:
                      id:
                        type: number
                        description: 'The ID of a leader of this group.'
                        example: 1.0
                      name:
                        type: string
                        description: 'The name of a leader of this group.'
                        example: 'James Ans'
                      role:
                        type: string
                        description: 'The role of a leader of this group.'
                        example: President
                      organisation_member_id:
                        type: number
                        description: 'The membership ID of a leader of this group.'
                        example: 1.0
              required:
                - organisation_id
                - organisation_group_type_id
                - name
    delete:
      summary: 'Delete Resource'
      operationId: deleteResource
      description: 'Deletes the record with the specified `id`'
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Resource deleted'
                  data:
                    id: 1
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Resource deleted'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'Organisation Groups'
    parameters:
      -
        in: path
        name: id
        description: 'The id of the resource to view'
        example: 10
        required: true
        schema:
          type: integer
  /api/organisation_invoice_items/count:
    get:
      summary: 'Count Resources'
      operationId: countResources
      description: 'Returns a simple count of data in this resource'
      parameters:
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Organisation Invoice Items'
  /api/organisation_invoice_items/search:
    get:
      summary: 'Search Resources'
      operationId: searchResources
      description: "Allows searching for data in this resource using multiple options.\n\nOptions for searching\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
          example: placeat
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
            example: placeat
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Organisation Invoice Items'
  /api/organisation_invoice_items:
    get:
      summary: 'Get All'
      operationId: getAll
      description: "Returns a list of items in this resource and allows filtering the data based on fields in the database\n\nOptions for searching / filtering\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Organisation Invoice Items'
    post:
      summary: 'Create Resource'
      operationId: createResource
      description: "Create a new record of this resource in the database. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message:
                    - 'validation error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: array
                    example:
                      - 'validation error message'
                    items:
                      type: string
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Details of error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Details of error message'
      tags:
        - 'Organisation Invoice Items'
  '/api/organisation_invoice_items/{id}':
    get:
      summary: 'View Resource'
      operationId: viewResource
      description: "Returns information about a specific record in this resource. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'Organisation Invoice Items'
    put:
      summary: 'Update Resource'
      operationId: updateResource
      description: "Updates the data of the record with the specified `id`. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message:
                    - 'validation error messages'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: array
                    example:
                      - 'validation error messages'
                    items:
                      type: string
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Details of error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Details of error message'
      tags:
        - 'Organisation Invoice Items'
    delete:
      summary: 'Delete Resource'
      operationId: deleteResource
      description: 'Deletes the record with the specified `id`'
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Resource deleted'
                  data:
                    id: 1
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Resource deleted'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'Organisation Invoice Items'
    parameters:
      -
        in: path
        name: id
        description: 'The id of the resource to view'
        example: 8
        required: true
        schema:
          type: integer
  /api/organisation_invoice_payments/count:
    get:
      summary: 'Count Resources'
      operationId: countResources
      description: 'Returns a simple count of data in this resource'
      parameters:
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Organisation Invoice Payments'
  /api/organisation_invoice_payments/search:
    get:
      summary: 'Search Resources'
      operationId: searchResources
      description: "Allows searching for data in this resource using multiple options.\n\nOptions for searching\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
          example: quo
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
            example: quo
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Organisation Invoice Payments'
  /api/organisation_invoice_payments:
    get:
      summary: 'Get All'
      operationId: getAll
      description: "Returns a list of items in this resource and allows filtering the data based on fields in the database\n\nOptions for searching / filtering\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Organisation Invoice Payments'
    post:
      summary: 'Create Resource'
      operationId: createResource
      description: "Create a new record of this resource in the database. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message:
                    - 'validation error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: array
                    example:
                      - 'validation error message'
                    items:
                      type: string
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Details of error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Details of error message'
      tags:
        - 'Organisation Invoice Payments'
  '/api/organisation_invoice_payments/{id}':
    get:
      summary: 'View Resource'
      operationId: viewResource
      description: "Returns information about a specific record in this resource. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'Organisation Invoice Payments'
    put:
      summary: 'Update Resource'
      operationId: updateResource
      description: "Updates the data of the record with the specified `id`. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message:
                    - 'validation error messages'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: array
                    example:
                      - 'validation error messages'
                    items:
                      type: string
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Details of error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Details of error message'
      tags:
        - 'Organisation Invoice Payments'
    delete:
      summary: 'Delete Resource'
      operationId: deleteResource
      description: 'Deletes the record with the specified `id`'
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Resource deleted'
                  data:
                    id: 1
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Resource deleted'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'Organisation Invoice Payments'
    parameters:
      -
        in: path
        name: id
        description: 'The id of the resource to view'
        example: 9
        required: true
        schema:
          type: integer
  /api/organisation_invoices/count:
    get:
      summary: 'Count Resources'
      operationId: countResources
      description: 'Returns a simple count of data in this resource'
      parameters:
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Organisation Invoices'
  /api/organisation_invoices/search:
    get:
      summary: 'Search Resources'
      operationId: searchResources
      description: "Allows searching for data in this resource using multiple options.\n\nOptions for searching\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
          example: aut
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
            example: aut
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Organisation Invoices'
  /api/organisation_invoices:
    get:
      summary: 'Get All'
      operationId: getAll
      description: "Returns a list of items in this resource and allows filtering the data based on fields in the database\n\nOptions for searching / filtering\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Organisation Invoices'
    post:
      summary: 'Create Resource'
      operationId: createResource
      description: "Create a new record of this resource in the database. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message:
                    - 'validation error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: array
                    example:
                      - 'validation error message'
                    items:
                      type: string
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Details of error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Details of error message'
      tags:
        - 'Organisation Invoices'
  '/api/organisation_invoices/{id}':
    get:
      summary: 'View Resource'
      operationId: viewResource
      description: "Returns information about a specific record in this resource. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'Organisation Invoices'
    put:
      summary: 'Update Resource'
      operationId: updateResource
      description: "Updates the data of the record with the specified `id`. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message:
                    - 'validation error messages'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: array
                    example:
                      - 'validation error messages'
                    items:
                      type: string
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Details of error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Details of error message'
      tags:
        - 'Organisation Invoices'
    delete:
      summary: 'Delete Resource'
      operationId: deleteResource
      description: 'Deletes the record with the specified `id`'
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Resource deleted'
                  data:
                    id: 1
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Resource deleted'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'Organisation Invoices'
    parameters:
      -
        in: path
        name: id
        description: 'The id of the resource to view'
        example: 20
        required: true
        schema:
          type: integer
  '/api/organisations/{org_slug}/membership_categories':
    get:
      summary: 'Get All'
      operationId: getAll
      description: "Returns a list of items in this resource and allows filtering the data based on fields in the database\n\nOptions for searching / filtering\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Invalid organisation identifier specified'
                  exception: Symfony\Component\HttpKernel\Exception\HttpException
                  file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Application.php'
                  line: 1360
                  trace:
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\helpers.php'
                      line: 47
                      function: abort
                      class: Illuminate\Foundation\Application
                      type: '->'
                    -
                      file: 'D:\memberz-api\app\Http\Middleware\MultiTenantWithoutAuthentication.php'
                      line: 31
                      function: abort
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: App\Http\Middleware\MultiTenantWithoutAuthentication
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Middleware\SubstituteBindings.php'
                      line: 50
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Routing\Middleware\SubstituteBindings
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 119
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                      line: 805
                      function: then
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                      line: 784
                      function: runRouteWithinStack
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                      line: 748
                      function: runRoute
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                      line: 737
                      function: dispatchToRoute
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                      line: 200
                      function: dispatch
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 144
                      function: 'Illuminate\Foundation\Http\{closure}'
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: 'D:\memberz-api\app\Http\Middleware\Cors.php'
                      line: 34
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: App\Http\Middleware\Cors
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php'
                      line: 21
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull.php'
                      line: 31
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php'
                      line: 21
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TrimStrings.php'
                      line: 51
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TrimStrings
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Http\Middleware\ValidatePostSize.php'
                      line: 27
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Http\Middleware\ValidatePostSize
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance.php'
                      line: 110
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Http\Middleware\TrustProxies.php'
                      line: 57
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Http\Middleware\TrustProxies
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 119
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                      line: 175
                      function: then
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                      line: 144
                      function: sendRequestThroughRouter
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 310
                      function: handle
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 298
                      function: callLaravelOrLumenRoute
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 91
                      function: makeApiCall
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 44
                      function: makeResponseCall
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 35
                      function: makeResponseCallIfConditionsPass
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                      line: 236
                      function: __invoke
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                      line: 163
                      function: iterateThroughStrategies
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                      line: 95
                      function: fetchResponses
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                      line: 125
                      function: processRoute
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                      line: 72
                      function: extractEndpointsInfoFromLaravelApp
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                      line: 50
                      function: extractEndpointsInfoAndWriteToDisk
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Commands\GenerateDocumentation.php'
                      line: 53
                      function: get
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                      line: 36
                      function: handle
                      class: Knuckles\Scribe\Commands\GenerateDocumentation
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Util.php'
                      line: 41
                      function: 'Illuminate\Container\{closure}'
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                      line: 93
                      function: unwrapIfClosure
                      class: Illuminate\Container\Util
                      type: '::'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                      line: 35
                      function: callBoundMethod
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Container.php'
                      line: 662
                      function: call
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Console\Command.php'
                      line: 213
                      function: call
                      class: Illuminate\Container\Container
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\symfony\console\Command\Command.php'
                      line: 279
                      function: execute
                      class: Illuminate\Console\Command
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Console\Command.php'
                      line: 182
                      function: run
                      class: Symfony\Component\Console\Command\Command
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                      line: 1047
                      function: run
                      class: Illuminate\Console\Command
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                      line: 316
                      function: doRunCommand
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                      line: 167
                      function: doRun
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Console\Kernel.php'
                      line: 196
                      function: run
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: 'D:\memberz-api\artisan'
                      line: 35
                      function: handle
                      class: Illuminate\Foundation\Console\Kernel
                      type: '->'
                properties:
                  message:
                    type: string
                    example: 'Invalid organisation identifier specified'
                  exception:
                    type: string
                    example: Symfony\Component\HttpKernel\Exception\HttpException
                  file:
                    type: string
                    example: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Application.php'
                  line:
                    type: integer
                    example: 1360
                  trace:
                    type: array
                    example:
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\helpers.php'
                        line: 47
                        function: abort
                        class: Illuminate\Foundation\Application
                        type: '->'
                      -
                        file: 'D:\memberz-api\app\Http\Middleware\MultiTenantWithoutAuthentication.php'
                        line: 31
                        function: abort
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: App\Http\Middleware\MultiTenantWithoutAuthentication
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Middleware\SubstituteBindings.php'
                        line: 50
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Routing\Middleware\SubstituteBindings
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 119
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                        line: 805
                        function: then
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                        line: 784
                        function: runRouteWithinStack
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                        line: 748
                        function: runRoute
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                        line: 737
                        function: dispatchToRoute
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                        line: 200
                        function: dispatch
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 144
                        function: 'Illuminate\Foundation\Http\{closure}'
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: 'D:\memberz-api\app\Http\Middleware\Cors.php'
                        line: 34
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: App\Http\Middleware\Cors
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php'
                        line: 21
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull.php'
                        line: 31
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php'
                        line: 21
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TrimStrings.php'
                        line: 51
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TrimStrings
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Http\Middleware\ValidatePostSize.php'
                        line: 27
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Http\Middleware\ValidatePostSize
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance.php'
                        line: 110
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Http\Middleware\TrustProxies.php'
                        line: 57
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Http\Middleware\TrustProxies
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 119
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                        line: 175
                        function: then
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                        line: 144
                        function: sendRequestThroughRouter
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 310
                        function: handle
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 298
                        function: callLaravelOrLumenRoute
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 91
                        function: makeApiCall
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 44
                        function: makeResponseCall
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 35
                        function: makeResponseCallIfConditionsPass
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                        line: 236
                        function: __invoke
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                        line: 163
                        function: iterateThroughStrategies
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                        line: 95
                        function: fetchResponses
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                        line: 125
                        function: processRoute
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                        line: 72
                        function: extractEndpointsInfoFromLaravelApp
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                        line: 50
                        function: extractEndpointsInfoAndWriteToDisk
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Commands\GenerateDocumentation.php'
                        line: 53
                        function: get
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                        line: 36
                        function: handle
                        class: Knuckles\Scribe\Commands\GenerateDocumentation
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Util.php'
                        line: 41
                        function: 'Illuminate\Container\{closure}'
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                        line: 93
                        function: unwrapIfClosure
                        class: Illuminate\Container\Util
                        type: '::'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                        line: 35
                        function: callBoundMethod
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Container.php'
                        line: 662
                        function: call
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Console\Command.php'
                        line: 213
                        function: call
                        class: Illuminate\Container\Container
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\symfony\console\Command\Command.php'
                        line: 279
                        function: execute
                        class: Illuminate\Console\Command
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Console\Command.php'
                        line: 182
                        function: run
                        class: Symfony\Component\Console\Command\Command
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                        line: 1047
                        function: run
                        class: Illuminate\Console\Command
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                        line: 316
                        function: doRunCommand
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                        line: 167
                        function: doRun
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Console\Kernel.php'
                        line: 196
                        function: run
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: 'D:\memberz-api\artisan'
                        line: 35
                        function: handle
                        class: Illuminate\Foundation\Console\Kernel
                        type: '->'
                    items:
                      type: object
                      properties:
                        file:
                          type: string
                          example: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\helpers.php'
                        line:
                          type: integer
                          example: 47
                        function:
                          type: string
                          example: abort
                        class:
                          type: string
                          example: Illuminate\Foundation\Application
                        type:
                          type: string
                          example: '->'
      tags:
        - 'Organisation Member Categories'
    parameters:
      -
        in: path
        name: org_slug
        description: 'The slug of the org.'
        example: 21
        required: true
        schema:
          type: integer
  /api/organisation_member_categories/count:
    get:
      summary: 'Count Resources'
      operationId: countResources
      description: 'Returns a simple count of data in this resource'
      parameters:
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Organisation Member Categories'
  /api/organisation_member_categories/search:
    get:
      summary: 'Search Resources'
      operationId: searchResources
      description: "Allows searching for data in this resource using multiple options.\n\nOptions for searching\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
          example: cum
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
            example: cum
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Organisation Member Categories'
  /api/organisation_member_categories:
    get:
      summary: 'Get All'
      operationId: getAll
      description: "Returns a list of items in this resource and allows filtering the data based on fields in the database\n\nOptions for searching / filtering\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Organisation Member Categories'
    post:
      summary: 'Create Group'
      operationId: createGroup
      description: ''
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Organisation Member Categories'
  '/api/organisation_member_categories/{id}':
    get:
      summary: 'View Resource'
      operationId: viewResource
      description: "Returns information about a specific record in this resource. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'Organisation Member Categories'
    put:
      summary: 'Update Group'
      operationId: updateGroup
      description: ''
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Organisation Member Categories'
    delete:
      summary: 'Delete Resource'
      operationId: deleteResource
      description: 'Deletes the record with the specified `id`'
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Resource deleted'
                  data:
                    id: 1
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Resource deleted'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'Organisation Member Categories'
    parameters:
      -
        in: path
        name: id
        description: 'The id of the resource to view'
        example: 12
        required: true
        schema:
          type: integer
  /api/organisation_member_groups/count:
    get:
      summary: 'Count Resources'
      operationId: countResources
      description: 'Returns a simple count of data in this resource'
      parameters:
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Organisation Member Groups'
  /api/organisation_member_groups/search:
    get:
      summary: 'Search Resources'
      operationId: searchResources
      description: "Allows searching for data in this resource using multiple options.\n\nOptions for searching\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
          example: iusto
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
            example: iusto
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Organisation Member Groups'
  /api/organisation_member_groups:
    get:
      summary: 'Get All'
      operationId: getAll
      description: "Returns a list of items in this resource and allows filtering the data based on fields in the database\n\nOptions for searching / filtering\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Organisation Member Groups'
    post:
      summary: 'Create Association'
      operationId: createAssociation
      description: ''
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    organisation_id: 44
                    organisation_member_id: 856
                    organisation_group_id: 2
                    created: '2014-04-29T12:48:16.000000Z'
                    modified: '2014-04-29T12:48:16.000000Z'
                    active: true
                    organisation_member:
                      id: 856
                      uuid: 2f558244-6f12-4db0-ac92-7df1c01a6e66
                      organisation_id: 44
                      member_id: 1
                      organisation_no: ''
                      organisation_member_category_id: 13
                      organisation_registration_form_id: null
                      status: member
                      source: admin
                      membership_start_dt: null
                      membership_end_dt: null
                      last_renewal_dt: null
                      created: '2014-04-29T00:38:35.000000Z'
                      modified: '2014-04-29T00:38:35.000000Z'
                      approved: 1
                      approved_by: 52
                      custom_attributes: null
                      active: true
                    organisation_group:
                      id: 2
                      organisation_id: 44
                      organisation_group_type_id: 1
                      name: 'Youth Ministry'
                      organisation_member_group_count: 273
                      created: '2014-04-08T13:57:41.000000Z'
                      modified: '2022-03-07T17:07:41.000000Z'
                      active: true
                      organisation_group_type:
                        id: 1
                        organisation_id: 44
                        name: Auxiliary
                        description: ''
                        show_on_reg_forms: 1
                        allow_multi_select: 0
                        created: '-000001-11-30T00:00:00.000000Z'
                        modified: '2016-07-12T18:24:59.000000Z'
                        active: true
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      organisation_id:
                        type: integer
                        example: 44
                      organisation_member_id:
                        type: integer
                        example: 856
                      organisation_group_id:
                        type: integer
                        example: 2
                      created:
                        type: string
                        example: '2014-04-29T12:48:16.000000Z'
                      modified:
                        type: string
                        example: '2014-04-29T12:48:16.000000Z'
                      active:
                        type: boolean
                        example: true
                      organisation_member:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 856
                          uuid:
                            type: string
                            example: 2f558244-6f12-4db0-ac92-7df1c01a6e66
                          organisation_id:
                            type: integer
                            example: 44
                          member_id:
                            type: integer
                            example: 1
                          organisation_no:
                            type: string
                            example: ''
                          organisation_member_category_id:
                            type: integer
                            example: 13
                          organisation_registration_form_id:
                            type: string
                            example: null
                          status:
                            type: string
                            example: member
                          source:
                            type: string
                            example: admin
                          membership_start_dt:
                            type: string
                            example: null
                          membership_end_dt:
                            type: string
                            example: null
                          last_renewal_dt:
                            type: string
                            example: null
                          created:
                            type: string
                            example: '2014-04-29T00:38:35.000000Z'
                          modified:
                            type: string
                            example: '2014-04-29T00:38:35.000000Z'
                          approved:
                            type: integer
                            example: 1
                          approved_by:
                            type: integer
                            example: 52
                          custom_attributes:
                            type: string
                            example: null
                          active:
                            type: boolean
                            example: true
                      organisation_group:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 2
                          organisation_id:
                            type: integer
                            example: 44
                          organisation_group_type_id:
                            type: integer
                            example: 1
                          name:
                            type: string
                            example: 'Youth Ministry'
                          organisation_member_group_count:
                            type: integer
                            example: 273
                          created:
                            type: string
                            example: '2014-04-08T13:57:41.000000Z'
                          modified:
                            type: string
                            example: '2022-03-07T17:07:41.000000Z'
                          active:
                            type: boolean
                            example: true
                          organisation_group_type:
                            type: object
                            properties:
                              id:
                                type: integer
                                example: 1
                              organisation_id:
                                type: integer
                                example: 44
                              name:
                                type: string
                                example: Auxiliary
                              description:
                                type: string
                                example: ''
                              show_on_reg_forms:
                                type: integer
                                example: 1
                              allow_multi_select:
                                type: integer
                                example: 0
                              created:
                                type: string
                                example: '-000001-11-30T00:00:00.000000Z'
                              modified:
                                type: string
                                example: '2016-07-12T18:24:59.000000Z'
                              active:
                                type: boolean
                                example: true
      tags:
        - 'Organisation Member Groups'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                organisation_id:
                  type: number
                  description: 'Organisation this record belongs to.'
                  example: 1.0
                organisation_member_id:
                  type: number
                  description: 'Membership this record belongs to.'
                  example: 1.0
                organisation_group_id:
                  type: number
                  description: 'Group this record belongs to.'
                  example: 1.0
              required:
                - organisation_id
                - organisation_member_id
                - organisation_group_id
  '/api/organisation_member_groups/{id}':
    get:
      summary: 'View Resource'
      operationId: viewResource
      description: "Returns information about a specific record in this resource. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'Organisation Member Groups'
    put:
      summary: 'Update Association'
      operationId: updateAssociation
      description: ''
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    organisation_id: 44
                    organisation_member_id: 856
                    organisation_group_id: 2
                    created: '2014-04-29T12:48:16.000000Z'
                    modified: '2014-04-29T12:48:16.000000Z'
                    active: true
                    organisation_member:
                      id: 856
                      uuid: 2f558244-6f12-4db0-ac92-7df1c01a6e66
                      organisation_id: 44
                      member_id: 1
                      organisation_no: ''
                      organisation_member_category_id: 13
                      organisation_registration_form_id: null
                      status: member
                      source: admin
                      membership_start_dt: null
                      membership_end_dt: null
                      last_renewal_dt: null
                      created: '2014-04-29T00:38:35.000000Z'
                      modified: '2014-04-29T00:38:35.000000Z'
                      approved: 1
                      approved_by: 52
                      custom_attributes: null
                      active: true
                    organisation_group:
                      id: 2
                      organisation_id: 44
                      organisation_group_type_id: 1
                      name: 'Youth Ministry'
                      organisation_member_group_count: 273
                      created: '2014-04-08T13:57:41.000000Z'
                      modified: '2022-03-07T17:07:41.000000Z'
                      active: true
                      organisation_group_type:
                        id: 1
                        organisation_id: 44
                        name: Auxiliary
                        description: ''
                        show_on_reg_forms: 1
                        allow_multi_select: 0
                        created: '-000001-11-30T00:00:00.000000Z'
                        modified: '2016-07-12T18:24:59.000000Z'
                        active: true
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      organisation_id:
                        type: integer
                        example: 44
                      organisation_member_id:
                        type: integer
                        example: 856
                      organisation_group_id:
                        type: integer
                        example: 2
                      created:
                        type: string
                        example: '2014-04-29T12:48:16.000000Z'
                      modified:
                        type: string
                        example: '2014-04-29T12:48:16.000000Z'
                      active:
                        type: boolean
                        example: true
                      organisation_member:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 856
                          uuid:
                            type: string
                            example: 2f558244-6f12-4db0-ac92-7df1c01a6e66
                          organisation_id:
                            type: integer
                            example: 44
                          member_id:
                            type: integer
                            example: 1
                          organisation_no:
                            type: string
                            example: ''
                          organisation_member_category_id:
                            type: integer
                            example: 13
                          organisation_registration_form_id:
                            type: string
                            example: null
                          status:
                            type: string
                            example: member
                          source:
                            type: string
                            example: admin
                          membership_start_dt:
                            type: string
                            example: null
                          membership_end_dt:
                            type: string
                            example: null
                          last_renewal_dt:
                            type: string
                            example: null
                          created:
                            type: string
                            example: '2014-04-29T00:38:35.000000Z'
                          modified:
                            type: string
                            example: '2014-04-29T00:38:35.000000Z'
                          approved:
                            type: integer
                            example: 1
                          approved_by:
                            type: integer
                            example: 52
                          custom_attributes:
                            type: string
                            example: null
                          active:
                            type: boolean
                            example: true
                      organisation_group:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 2
                          organisation_id:
                            type: integer
                            example: 44
                          organisation_group_type_id:
                            type: integer
                            example: 1
                          name:
                            type: string
                            example: 'Youth Ministry'
                          organisation_member_group_count:
                            type: integer
                            example: 273
                          created:
                            type: string
                            example: '2014-04-08T13:57:41.000000Z'
                          modified:
                            type: string
                            example: '2022-03-07T17:07:41.000000Z'
                          active:
                            type: boolean
                            example: true
                          organisation_group_type:
                            type: object
                            properties:
                              id:
                                type: integer
                                example: 1
                              organisation_id:
                                type: integer
                                example: 44
                              name:
                                type: string
                                example: Auxiliary
                              description:
                                type: string
                                example: ''
                              show_on_reg_forms:
                                type: integer
                                example: 1
                              allow_multi_select:
                                type: integer
                                example: 0
                              created:
                                type: string
                                example: '-000001-11-30T00:00:00.000000Z'
                              modified:
                                type: string
                                example: '2016-07-12T18:24:59.000000Z'
                              active:
                                type: boolean
                                example: true
      tags:
        - 'Organisation Member Groups'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                organisation_id:
                  type: number
                  description: 'Organisation this record belongs to.'
                  example: 1.0
                organisation_member_id:
                  type: number
                  description: 'Membership this record belongs to.'
                  example: 1.0
                organisation_group_id:
                  type: number
                  description: 'Group this record belongs to.'
                  example: 1.0
              required:
                - organisation_id
                - organisation_member_id
                - organisation_group_id
    delete:
      summary: 'Delete Resource'
      operationId: deleteResource
      description: 'Deletes the record with the specified `id`'
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Resource deleted'
                  data:
                    id: 1
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Resource deleted'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'Organisation Member Groups'
    parameters:
      -
        in: path
        name: id
        description: 'The id of the resource to view'
        example: 7
        required: true
        schema:
          type: integer
  /api/organisation_member_imports/count:
    get:
      summary: 'Count Resources'
      operationId: countResources
      description: 'Returns a simple count of data in this resource'
      parameters:
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Organisation Member Imports'
  /api/organisation_member_imports/search:
    get:
      summary: 'Search Resources'
      operationId: searchResources
      description: "Allows searching for data in this resource using multiple options.\n\nOptions for searching\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
          example: commodi
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
            example: commodi
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Organisation Member Imports'
  /api/organisation_member_imports:
    get:
      summary: 'Get All'
      operationId: getAll
      description: "Returns a list of items in this resource and allows filtering the data based on fields in the database\n\nOptions for searching / filtering\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Organisation Member Imports'
    post:
      summary: 'Create Resource'
      operationId: createResource
      description: "Create a new record of this resource in the database. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message:
                    - 'validation error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: array
                    example:
                      - 'validation error message'
                    items:
                      type: string
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Details of error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Details of error message'
      tags:
        - 'Organisation Member Imports'
  '/api/organisation_member_imports/{id}':
    get:
      summary: 'View Resource'
      operationId: viewResource
      description: "Returns information about a specific record in this resource. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'Organisation Member Imports'
    put:
      summary: 'Update Resource'
      operationId: updateResource
      description: "Updates the data of the record with the specified `id`. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message:
                    - 'validation error messages'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: array
                    example:
                      - 'validation error messages'
                    items:
                      type: string
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Details of error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Details of error message'
      tags:
        - 'Organisation Member Imports'
    delete:
      summary: 'Delete Resource'
      operationId: deleteResource
      description: 'Deletes the record with the specified `id`'
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Resource deleted'
                  data:
                    id: 1
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Resource deleted'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'Organisation Member Imports'
    parameters:
      -
        in: path
        name: id
        description: 'The id of the resource to view'
        example: 5
        required: true
        schema:
          type: integer
  '/api/organisations/{org_slug}/organisation_members':
    post:
      summary: ''
      operationId: postApiOrganisationsOrg_slugOrganisation_members
      description: ''
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Invalid organisation identifier specified'
                  exception: Symfony\Component\HttpKernel\Exception\HttpException
                  file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Application.php'
                  line: 1360
                  trace:
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\helpers.php'
                      line: 47
                      function: abort
                      class: Illuminate\Foundation\Application
                      type: '->'
                    -
                      file: 'D:\memberz-api\app\Http\Middleware\MultiTenantWithoutAuthentication.php'
                      line: 31
                      function: abort
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: App\Http\Middleware\MultiTenantWithoutAuthentication
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Middleware\SubstituteBindings.php'
                      line: 50
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Routing\Middleware\SubstituteBindings
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 119
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                      line: 805
                      function: then
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                      line: 784
                      function: runRouteWithinStack
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                      line: 748
                      function: runRoute
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                      line: 737
                      function: dispatchToRoute
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                      line: 200
                      function: dispatch
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 144
                      function: 'Illuminate\Foundation\Http\{closure}'
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: 'D:\memberz-api\app\Http\Middleware\Cors.php'
                      line: 34
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: App\Http\Middleware\Cors
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php'
                      line: 21
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull.php'
                      line: 31
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php'
                      line: 21
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TrimStrings.php'
                      line: 51
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TrimStrings
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Http\Middleware\ValidatePostSize.php'
                      line: 27
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Http\Middleware\ValidatePostSize
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance.php'
                      line: 110
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Http\Middleware\TrustProxies.php'
                      line: 57
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Http\Middleware\TrustProxies
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 119
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                      line: 175
                      function: then
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                      line: 144
                      function: sendRequestThroughRouter
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 310
                      function: handle
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 298
                      function: callLaravelOrLumenRoute
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 91
                      function: makeApiCall
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 44
                      function: makeResponseCall
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 35
                      function: makeResponseCallIfConditionsPass
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                      line: 236
                      function: __invoke
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                      line: 163
                      function: iterateThroughStrategies
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                      line: 95
                      function: fetchResponses
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                      line: 125
                      function: processRoute
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                      line: 72
                      function: extractEndpointsInfoFromLaravelApp
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                      line: 50
                      function: extractEndpointsInfoAndWriteToDisk
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Commands\GenerateDocumentation.php'
                      line: 53
                      function: get
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                      line: 36
                      function: handle
                      class: Knuckles\Scribe\Commands\GenerateDocumentation
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Util.php'
                      line: 41
                      function: 'Illuminate\Container\{closure}'
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                      line: 93
                      function: unwrapIfClosure
                      class: Illuminate\Container\Util
                      type: '::'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                      line: 35
                      function: callBoundMethod
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Container.php'
                      line: 662
                      function: call
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Console\Command.php'
                      line: 213
                      function: call
                      class: Illuminate\Container\Container
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\symfony\console\Command\Command.php'
                      line: 279
                      function: execute
                      class: Illuminate\Console\Command
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Console\Command.php'
                      line: 182
                      function: run
                      class: Symfony\Component\Console\Command\Command
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                      line: 1047
                      function: run
                      class: Illuminate\Console\Command
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                      line: 316
                      function: doRunCommand
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                      line: 167
                      function: doRun
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Console\Kernel.php'
                      line: 196
                      function: run
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: 'D:\memberz-api\artisan'
                      line: 35
                      function: handle
                      class: Illuminate\Foundation\Console\Kernel
                      type: '->'
                properties:
                  message:
                    type: string
                    example: 'Invalid organisation identifier specified'
                  exception:
                    type: string
                    example: Symfony\Component\HttpKernel\Exception\HttpException
                  file:
                    type: string
                    example: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Application.php'
                  line:
                    type: integer
                    example: 1360
                  trace:
                    type: array
                    example:
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\helpers.php'
                        line: 47
                        function: abort
                        class: Illuminate\Foundation\Application
                        type: '->'
                      -
                        file: 'D:\memberz-api\app\Http\Middleware\MultiTenantWithoutAuthentication.php'
                        line: 31
                        function: abort
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: App\Http\Middleware\MultiTenantWithoutAuthentication
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Middleware\SubstituteBindings.php'
                        line: 50
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Routing\Middleware\SubstituteBindings
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 119
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                        line: 805
                        function: then
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                        line: 784
                        function: runRouteWithinStack
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                        line: 748
                        function: runRoute
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                        line: 737
                        function: dispatchToRoute
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                        line: 200
                        function: dispatch
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 144
                        function: 'Illuminate\Foundation\Http\{closure}'
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: 'D:\memberz-api\app\Http\Middleware\Cors.php'
                        line: 34
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: App\Http\Middleware\Cors
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php'
                        line: 21
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull.php'
                        line: 31
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php'
                        line: 21
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TrimStrings.php'
                        line: 51
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TrimStrings
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Http\Middleware\ValidatePostSize.php'
                        line: 27
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Http\Middleware\ValidatePostSize
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance.php'
                        line: 110
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Http\Middleware\TrustProxies.php'
                        line: 57
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Http\Middleware\TrustProxies
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 119
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                        line: 175
                        function: then
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                        line: 144
                        function: sendRequestThroughRouter
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 310
                        function: handle
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 298
                        function: callLaravelOrLumenRoute
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 91
                        function: makeApiCall
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 44
                        function: makeResponseCall
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 35
                        function: makeResponseCallIfConditionsPass
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                        line: 236
                        function: __invoke
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                        line: 163
                        function: iterateThroughStrategies
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                        line: 95
                        function: fetchResponses
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                        line: 125
                        function: processRoute
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                        line: 72
                        function: extractEndpointsInfoFromLaravelApp
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                        line: 50
                        function: extractEndpointsInfoAndWriteToDisk
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Commands\GenerateDocumentation.php'
                        line: 53
                        function: get
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                        line: 36
                        function: handle
                        class: Knuckles\Scribe\Commands\GenerateDocumentation
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Util.php'
                        line: 41
                        function: 'Illuminate\Container\{closure}'
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                        line: 93
                        function: unwrapIfClosure
                        class: Illuminate\Container\Util
                        type: '::'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                        line: 35
                        function: callBoundMethod
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Container.php'
                        line: 662
                        function: call
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Console\Command.php'
                        line: 213
                        function: call
                        class: Illuminate\Container\Container
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\symfony\console\Command\Command.php'
                        line: 279
                        function: execute
                        class: Illuminate\Console\Command
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Console\Command.php'
                        line: 182
                        function: run
                        class: Symfony\Component\Console\Command\Command
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                        line: 1047
                        function: run
                        class: Illuminate\Console\Command
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                        line: 316
                        function: doRunCommand
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                        line: 167
                        function: doRun
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Console\Kernel.php'
                        line: 196
                        function: run
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: 'D:\memberz-api\artisan'
                        line: 35
                        function: handle
                        class: Illuminate\Foundation\Console\Kernel
                        type: '->'
                    items:
                      type: object
                      properties:
                        file:
                          type: string
                          example: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\helpers.php'
                        line:
                          type: integer
                          example: 47
                        function:
                          type: string
                          example: abort
                        class:
                          type: string
                          example: Illuminate\Foundation\Application
                        type:
                          type: string
                          example: '->'
      tags:
        - 'Organisation Members'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                organisation_id:
                  type: number
                  description: ''
                  example: 3266458.0
                organisation_no:
                  type: string
                  description: ''
                  example: quia
                member_id:
                  type: string
                  description: 'This field is required when none of <code>first_name</code>, <code>last_name</code>, <code>mobile_number</code>, and <code>gender</code> are present.'
                  example: null
                organisation_member_category_id:
                  type: string
                  description: ''
                  example: aspernatur
                first_name:
                  type: string
                  description: 'This field is required when <code>member_id</code> is not present.'
                  example: voluptatum
                last_name:
                  type: string
                  description: 'This field is required when <code>member_id</code> is not present.'
                  example: ratione
                mobile_number:
                  type: string
                  description: 'This field is required when <code>member_id</code> is not present.'
                  example: et
                gender:
                  type: string
                  description: 'This field is required when <code>member_id</code> is not present.'
                  example: male
                  enum:
                    - male
                    - female
                dob:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2024-11-08T10:13:01'
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: melyssa07@example.net
              required:
                - organisation_id
                - organisation_member_category_id
    get:
      summary: 'Get All'
      operationId: getAll
      description: "Returns a list of items in this resource and allows filtering the data based on fields in the database\n\nOptions for searching / filtering\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Invalid organisation identifier specified'
                  exception: Symfony\Component\HttpKernel\Exception\HttpException
                  file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Application.php'
                  line: 1360
                  trace:
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\helpers.php'
                      line: 47
                      function: abort
                      class: Illuminate\Foundation\Application
                      type: '->'
                    -
                      file: 'D:\memberz-api\app\Http\Middleware\MultiTenantWithoutAuthentication.php'
                      line: 31
                      function: abort
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: App\Http\Middleware\MultiTenantWithoutAuthentication
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Middleware\SubstituteBindings.php'
                      line: 50
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Routing\Middleware\SubstituteBindings
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 119
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                      line: 805
                      function: then
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                      line: 784
                      function: runRouteWithinStack
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                      line: 748
                      function: runRoute
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                      line: 737
                      function: dispatchToRoute
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                      line: 200
                      function: dispatch
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 144
                      function: 'Illuminate\Foundation\Http\{closure}'
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: 'D:\memberz-api\app\Http\Middleware\Cors.php'
                      line: 34
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: App\Http\Middleware\Cors
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php'
                      line: 21
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull.php'
                      line: 31
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php'
                      line: 21
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TrimStrings.php'
                      line: 51
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TrimStrings
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Http\Middleware\ValidatePostSize.php'
                      line: 27
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Http\Middleware\ValidatePostSize
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance.php'
                      line: 110
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Http\Middleware\TrustProxies.php'
                      line: 57
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Http\Middleware\TrustProxies
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 119
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                      line: 175
                      function: then
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                      line: 144
                      function: sendRequestThroughRouter
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 310
                      function: handle
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 298
                      function: callLaravelOrLumenRoute
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 91
                      function: makeApiCall
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 44
                      function: makeResponseCall
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 35
                      function: makeResponseCallIfConditionsPass
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                      line: 236
                      function: __invoke
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                      line: 163
                      function: iterateThroughStrategies
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                      line: 95
                      function: fetchResponses
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                      line: 125
                      function: processRoute
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                      line: 72
                      function: extractEndpointsInfoFromLaravelApp
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                      line: 50
                      function: extractEndpointsInfoAndWriteToDisk
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Commands\GenerateDocumentation.php'
                      line: 53
                      function: get
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                      line: 36
                      function: handle
                      class: Knuckles\Scribe\Commands\GenerateDocumentation
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Util.php'
                      line: 41
                      function: 'Illuminate\Container\{closure}'
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                      line: 93
                      function: unwrapIfClosure
                      class: Illuminate\Container\Util
                      type: '::'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                      line: 35
                      function: callBoundMethod
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Container.php'
                      line: 662
                      function: call
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Console\Command.php'
                      line: 213
                      function: call
                      class: Illuminate\Container\Container
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\symfony\console\Command\Command.php'
                      line: 279
                      function: execute
                      class: Illuminate\Console\Command
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Console\Command.php'
                      line: 182
                      function: run
                      class: Symfony\Component\Console\Command\Command
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                      line: 1047
                      function: run
                      class: Illuminate\Console\Command
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                      line: 316
                      function: doRunCommand
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                      line: 167
                      function: doRun
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Console\Kernel.php'
                      line: 196
                      function: run
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: 'D:\memberz-api\artisan'
                      line: 35
                      function: handle
                      class: Illuminate\Foundation\Console\Kernel
                      type: '->'
                properties:
                  message:
                    type: string
                    example: 'Invalid organisation identifier specified'
                  exception:
                    type: string
                    example: Symfony\Component\HttpKernel\Exception\HttpException
                  file:
                    type: string
                    example: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Application.php'
                  line:
                    type: integer
                    example: 1360
                  trace:
                    type: array
                    example:
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\helpers.php'
                        line: 47
                        function: abort
                        class: Illuminate\Foundation\Application
                        type: '->'
                      -
                        file: 'D:\memberz-api\app\Http\Middleware\MultiTenantWithoutAuthentication.php'
                        line: 31
                        function: abort
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: App\Http\Middleware\MultiTenantWithoutAuthentication
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Middleware\SubstituteBindings.php'
                        line: 50
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Routing\Middleware\SubstituteBindings
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 119
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                        line: 805
                        function: then
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                        line: 784
                        function: runRouteWithinStack
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                        line: 748
                        function: runRoute
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                        line: 737
                        function: dispatchToRoute
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                        line: 200
                        function: dispatch
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 144
                        function: 'Illuminate\Foundation\Http\{closure}'
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: 'D:\memberz-api\app\Http\Middleware\Cors.php'
                        line: 34
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: App\Http\Middleware\Cors
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php'
                        line: 21
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull.php'
                        line: 31
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php'
                        line: 21
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TrimStrings.php'
                        line: 51
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TrimStrings
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Http\Middleware\ValidatePostSize.php'
                        line: 27
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Http\Middleware\ValidatePostSize
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance.php'
                        line: 110
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Http\Middleware\TrustProxies.php'
                        line: 57
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Http\Middleware\TrustProxies
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 119
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                        line: 175
                        function: then
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                        line: 144
                        function: sendRequestThroughRouter
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 310
                        function: handle
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 298
                        function: callLaravelOrLumenRoute
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 91
                        function: makeApiCall
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 44
                        function: makeResponseCall
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 35
                        function: makeResponseCallIfConditionsPass
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                        line: 236
                        function: __invoke
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                        line: 163
                        function: iterateThroughStrategies
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                        line: 95
                        function: fetchResponses
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                        line: 125
                        function: processRoute
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                        line: 72
                        function: extractEndpointsInfoFromLaravelApp
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                        line: 50
                        function: extractEndpointsInfoAndWriteToDisk
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Commands\GenerateDocumentation.php'
                        line: 53
                        function: get
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                        line: 36
                        function: handle
                        class: Knuckles\Scribe\Commands\GenerateDocumentation
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Util.php'
                        line: 41
                        function: 'Illuminate\Container\{closure}'
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                        line: 93
                        function: unwrapIfClosure
                        class: Illuminate\Container\Util
                        type: '::'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                        line: 35
                        function: callBoundMethod
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Container.php'
                        line: 662
                        function: call
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Console\Command.php'
                        line: 213
                        function: call
                        class: Illuminate\Container\Container
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\symfony\console\Command\Command.php'
                        line: 279
                        function: execute
                        class: Illuminate\Console\Command
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Console\Command.php'
                        line: 182
                        function: run
                        class: Symfony\Component\Console\Command\Command
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                        line: 1047
                        function: run
                        class: Illuminate\Console\Command
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                        line: 316
                        function: doRunCommand
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                        line: 167
                        function: doRun
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Console\Kernel.php'
                        line: 196
                        function: run
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: 'D:\memberz-api\artisan'
                        line: 35
                        function: handle
                        class: Illuminate\Foundation\Console\Kernel
                        type: '->'
                    items:
                      type: object
                      properties:
                        file:
                          type: string
                          example: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\helpers.php'
                        line:
                          type: integer
                          example: 47
                        function:
                          type: string
                          example: abort
                        class:
                          type: string
                          example: Illuminate\Foundation\Application
                        type:
                          type: string
                          example: '->'
      tags:
        - 'Organisation Members'
    parameters:
      -
        in: path
        name: org_slug
        description: 'The slug of the org.'
        example: 21
        required: true
        schema:
          type: integer
  '/api/organisations/{org_slug}/memberships':
    post:
      summary: ''
      operationId: postApiOrganisationsOrg_slugMemberships
      description: ''
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Invalid organisation identifier specified'
                  exception: Symfony\Component\HttpKernel\Exception\HttpException
                  file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Application.php'
                  line: 1360
                  trace:
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\helpers.php'
                      line: 47
                      function: abort
                      class: Illuminate\Foundation\Application
                      type: '->'
                    -
                      file: 'D:\memberz-api\app\Http\Middleware\MultiTenantWithoutAuthentication.php'
                      line: 31
                      function: abort
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: App\Http\Middleware\MultiTenantWithoutAuthentication
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Middleware\SubstituteBindings.php'
                      line: 50
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Routing\Middleware\SubstituteBindings
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 119
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                      line: 805
                      function: then
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                      line: 784
                      function: runRouteWithinStack
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                      line: 748
                      function: runRoute
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                      line: 737
                      function: dispatchToRoute
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                      line: 200
                      function: dispatch
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 144
                      function: 'Illuminate\Foundation\Http\{closure}'
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: 'D:\memberz-api\app\Http\Middleware\Cors.php'
                      line: 34
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: App\Http\Middleware\Cors
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php'
                      line: 21
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull.php'
                      line: 31
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php'
                      line: 21
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TrimStrings.php'
                      line: 51
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TrimStrings
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Http\Middleware\ValidatePostSize.php'
                      line: 27
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Http\Middleware\ValidatePostSize
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance.php'
                      line: 110
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Http\Middleware\TrustProxies.php'
                      line: 57
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Http\Middleware\TrustProxies
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 119
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                      line: 175
                      function: then
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                      line: 144
                      function: sendRequestThroughRouter
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 310
                      function: handle
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 298
                      function: callLaravelOrLumenRoute
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 91
                      function: makeApiCall
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 44
                      function: makeResponseCall
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 35
                      function: makeResponseCallIfConditionsPass
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                      line: 236
                      function: __invoke
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                      line: 163
                      function: iterateThroughStrategies
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                      line: 95
                      function: fetchResponses
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                      line: 125
                      function: processRoute
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                      line: 72
                      function: extractEndpointsInfoFromLaravelApp
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                      line: 50
                      function: extractEndpointsInfoAndWriteToDisk
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Commands\GenerateDocumentation.php'
                      line: 53
                      function: get
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                      line: 36
                      function: handle
                      class: Knuckles\Scribe\Commands\GenerateDocumentation
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Util.php'
                      line: 41
                      function: 'Illuminate\Container\{closure}'
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                      line: 93
                      function: unwrapIfClosure
                      class: Illuminate\Container\Util
                      type: '::'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                      line: 35
                      function: callBoundMethod
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Container.php'
                      line: 662
                      function: call
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Console\Command.php'
                      line: 213
                      function: call
                      class: Illuminate\Container\Container
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\symfony\console\Command\Command.php'
                      line: 279
                      function: execute
                      class: Illuminate\Console\Command
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Console\Command.php'
                      line: 182
                      function: run
                      class: Symfony\Component\Console\Command\Command
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                      line: 1047
                      function: run
                      class: Illuminate\Console\Command
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                      line: 316
                      function: doRunCommand
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                      line: 167
                      function: doRun
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Console\Kernel.php'
                      line: 196
                      function: run
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: 'D:\memberz-api\artisan'
                      line: 35
                      function: handle
                      class: Illuminate\Foundation\Console\Kernel
                      type: '->'
                properties:
                  message:
                    type: string
                    example: 'Invalid organisation identifier specified'
                  exception:
                    type: string
                    example: Symfony\Component\HttpKernel\Exception\HttpException
                  file:
                    type: string
                    example: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Application.php'
                  line:
                    type: integer
                    example: 1360
                  trace:
                    type: array
                    example:
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\helpers.php'
                        line: 47
                        function: abort
                        class: Illuminate\Foundation\Application
                        type: '->'
                      -
                        file: 'D:\memberz-api\app\Http\Middleware\MultiTenantWithoutAuthentication.php'
                        line: 31
                        function: abort
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: App\Http\Middleware\MultiTenantWithoutAuthentication
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Middleware\SubstituteBindings.php'
                        line: 50
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Routing\Middleware\SubstituteBindings
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 119
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                        line: 805
                        function: then
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                        line: 784
                        function: runRouteWithinStack
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                        line: 748
                        function: runRoute
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                        line: 737
                        function: dispatchToRoute
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                        line: 200
                        function: dispatch
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 144
                        function: 'Illuminate\Foundation\Http\{closure}'
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: 'D:\memberz-api\app\Http\Middleware\Cors.php'
                        line: 34
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: App\Http\Middleware\Cors
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php'
                        line: 21
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull.php'
                        line: 31
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php'
                        line: 21
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TrimStrings.php'
                        line: 51
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TrimStrings
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Http\Middleware\ValidatePostSize.php'
                        line: 27
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Http\Middleware\ValidatePostSize
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance.php'
                        line: 110
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Http\Middleware\TrustProxies.php'
                        line: 57
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Http\Middleware\TrustProxies
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 119
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                        line: 175
                        function: then
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                        line: 144
                        function: sendRequestThroughRouter
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 310
                        function: handle
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 298
                        function: callLaravelOrLumenRoute
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 91
                        function: makeApiCall
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 44
                        function: makeResponseCall
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 35
                        function: makeResponseCallIfConditionsPass
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                        line: 236
                        function: __invoke
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                        line: 163
                        function: iterateThroughStrategies
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                        line: 95
                        function: fetchResponses
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                        line: 125
                        function: processRoute
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                        line: 72
                        function: extractEndpointsInfoFromLaravelApp
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                        line: 50
                        function: extractEndpointsInfoAndWriteToDisk
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Commands\GenerateDocumentation.php'
                        line: 53
                        function: get
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                        line: 36
                        function: handle
                        class: Knuckles\Scribe\Commands\GenerateDocumentation
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Util.php'
                        line: 41
                        function: 'Illuminate\Container\{closure}'
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                        line: 93
                        function: unwrapIfClosure
                        class: Illuminate\Container\Util
                        type: '::'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                        line: 35
                        function: callBoundMethod
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Container.php'
                        line: 662
                        function: call
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Console\Command.php'
                        line: 213
                        function: call
                        class: Illuminate\Container\Container
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\symfony\console\Command\Command.php'
                        line: 279
                        function: execute
                        class: Illuminate\Console\Command
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Console\Command.php'
                        line: 182
                        function: run
                        class: Symfony\Component\Console\Command\Command
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                        line: 1047
                        function: run
                        class: Illuminate\Console\Command
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                        line: 316
                        function: doRunCommand
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                        line: 167
                        function: doRun
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Console\Kernel.php'
                        line: 196
                        function: run
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: 'D:\memberz-api\artisan'
                        line: 35
                        function: handle
                        class: Illuminate\Foundation\Console\Kernel
                        type: '->'
                    items:
                      type: object
                      properties:
                        file:
                          type: string
                          example: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\helpers.php'
                        line:
                          type: integer
                          example: 47
                        function:
                          type: string
                          example: abort
                        class:
                          type: string
                          example: Illuminate\Foundation\Application
                        type:
                          type: string
                          example: '->'
      tags:
        - 'Organisation Members'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                organisation_id:
                  type: number
                  description: ''
                  example: 60.537
                organisation_no:
                  type: string
                  description: ''
                  example: ipsa
                member_id:
                  type: string
                  description: 'This field is required when none of <code>first_name</code>, <code>last_name</code>, <code>mobile_number</code>, and <code>gender</code> are present.'
                  example: null
                organisation_member_category_id:
                  type: string
                  description: ''
                  example: placeat
                first_name:
                  type: string
                  description: 'This field is required when <code>member_id</code> is not present.'
                  example: voluptates
                last_name:
                  type: string
                  description: 'This field is required when <code>member_id</code> is not present.'
                  example: voluptatibus
                mobile_number:
                  type: string
                  description: 'This field is required when <code>member_id</code> is not present.'
                  example: possimus
                gender:
                  type: string
                  description: 'This field is required when <code>member_id</code> is not present.'
                  example: male
                  enum:
                    - male
                    - female
                dob:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2024-11-08T10:13:01'
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: viviane62@example.net
              required:
                - organisation_id
                - organisation_member_category_id
    get:
      summary: 'Get All'
      operationId: getAll
      description: "Returns a list of items in this resource and allows filtering the data based on fields in the database\n\nOptions for searching / filtering\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Invalid organisation identifier specified'
                  exception: Symfony\Component\HttpKernel\Exception\HttpException
                  file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Application.php'
                  line: 1360
                  trace:
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\helpers.php'
                      line: 47
                      function: abort
                      class: Illuminate\Foundation\Application
                      type: '->'
                    -
                      file: 'D:\memberz-api\app\Http\Middleware\MultiTenantWithoutAuthentication.php'
                      line: 31
                      function: abort
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: App\Http\Middleware\MultiTenantWithoutAuthentication
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Middleware\SubstituteBindings.php'
                      line: 50
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Routing\Middleware\SubstituteBindings
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 119
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                      line: 805
                      function: then
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                      line: 784
                      function: runRouteWithinStack
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                      line: 748
                      function: runRoute
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                      line: 737
                      function: dispatchToRoute
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                      line: 200
                      function: dispatch
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 144
                      function: 'Illuminate\Foundation\Http\{closure}'
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: 'D:\memberz-api\app\Http\Middleware\Cors.php'
                      line: 34
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: App\Http\Middleware\Cors
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php'
                      line: 21
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull.php'
                      line: 31
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php'
                      line: 21
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TrimStrings.php'
                      line: 51
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TrimStrings
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Http\Middleware\ValidatePostSize.php'
                      line: 27
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Http\Middleware\ValidatePostSize
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance.php'
                      line: 110
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Http\Middleware\TrustProxies.php'
                      line: 57
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 183
                      function: handle
                      class: Illuminate\Http\Middleware\TrustProxies
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                      line: 119
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                      line: 175
                      function: then
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                      line: 144
                      function: sendRequestThroughRouter
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 310
                      function: handle
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 298
                      function: callLaravelOrLumenRoute
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 91
                      function: makeApiCall
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 44
                      function: makeResponseCall
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                      line: 35
                      function: makeResponseCallIfConditionsPass
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                      line: 236
                      function: __invoke
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                      line: 163
                      function: iterateThroughStrategies
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                      line: 95
                      function: fetchResponses
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                      line: 125
                      function: processRoute
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                      line: 72
                      function: extractEndpointsInfoFromLaravelApp
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                      line: 50
                      function: extractEndpointsInfoAndWriteToDisk
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Commands\GenerateDocumentation.php'
                      line: 53
                      function: get
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                      line: 36
                      function: handle
                      class: Knuckles\Scribe\Commands\GenerateDocumentation
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Util.php'
                      line: 41
                      function: 'Illuminate\Container\{closure}'
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                      line: 93
                      function: unwrapIfClosure
                      class: Illuminate\Container\Util
                      type: '::'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                      line: 35
                      function: callBoundMethod
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Container.php'
                      line: 662
                      function: call
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Console\Command.php'
                      line: 213
                      function: call
                      class: Illuminate\Container\Container
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\symfony\console\Command\Command.php'
                      line: 279
                      function: execute
                      class: Illuminate\Console\Command
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Console\Command.php'
                      line: 182
                      function: run
                      class: Symfony\Component\Console\Command\Command
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                      line: 1047
                      function: run
                      class: Illuminate\Console\Command
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                      line: 316
                      function: doRunCommand
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                      line: 167
                      function: doRun
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Console\Kernel.php'
                      line: 196
                      function: run
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: 'D:\memberz-api\artisan'
                      line: 35
                      function: handle
                      class: Illuminate\Foundation\Console\Kernel
                      type: '->'
                properties:
                  message:
                    type: string
                    example: 'Invalid organisation identifier specified'
                  exception:
                    type: string
                    example: Symfony\Component\HttpKernel\Exception\HttpException
                  file:
                    type: string
                    example: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Application.php'
                  line:
                    type: integer
                    example: 1360
                  trace:
                    type: array
                    example:
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\helpers.php'
                        line: 47
                        function: abort
                        class: Illuminate\Foundation\Application
                        type: '->'
                      -
                        file: 'D:\memberz-api\app\Http\Middleware\MultiTenantWithoutAuthentication.php'
                        line: 31
                        function: abort
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: App\Http\Middleware\MultiTenantWithoutAuthentication
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Middleware\SubstituteBindings.php'
                        line: 50
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Routing\Middleware\SubstituteBindings
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 119
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                        line: 805
                        function: then
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                        line: 784
                        function: runRouteWithinStack
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                        line: 748
                        function: runRoute
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Routing\Router.php'
                        line: 737
                        function: dispatchToRoute
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                        line: 200
                        function: dispatch
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 144
                        function: 'Illuminate\Foundation\Http\{closure}'
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: 'D:\memberz-api\app\Http\Middleware\Cors.php'
                        line: 34
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: App\Http\Middleware\Cors
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php'
                        line: 21
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull.php'
                        line: 31
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TransformsRequest.php'
                        line: 21
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\TrimStrings.php'
                        line: 51
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TrimStrings
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Http\Middleware\ValidatePostSize.php'
                        line: 27
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Http\Middleware\ValidatePostSize
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance.php'
                        line: 110
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Http\Middleware\TrustProxies.php'
                        line: 57
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 183
                        function: handle
                        class: Illuminate\Http\Middleware\TrustProxies
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Pipeline\Pipeline.php'
                        line: 119
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                        line: 175
                        function: then
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Http\Kernel.php'
                        line: 144
                        function: sendRequestThroughRouter
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 310
                        function: handle
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 298
                        function: callLaravelOrLumenRoute
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 91
                        function: makeApiCall
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 44
                        function: makeResponseCall
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Strategies\Responses\ResponseCalls.php'
                        line: 35
                        function: makeResponseCallIfConditionsPass
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                        line: 236
                        function: __invoke
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                        line: 163
                        function: iterateThroughStrategies
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Extracting\Extractor.php'
                        line: 95
                        function: fetchResponses
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                        line: 125
                        function: processRoute
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                        line: 72
                        function: extractEndpointsInfoFromLaravelApp
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\GroupedEndpoints\GroupedEndpointsFromApp.php'
                        line: 50
                        function: extractEndpointsInfoAndWriteToDisk
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\knuckleswtf\scribe\src\Commands\GenerateDocumentation.php'
                        line: 53
                        function: get
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                        line: 36
                        function: handle
                        class: Knuckles\Scribe\Commands\GenerateDocumentation
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Util.php'
                        line: 41
                        function: 'Illuminate\Container\{closure}'
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                        line: 93
                        function: unwrapIfClosure
                        class: Illuminate\Container\Util
                        type: '::'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\BoundMethod.php'
                        line: 35
                        function: callBoundMethod
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Container\Container.php'
                        line: 662
                        function: call
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Console\Command.php'
                        line: 213
                        function: call
                        class: Illuminate\Container\Container
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\symfony\console\Command\Command.php'
                        line: 279
                        function: execute
                        class: Illuminate\Console\Command
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Console\Command.php'
                        line: 182
                        function: run
                        class: Symfony\Component\Console\Command\Command
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                        line: 1047
                        function: run
                        class: Illuminate\Console\Command
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                        line: 316
                        function: doRunCommand
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\symfony\console\Application.php'
                        line: 167
                        function: doRun
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\Console\Kernel.php'
                        line: 196
                        function: run
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: 'D:\memberz-api\artisan'
                        line: 35
                        function: handle
                        class: Illuminate\Foundation\Console\Kernel
                        type: '->'
                    items:
                      type: object
                      properties:
                        file:
                          type: string
                          example: 'D:\memberz-api\vendor\laravel\framework\src\Illuminate\Foundation\helpers.php'
                        line:
                          type: integer
                          example: 47
                        function:
                          type: string
                          example: abort
                        class:
                          type: string
                          example: Illuminate\Foundation\Application
                        type:
                          type: string
                          example: '->'
      tags:
        - 'Organisation Members'
    parameters:
      -
        in: path
        name: org_slug
        description: 'The slug of the org.'
        example: 21
        required: true
        schema:
          type: integer
  /api/organisation_members/statistics:
    get:
      summary: 'Basic Statistics'
      operationId: basicStatistics
      description: 'Returns a basic set of statistics about memberships'
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Organisation Members'
  /api/organisation_members/unapproved:
    get:
      summary: 'Unapproved Registrations'
      operationId: unapprovedRegistrations
      description: 'Returns a list of unapproved registrations'
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Organisation Members'
  /api/organisation_members/count:
    get:
      summary: 'Count Resources'
      operationId: countResources
      description: 'Returns a simple count of data in this resource'
      parameters:
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Organisation Members'
  /api/organisation_members/search:
    get:
      summary: 'Search Resources'
      operationId: searchResources
      description: "Allows searching for data in this resource using multiple options.\n\nOptions for searching\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
          example: quis
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
            example: quis
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Organisation Members'
  /api/organisation_members:
    get:
      summary: 'Get All'
      operationId: getAll
      description: "Returns a list of items in this resource and allows filtering the data based on fields in the database\n\nOptions for searching / filtering\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Organisation Members'
    post:
      summary: ''
      operationId: postApiOrganisation_members
      description: ''
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Organisation Members'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                organisation_id:
                  type: number
                  description: ''
                  example: 8115024.8532965
                organisation_no:
                  type: string
                  description: ''
                  example: suscipit
                member_id:
                  type: string
                  description: 'This field is required when none of <code>first_name</code>, <code>last_name</code>, <code>mobile_number</code>, and <code>gender</code> are present.'
                  example: null
                organisation_member_category_id:
                  type: string
                  description: ''
                  example: nemo
                first_name:
                  type: string
                  description: 'This field is required when <code>member_id</code> is not present.'
                  example: veniam
                last_name:
                  type: string
                  description: 'This field is required when <code>member_id</code> is not present.'
                  example: est
                mobile_number:
                  type: string
                  description: 'This field is required when <code>member_id</code> is not present.'
                  example: odio
                gender:
                  type: string
                  description: 'This field is required when <code>member_id</code> is not present.'
                  example: female
                  enum:
                    - male
                    - female
                dob:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2024-11-08T10:13:04'
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: scottie.beer@example.com
              required:
                - organisation_id
                - organisation_member_category_id
  '/api/organisation_members/{id}':
    get:
      summary: 'View Resource'
      operationId: viewResource
      description: "Returns information about a specific record in this resource. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'Organisation Members'
    put:
      summary: 'Update Resource'
      operationId: updateResource
      description: "Updates the data of the record with the specified `id`. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message:
                    - 'validation error messages'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: array
                    example:
                      - 'validation error messages'
                    items:
                      type: string
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Details of error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Details of error message'
      tags:
        - 'Organisation Members'
    delete:
      summary: 'Delete Membership'
      operationId: deleteMembership
      description: ''
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Organisation Members'
    parameters:
      -
        in: path
        name: id
        description: 'The id of the resource to view'
        example: 10
        required: true
        schema:
          type: integer
  /api/payment_platforms/count:
    get:
      summary: 'Count Resources'
      operationId: countResources
      description: 'Returns a simple count of data in this resource'
      parameters:
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Organisation Payment Platforms'
  /api/payment_platforms/search:
    get:
      summary: 'Search Resources'
      operationId: searchResources
      description: "Allows searching for data in this resource using multiple options.\n\nOptions for searching\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
          example: perferendis
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
            example: perferendis
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Organisation Payment Platforms'
  /api/payment_platforms:
    get:
      summary: 'Get All'
      operationId: getAll
      description: "Returns a list of items in this resource and allows filtering the data based on fields in the database\n\nOptions for searching / filtering\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Organisation Payment Platforms'
    post:
      summary: 'Create Resource'
      operationId: createResource
      description: ''
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 2
                    name: Slydepay
                    description: 'Slydepay Payments Solution'
                    method_name: slydepay
                    config_keys: 'Merchant Email, Merchant Key'
                    logo: payment_platforms/slydepay.png
                    instructions: 'You will be redirected to the Slydepay payment portal to complete the transaction for this payment. You can pay with either a Credit/Debit Card, Mobile Money or your Slydepay Mobile Wallet.'
                    created: '2016-06-02T08:13:25.000000Z'
                    modified: '2016-06-02T08:13:29.000000Z'
                    deleted: false
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 2
                      name:
                        type: string
                        example: Slydepay
                      description:
                        type: string
                        example: 'Slydepay Payments Solution'
                      method_name:
                        type: string
                        example: slydepay
                      config_keys:
                        type: string
                        example: 'Merchant Email, Merchant Key'
                      logo:
                        type: string
                        example: payment_platforms/slydepay.png
                      instructions:
                        type: string
                        example: 'You will be redirected to the Slydepay payment portal to complete the transaction for this payment. You can pay with either a Credit/Debit Card, Mobile Money or your Slydepay Mobile Wallet.'
                      created:
                        type: string
                        example: '2016-06-02T08:13:25.000000Z'
                      modified:
                        type: string
                        example: '2016-06-02T08:13:29.000000Z'
                      deleted:
                        type: boolean
                        example: false
      tags:
        - 'Organisation Payment Platforms'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Name
                  example: beatae
                method_name:
                  type: string
                  description: 'Method name'
                  example: eos
                config_keys:
                  type: string
                  description: 'Comma separated config keys'
                  example: ut
                description:
                  type: string
                  description: Description
                  example: 'Blanditiis officia reprehenderit itaque voluptate.'
                logo:
                  type: string
                  description: Description
                  example: aperiam
                instructions:
                  type: string
                  description: Description
                  example: ut
                deleted:
                  type: boolean
                  description: Deleted
                  example: true
  '/api/payment_platforms/{id}':
    get:
      summary: 'View Resource'
      operationId: viewResource
      description: "Returns information about a specific record in this resource. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'Organisation Payment Platforms'
    put:
      summary: 'Update Resource'
      operationId: updateResource
      description: ''
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 2
                    name: Slydepay
                    description: 'Slydepay Payments Solution'
                    method_name: slydepay
                    config_keys: 'Merchant Email, Merchant Key'
                    logo: payment_platforms/slydepay.png
                    instructions: 'You will be redirected to the Slydepay payment portal to complete the transaction for this payment. You can pay with either a Credit/Debit Card, Mobile Money or your Slydepay Mobile Wallet.'
                    created: '2016-06-02T08:13:25.000000Z'
                    modified: '2016-06-02T08:13:29.000000Z'
                    deleted: false
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 2
                      name:
                        type: string
                        example: Slydepay
                      description:
                        type: string
                        example: 'Slydepay Payments Solution'
                      method_name:
                        type: string
                        example: slydepay
                      config_keys:
                        type: string
                        example: 'Merchant Email, Merchant Key'
                      logo:
                        type: string
                        example: payment_platforms/slydepay.png
                      instructions:
                        type: string
                        example: 'You will be redirected to the Slydepay payment portal to complete the transaction for this payment. You can pay with either a Credit/Debit Card, Mobile Money or your Slydepay Mobile Wallet.'
                      created:
                        type: string
                        example: '2016-06-02T08:13:25.000000Z'
                      modified:
                        type: string
                        example: '2016-06-02T08:13:29.000000Z'
                      deleted:
                        type: boolean
                        example: false
      tags:
        - 'Organisation Payment Platforms'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Name
                  example: blanditiis
                method_name:
                  type: string
                  description: 'Method name'
                  example: laboriosam
                config_keys:
                  type: string
                  description: 'Comma separated config keys'
                  example: natus
                description:
                  type: string
                  description: Description
                  example: 'Molestiae occaecati minus ea minima.'
                logo:
                  type: string
                  description: Description
                  example: dolor
                instructions:
                  type: string
                  description: Description
                  example: et
                deleted:
                  type: boolean
                  description: Deleted
                  example: false
    delete:
      summary: 'Delete Resource'
      operationId: deleteResource
      description: 'Deletes the record with the specified `id`'
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Resource deleted'
                  data:
                    id: 1
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Resource deleted'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'Organisation Payment Platforms'
    parameters:
      -
        in: path
        name: id
        description: 'The id of the resource to view'
        example: 13
        required: true
        schema:
          type: integer
  /api/organisation_payment_platforms/count:
    get:
      summary: 'Count Resources'
      operationId: countResources
      description: 'Returns a simple count of data in this resource'
      parameters:
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Organisation Payment Platforms'
  /api/organisation_payment_platforms/search:
    get:
      summary: 'Search Resources'
      operationId: searchResources
      description: "Allows searching for data in this resource using multiple options.\n\nOptions for searching\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
          example: minima
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
            example: minima
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Organisation Payment Platforms'
  /api/organisation_payment_platforms:
    get:
      summary: 'Get All'
      operationId: getAll
      description: "Returns a list of items in this resource and allows filtering the data based on fields in the database\n\nOptions for searching / filtering\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Organisation Payment Platforms'
    post:
      summary: 'Create Resource'
      operationId: createResource
      description: ''
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    organisation_id: 114
                    payment_platform_id: 1
                    currency_id: 80
                    country_id: 80
                    config:
                      'Master Key': 6bb24be9-c357-430c-94d6-a39108055b5d
                      'Public Key': live_public_4Z9UnJ6Dl6pz2u0U6wOtAWD8oSY
                      'Private Key': live_private_QYwRKqiaYDipuLAXshQ3KBMTKZg
                      Token: 333ae6351b4ccbaa5636
                      'Store Name': 'MFANSTIPIM OLD BOYS ASSOCIATION 2002'
                      'Tag Line': 'MOBA 2002'
                      'Phone Number': '0244371416'
                      'Postal Address': 'BOX 196'
                    platform_mode: live
                    member_registration_instruction: null
                    event_registration_instruction: null
                    general_instructions: null
                    system_generated: false
                    created: '2016-05-29T19:45:52.000000Z'
                    modified: '2016-05-29T19:45:52.000000Z'
                    deleted: false
                    currency:
                      id: 80
                      country_id: 80
                      currency_name: 'Ghanaian Cedi'
                      currency_code: GHS
                      active: true
                    payment_platform: null
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      organisation_id:
                        type: integer
                        example: 114
                      payment_platform_id:
                        type: integer
                        example: 1
                      currency_id:
                        type: integer
                        example: 80
                      country_id:
                        type: integer
                        example: 80
                      config:
                        type: object
                        properties:
                          'Master Key':
                            type: string
                            example: 6bb24be9-c357-430c-94d6-a39108055b5d
                          'Public Key':
                            type: string
                            example: live_public_4Z9UnJ6Dl6pz2u0U6wOtAWD8oSY
                          'Private Key':
                            type: string
                            example: live_private_QYwRKqiaYDipuLAXshQ3KBMTKZg
                          Token:
                            type: string
                            example: 333ae6351b4ccbaa5636
                          'Store Name':
                            type: string
                            example: 'MFANSTIPIM OLD BOYS ASSOCIATION 2002'
                          'Tag Line':
                            type: string
                            example: 'MOBA 2002'
                          'Phone Number':
                            type: string
                            example: '0244371416'
                          'Postal Address':
                            type: string
                            example: 'BOX 196'
                      platform_mode:
                        type: string
                        example: live
                      member_registration_instruction:
                        type: string
                        example: null
                      event_registration_instruction:
                        type: string
                        example: null
                      general_instructions:
                        type: string
                        example: null
                      system_generated:
                        type: boolean
                        example: false
                      created:
                        type: string
                        example: '2016-05-29T19:45:52.000000Z'
                      modified:
                        type: string
                        example: '2016-05-29T19:45:52.000000Z'
                      deleted:
                        type: boolean
                        example: false
                      currency:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 80
                          country_id:
                            type: integer
                            example: 80
                          currency_name:
                            type: string
                            example: 'Ghanaian Cedi'
                          currency_code:
                            type: string
                            example: GHS
                          active:
                            type: boolean
                            example: true
                      payment_platform:
                        type: string
                        example: null
      tags:
        - 'Organisation Payment Platforms'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                organisation_id:
                  type: number
                  description: ''
                  example: 3649338.2551
                payment_platform_id:
                  type: number
                  description: ''
                  example: 18735847.139193
                currency_id:
                  type: number
                  description: ''
                  example: 4.8773
                country_id:
                  type: number
                  description: ''
                  example: 16723.1789
                config:
                  type: string
                  description: ''
                  example: molestiae
                platform_mode:
                  type: string
                  description: ''
                  example: dev
                  enum:
                    - live
                    - sandbox
                    - dev
                member_registration_instruction:
                  type: string
                  description: ''
                  example: blanditiis
                event_registration_instruction:
                  type: string
                  description: ''
                  example: alias
                general_instructions:
                  type: string
                  description: ''
                  example: mollitia
              required:
                - organisation_id
                - payment_platform_id
                - currency_id
                - country_id
                - config
                - platform_mode
  '/api/organisation_payment_platforms/{id}':
    get:
      summary: 'View Resource'
      operationId: viewResource
      description: "Returns information about a specific record in this resource. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'Organisation Payment Platforms'
    put:
      summary: 'Update Resource'
      operationId: updateResource
      description: ''
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    organisation_id: 114
                    payment_platform_id: 1
                    currency_id: 80
                    country_id: 80
                    config:
                      'Master Key': 6bb24be9-c357-430c-94d6-a39108055b5d
                      'Public Key': live_public_4Z9UnJ6Dl6pz2u0U6wOtAWD8oSY
                      'Private Key': live_private_QYwRKqiaYDipuLAXshQ3KBMTKZg
                      Token: 333ae6351b4ccbaa5636
                      'Store Name': 'MFANSTIPIM OLD BOYS ASSOCIATION 2002'
                      'Tag Line': 'MOBA 2002'
                      'Phone Number': '0244371416'
                      'Postal Address': 'BOX 196'
                    platform_mode: live
                    member_registration_instruction: null
                    event_registration_instruction: null
                    general_instructions: null
                    system_generated: false
                    created: '2016-05-29T19:45:52.000000Z'
                    modified: '2016-05-29T19:45:52.000000Z'
                    deleted: false
                    currency:
                      id: 80
                      country_id: 80
                      currency_name: 'Ghanaian Cedi'
                      currency_code: GHS
                      active: true
                    payment_platform: null
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      organisation_id:
                        type: integer
                        example: 114
                      payment_platform_id:
                        type: integer
                        example: 1
                      currency_id:
                        type: integer
                        example: 80
                      country_id:
                        type: integer
                        example: 80
                      config:
                        type: object
                        properties:
                          'Master Key':
                            type: string
                            example: 6bb24be9-c357-430c-94d6-a39108055b5d
                          'Public Key':
                            type: string
                            example: live_public_4Z9UnJ6Dl6pz2u0U6wOtAWD8oSY
                          'Private Key':
                            type: string
                            example: live_private_QYwRKqiaYDipuLAXshQ3KBMTKZg
                          Token:
                            type: string
                            example: 333ae6351b4ccbaa5636
                          'Store Name':
                            type: string
                            example: 'MFANSTIPIM OLD BOYS ASSOCIATION 2002'
                          'Tag Line':
                            type: string
                            example: 'MOBA 2002'
                          'Phone Number':
                            type: string
                            example: '0244371416'
                          'Postal Address':
                            type: string
                            example: 'BOX 196'
                      platform_mode:
                        type: string
                        example: live
                      member_registration_instruction:
                        type: string
                        example: null
                      event_registration_instruction:
                        type: string
                        example: null
                      general_instructions:
                        type: string
                        example: null
                      system_generated:
                        type: boolean
                        example: false
                      created:
                        type: string
                        example: '2016-05-29T19:45:52.000000Z'
                      modified:
                        type: string
                        example: '2016-05-29T19:45:52.000000Z'
                      deleted:
                        type: boolean
                        example: false
                      currency:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 80
                          country_id:
                            type: integer
                            example: 80
                          currency_name:
                            type: string
                            example: 'Ghanaian Cedi'
                          currency_code:
                            type: string
                            example: GHS
                          active:
                            type: boolean
                            example: true
                      payment_platform:
                        type: string
                        example: null
      tags:
        - 'Organisation Payment Platforms'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                organisation_id:
                  type: number
                  description: ''
                  example: 82316.9707
                payment_platform_id:
                  type: number
                  description: ''
                  example: 420200972.4504
                currency_id:
                  type: number
                  description: ''
                  example: 41810.3172
                country_id:
                  type: number
                  description: ''
                  example: 84003201.360403
                config:
                  type: string
                  description: ''
                  example: sit
                platform_mode:
                  type: string
                  description: ''
                  example: live
                  enum:
                    - live
                    - sandbox
                    - dev
                member_registration_instruction:
                  type: string
                  description: ''
                  example: et
                event_registration_instruction:
                  type: string
                  description: ''
                  example: suscipit
                general_instructions:
                  type: string
                  description: ''
                  example: nulla
              required:
                - organisation_id
                - payment_platform_id
                - currency_id
                - country_id
                - config
                - platform_mode
    delete:
      summary: 'Delete Resource'
      operationId: deleteResource
      description: 'Deletes the record with the specified `id`'
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Resource deleted'
                  data:
                    id: 1
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Resource deleted'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'Organisation Payment Platforms'
    parameters:
      -
        in: path
        name: id
        description: 'The id of the resource to view'
        example: 13
        required: true
        schema:
          type: integer
  '/api/organisation_roles/{id}/permissions':
    get:
      summary: 'Get Permissions'
      operationId: getPermissions
      description: ''
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Organisation Roles'
    post:
      summary: 'Sync Permissions'
      operationId: syncPermissions
      description: ''
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Organisation Roles'
    parameters:
      -
        in: path
        name: id
        description: 'Optional parameter. ID of role to retrieve permissions for.'
        required: true
        schema:
          type: integer
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 1
  /api/organisation_roles/count:
    get:
      summary: 'Count Resources'
      operationId: countResources
      description: 'Returns a simple count of data in this resource'
      parameters:
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Organisation Roles'
  /api/organisation_roles/search:
    get:
      summary: 'Search Resources'
      operationId: searchResources
      description: "Allows searching for data in this resource using multiple options.\n\nOptions for searching\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
          example: suscipit
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
            example: suscipit
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Organisation Roles'
  /api/organisation_roles:
    get:
      summary: 'Get All'
      operationId: getAll
      description: "Returns a list of items in this resource and allows filtering the data based on fields in the database\n\nOptions for searching / filtering\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Organisation Roles'
    post:
      summary: 'Create Resource'
      operationId: createResource
      description: "Create a new record of this resource in the database. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message:
                    - 'validation error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: array
                    example:
                      - 'validation error message'
                    items:
                      type: string
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Details of error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Details of error message'
      tags:
        - 'Organisation Roles'
  '/api/organisation_roles/{id}':
    get:
      summary: 'View Resource'
      operationId: viewResource
      description: "Returns information about a specific record in this resource. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'Organisation Roles'
    put:
      summary: 'Update Resource'
      operationId: updateResource
      description: "Updates the data of the record with the specified `id`. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message:
                    - 'validation error messages'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: array
                    example:
                      - 'validation error messages'
                    items:
                      type: string
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Details of error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Details of error message'
      tags:
        - 'Organisation Roles'
    delete:
      summary: 'Delete Resource'
      operationId: deleteResource
      description: 'Deletes the record with the specified `id`'
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Resource deleted'
                  data:
                    id: 1
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Resource deleted'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'Organisation Roles'
    parameters:
      -
        in: path
        name: id
        description: 'The id of the resource to view'
        example: 13
        required: true
        schema:
          type: integer
  /api/organisation_setting_types/count:
    get:
      summary: 'Count Resources'
      operationId: countResources
      description: 'Returns a simple count of data in this resource'
      parameters:
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Organisation Setting Types'
  /api/organisation_setting_types/search:
    get:
      summary: 'Search Resources'
      operationId: searchResources
      description: "Allows searching for data in this resource using multiple options.\n\nOptions for searching\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
          example: et
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
            example: et
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Organisation Setting Types'
  /api/organisation_setting_types:
    get:
      summary: 'Get All'
      operationId: getAll
      description: "Returns a list of items in this resource and allows filtering the data based on fields in the database\n\nOptions for searching / filtering\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Organisation Setting Types'
    post:
      summary: 'Create Resource'
      operationId: createResource
      description: "Create a new record of this resource in the database. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message:
                    - 'validation error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: array
                    example:
                      - 'validation error message'
                    items:
                      type: string
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Details of error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Details of error message'
      tags:
        - 'Organisation Setting Types'
  '/api/organisation_setting_types/{id}':
    get:
      summary: 'View Resource'
      operationId: viewResource
      description: "Returns information about a specific record in this resource. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'Organisation Setting Types'
    put:
      summary: 'Update Resource'
      operationId: updateResource
      description: "Updates the data of the record with the specified `id`. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message:
                    - 'validation error messages'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: array
                    example:
                      - 'validation error messages'
                    items:
                      type: string
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Details of error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Details of error message'
      tags:
        - 'Organisation Setting Types'
    delete:
      summary: 'Delete Resource'
      operationId: deleteResource
      description: 'Deletes the record with the specified `id`'
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Resource deleted'
                  data:
                    id: 1
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Resource deleted'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'Organisation Setting Types'
    parameters:
      -
        in: path
        name: id
        description: 'The id of the resource to view'
        example: 13
        required: true
        schema:
          type: integer
  /api/organisation_settings/count:
    get:
      summary: 'Count Resources'
      operationId: countResources
      description: 'Returns a simple count of data in this resource'
      parameters:
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Organisation Settings'
  /api/organisation_settings/search:
    get:
      summary: 'Search Resources'
      operationId: searchResources
      description: "Allows searching for data in this resource using multiple options.\n\nOptions for searching\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
          example: accusamus
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
            example: accusamus
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Organisation Settings'
  /api/organisation_settings:
    get:
      summary: 'Get All'
      operationId: getAll
      description: "Returns a list of items in this resource and allows filtering the data based on fields in the database\n\nOptions for searching / filtering\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Organisation Settings'
    post:
      summary: 'Create Resource'
      operationId: createResource
      description: "Create a new record of this resource in the database. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message:
                    - 'validation error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: array
                    example:
                      - 'validation error message'
                    items:
                      type: string
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Details of error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Details of error message'
      tags:
        - 'Organisation Settings'
  '/api/organisation_settings/{id}':
    get:
      summary: 'View Resource'
      operationId: viewResource
      description: "Returns information about a specific record in this resource. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'Organisation Settings'
    put:
      summary: 'Update Resource'
      operationId: updateResource
      description: "Updates the data of the record with the specified `id`. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message:
                    - 'validation error messages'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: array
                    example:
                      - 'validation error messages'
                    items:
                      type: string
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Details of error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Details of error message'
      tags:
        - 'Organisation Settings'
    delete:
      summary: 'Delete Resource'
      operationId: deleteResource
      description: 'Deletes the record with the specified `id`'
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Resource deleted'
                  data:
                    id: 1
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Resource deleted'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'Organisation Settings'
    parameters:
      -
        in: path
        name: id
        description: 'The id of the resource to view'
        example: 16
        required: true
        schema:
          type: integer
  '/api/organisation_subscriptions/{id}/renew':
    post:
      summary: "Pass the current subscription to be renewed\nPass the renewal length"
      operationId: passTheCurrentSubscriptionToBeRenewedPassTheRenewalLength
      description: "Auto determine organisation_id\nAuto determine current subscription_type\n\nActions: create an invoice for the transaction, return new subscription with invoice"
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Organisation Subscrptions'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                organisation_id:
                  type: number
                  description: ''
                  example: 361800.83447546
                length:
                  type: number
                  description: ''
                  example: 164825567.78663
              required:
                - organisation_id
                - length
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the organisation subscription.'
        example: 11
        required: true
        schema:
          type: integer
  '/api/organisation_subscriptions/{id}/upgrade':
    post:
      summary: "Pass the current subscription to be upgraded\nPass the new subscription_type to upgrade to\nPass the subscription length"
      operationId: passTheCurrentSubscriptionToBeUpgradedPassTheNewSubscriptionTypeToUpgradeToPassTheSubscriptionLength
      description: "Auto determine organisation_id\n\nActions: create an invoice for the transaction, insert new subscription with invoice info"
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Organisation Subscrptions'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                organisation_id:
                  type: number
                  description: ''
                  example: 1649518.963801
                subscription_type_id:
                  type: number
                  description: ''
                  example: 46.94419
                length:
                  type: number
                  description: ''
                  example: 24892869.810318
              required:
                - organisation_id
                - subscription_type_id
                - length
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the organisation subscription.'
        example: 11
        required: true
        schema:
          type: integer
  /api/organisation_subscriptions/count:
    get:
      summary: 'Count Resources'
      operationId: countResources
      description: 'Returns a simple count of data in this resource'
      parameters:
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Organisation Subscrptions'
  /api/organisation_subscriptions/search:
    get:
      summary: 'Search Resources'
      operationId: searchResources
      description: "Allows searching for data in this resource using multiple options.\n\nOptions for searching\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
          example: repellat
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
            example: repellat
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Organisation Subscrptions'
  /api/organisation_subscriptions:
    get:
      summary: 'Get All'
      operationId: getAll
      description: "Returns a list of items in this resource and allows filtering the data based on fields in the database\n\nOptions for searching / filtering\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Organisation Subscrptions'
    post:
      summary: 'Create Resource'
      operationId: createResource
      description: "Create a new record of this resource in the database. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message:
                    - 'validation error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: array
                    example:
                      - 'validation error message'
                    items:
                      type: string
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Details of error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Details of error message'
      tags:
        - 'Organisation Subscrptions'
  '/api/organisation_subscriptions/{id}':
    get:
      summary: 'View Resource'
      operationId: viewResource
      description: "Returns information about a specific record in this resource. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'Organisation Subscrptions'
    put:
      summary: 'Update Resource'
      operationId: updateResource
      description: "Updates the data of the record with the specified `id`. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message:
                    - 'validation error messages'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: array
                    example:
                      - 'validation error messages'
                    items:
                      type: string
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Details of error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Details of error message'
      tags:
        - 'Organisation Subscrptions'
    delete:
      summary: 'Delete Resource'
      operationId: deleteResource
      description: 'Deletes the record with the specified `id`'
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Resource deleted'
                  data:
                    id: 1
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Resource deleted'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'Organisation Subscrptions'
    parameters:
      -
        in: path
        name: id
        description: 'The id of the resource to view'
        example: 18
        required: true
        schema:
          type: integer
  /api/organisation_types/count:
    get:
      summary: 'Count Resources'
      operationId: countResources
      description: 'Returns a simple count of data in this resource'
      parameters:
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Organisation Types'
  /api/organisation_types/search:
    get:
      summary: 'Search Resources'
      operationId: searchResources
      description: "Allows searching for data in this resource using multiple options.\n\nOptions for searching\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
          example: ut
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
            example: ut
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Organisation Types'
  /api/organisation_types:
    get:
      summary: 'Get All'
      operationId: getAll
      description: "Returns a list of items in this resource and allows filtering the data based on fields in the database\n\nOptions for searching / filtering\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Organisation Types'
    post:
      summary: 'Create Resource'
      operationId: createResource
      description: "Create a new record of this resource in the database. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message:
                    - 'validation error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: array
                    example:
                      - 'validation error message'
                    items:
                      type: string
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Details of error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Details of error message'
      tags:
        - 'Organisation Types'
  '/api/organisation_types/{id}':
    get:
      summary: 'View Resource'
      operationId: viewResource
      description: "Returns information about a specific record in this resource. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'Organisation Types'
    put:
      summary: 'Update Resource'
      operationId: updateResource
      description: "Updates the data of the record with the specified `id`. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message:
                    - 'validation error messages'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: array
                    example:
                      - 'validation error messages'
                    items:
                      type: string
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Details of error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Details of error message'
      tags:
        - 'Organisation Types'
    delete:
      summary: 'Delete Resource'
      operationId: deleteResource
      description: 'Deletes the record with the specified `id`'
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Resource deleted'
                  data:
                    id: 1
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Resource deleted'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'Organisation Types'
    parameters:
      -
        in: path
        name: id
        description: 'The id of the resource to view'
        example: 15
        required: true
        schema:
          type: integer
  /api/organisations/public:
    get:
      summary: 'Get All'
      operationId: getAll
      description: "Returns a list of items in this resource and allows filtering the data based on fields in the database\n\nOptions for searching / filtering\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 348
                      uuid: 394dca7c-a0cb-434d-853a-7950ea8fc912
                      organisation_type_id: 3
                      name: 'Savanna Opticals and Eyecare'
                      slug: savanna-opticals-and-eyecare-95477
                      address: 'Sabonkudi Plaza'
                      city: Tamale
                      state: Northern
                      post_code: '03720'
                      country_id: 80
                      currency_id: 80
                      email: dan1ogee@gmail.com
                      phone: '+233200252386'
                      website: null
                      logo: null
                      short_description: null
                      long_description: null
                      mission: null
                      cover_photo: null
                      member_account_id: 2722
                      organisation_member_count: 0
                      organisation_account_count: 0
                      discoverable: 1
                      allow_public_join: 0
                      default_public_join_category: null
                      public_directory_enabled: 1
                      locked: 0
                      verified: 0
                      verified_by: null
                      created: '2024-06-10T13:08:05.000000Z'
                      modified: '2024-06-10T13:08:05.000000Z'
                      active: true
                      trashed: 0
                      active_subscription:
                        id: 440
                        organisation_id: 348
                        subscription_type_id: 11
                        organisation_invoice_id: 947
                        start_dt: '2024-06-10T13:08:06.000000Z'
                        end_dt: '2024-07-10T13:08:06.000000Z'
                        length: 1
                        current: true
                        last_renewal_notice_dt: null
                        created: '2024-06-10T13:08:06.000000Z'
                        modified: '2024-06-10T13:08:06.000000Z'
                        organisation_invoice:
                          id: 947
                          organisation_id: 348
                          transaction_type_id: 2
                          member_account_id: 2722
                          invoice_no: '34800947'
                          paid: true
                          currency_id: 80
                          total_due: 0
                          due_date: '2024-06-17'
                          notes: "Your new organisation will be temporarily enabled for <b>7 days</b> within which you will be required to make\n                    payment for your chosen subscription via any cash, cheque or bank transfer to the indicated bank account. <br /><br />\n\n                    Your new organisation setup will be disabled after <b>7 days</b> pending payment."
                          created: '2024-06-10T13:08:06.000000Z'
                          modified: '2024-06-10T13:08:06.000000Z'
                          deleted: false
                          deleted_by: null
                          organisation_invoice_items:
                            -
                              id: 1010
                              organisation_invoice_id: 947
                              qty: 1
                              product_type: subscription
                              product_id: 11
                              description: 'Free Plan Subscription (1 Month)'
                              unit_price: 0
                              tax_amount: null
                              gross_total: null
                              total: 0
                              created: '2024-06-10T13:08:06.000000Z'
                              modified: '2024-06-10T13:08:06.000000Z'
                              deleted: false
                          transaction_type:
                            id: 2
                            group: organisation
                            name: 'Subscription Purchase'
                            member_can_cancel: false
                            created: '2015-06-01T13:33:46.000000Z'
                            modified: '2015-06-01T13:33:49.000000Z'
                            active: true
                          currency:
                            id: 80
                            country_id: 80
                            currency_name: 'Ghanaian Cedi'
                            currency_code: GHS
                            active: true
                        subscription_type:
                          id: 11
                          name: free2
                          description: 'Free Plan'
                          capacity: 250
                          validity: forever
                          currency_id: 80
                          initial_price: 0
                          renewal_price: 0
                          billing_required: 'no'
                          initial_sms_credit: 15
                          monthly_sms_bonus: 0
                          accounts: 10
                          reporting: advanced
                          revenue_tracking: false
                          expenditure_tracking: false
                          events: true
                          featured: false
                          created: '2017-07-15T13:36:51.000000Z'
                          modified: '2022-01-13T05:55:05.000000Z'
                          promotional: false
                          active: true
                      organisation_type:
                        id: 3
                        name: Business
                        organisation_count: 0
                    -
                      id: 347
                      uuid: 212b3f1a-f05e-40ec-b598-c6f650945467
                      organisation_type_id: 6
                      name: 'Tree Bottom Club'
                      slug: tree-bottom-club-32066
                      address: '#11 Nii Ankrah Rd., Community 18, Lashibi'
                      city: Tema
                      state: 'Greater Accra'
                      post_code: GT-025-0337
                      country_id: 80
                      currency_id: 80
                      email: treebottomclub@gmail.com
                      phone: '+233502859254'
                      website: null
                      logo: null
                      short_description: null
                      long_description: null
                      mission: null
                      cover_photo: null
                      member_account_id: 2721
                      organisation_member_count: 0
                      organisation_account_count: 0
                      discoverable: 1
                      allow_public_join: 0
                      default_public_join_category: null
                      public_directory_enabled: 1
                      locked: 0
                      verified: 0
                      verified_by: null
                      created: '2024-05-27T17:40:12.000000Z'
                      modified: '2024-05-27T17:40:12.000000Z'
                      active: true
                      trashed: 0
                      active_subscription:
                        id: 439
                        organisation_id: 347
                        subscription_type_id: 11
                        organisation_invoice_id: 945
                        start_dt: '2024-05-27T17:40:12.000000Z'
                        end_dt: '2024-06-27T17:40:12.000000Z'
                        length: 1
                        current: true
                        last_renewal_notice_dt: null
                        created: '2024-05-27T17:40:12.000000Z'
                        modified: '2024-05-27T17:40:12.000000Z'
                        organisation_invoice:
                          id: 945
                          organisation_id: 347
                          transaction_type_id: 2
                          member_account_id: 2721
                          invoice_no: '34700945'
                          paid: true
                          currency_id: 80
                          total_due: 0
                          due_date: '2024-06-03'
                          notes: "Your new organisation will be temporarily enabled for <b>7 days</b> within which you will be required to make\n                    payment for your chosen subscription via any cash, cheque or bank transfer to the indicated bank account. <br /><br />\n\n                    Your new organisation setup will be disabled after <b>7 days</b> pending payment."
                          created: '2024-05-27T17:40:12.000000Z'
                          modified: '2024-05-27T17:40:12.000000Z'
                          deleted: false
                          deleted_by: null
                          organisation_invoice_items:
                            -
                              id: 1008
                              organisation_invoice_id: 945
                              qty: 1
                              product_type: subscription
                              product_id: 11
                              description: 'Free Plan Subscription (1 Month)'
                              unit_price: 0
                              tax_amount: null
                              gross_total: null
                              total: 0
                              created: '2024-05-27T17:40:12.000000Z'
                              modified: '2024-05-27T17:40:12.000000Z'
                              deleted: false
                          transaction_type:
                            id: 2
                            group: organisation
                            name: 'Subscription Purchase'
                            member_can_cancel: false
                            created: '2015-06-01T13:33:46.000000Z'
                            modified: '2015-06-01T13:33:49.000000Z'
                            active: true
                          currency:
                            id: 80
                            country_id: 80
                            currency_name: 'Ghanaian Cedi'
                            currency_code: GHS
                            active: true
                        subscription_type:
                          id: 11
                          name: free2
                          description: 'Free Plan'
                          capacity: 250
                          validity: forever
                          currency_id: 80
                          initial_price: 0
                          renewal_price: 0
                          billing_required: 'no'
                          initial_sms_credit: 15
                          monthly_sms_bonus: 0
                          accounts: 10
                          reporting: advanced
                          revenue_tracking: false
                          expenditure_tracking: false
                          events: true
                          featured: false
                          created: '2017-07-15T13:36:51.000000Z'
                          modified: '2022-01-13T05:55:05.000000Z'
                          promotional: false
                          active: true
                      organisation_type:
                        id: 6
                        name: Association
                        organisation_count: 0
                    -
                      id: 346
                      uuid: 74780887-084a-4999-9040-51f540da7a04
                      organisation_type_id: 1
                      name: 'EW C'
                      slug: ew-c-25446
                      address: null
                      city: null
                      state: null
                      post_code: null
                      country_id: 80
                      currency_id: 80
                      email: nanayiadom260@gmail.com
                      phone: '+233575522395'
                      website: null
                      logo: null
                      short_description: null
                      long_description: null
                      mission: null
                      cover_photo: null
                      member_account_id: 2718
                      organisation_member_count: 0
                      organisation_account_count: 0
                      discoverable: 1
                      allow_public_join: 0
                      default_public_join_category: null
                      public_directory_enabled: 1
                      locked: 0
                      verified: 0
                      verified_by: null
                      created: '2024-04-14T23:28:58.000000Z'
                      modified: '2024-04-14T23:28:58.000000Z'
                      active: true
                      trashed: 0
                      active_subscription:
                        id: 436
                        organisation_id: 346
                        subscription_type_id: 11
                        organisation_invoice_id: 942
                        start_dt: '2024-04-14T23:28:58.000000Z'
                        end_dt: '2024-05-14T23:28:58.000000Z'
                        length: 1
                        current: true
                        last_renewal_notice_dt: null
                        created: '2024-04-14T23:28:58.000000Z'
                        modified: '2024-04-14T23:28:58.000000Z'
                        organisation_invoice:
                          id: 942
                          organisation_id: 346
                          transaction_type_id: 2
                          member_account_id: 2718
                          invoice_no: '34600942'
                          paid: true
                          currency_id: 80
                          total_due: 0
                          due_date: '2024-04-21'
                          notes: "Your new organisation will be temporarily enabled for <b>7 days</b> within which you will be required to make\n                    payment for your chosen subscription via any cash, cheque or bank transfer to the indicated bank account. <br /><br />\n\n                    Your new organisation setup will be disabled after <b>7 days</b> pending payment."
                          created: '2024-04-14T23:28:58.000000Z'
                          modified: '2024-04-14T23:28:58.000000Z'
                          deleted: false
                          deleted_by: null
                          organisation_invoice_items:
                            -
                              id: 1003
                              organisation_invoice_id: 942
                              qty: 1
                              product_type: subscription
                              product_id: 11
                              description: 'Free Plan Subscription (1 Month)'
                              unit_price: 0
                              tax_amount: null
                              gross_total: null
                              total: 0
                              created: '2024-04-14T23:28:58.000000Z'
                              modified: '2024-04-14T23:28:58.000000Z'
                              deleted: false
                          transaction_type:
                            id: 2
                            group: organisation
                            name: 'Subscription Purchase'
                            member_can_cancel: false
                            created: '2015-06-01T13:33:46.000000Z'
                            modified: '2015-06-01T13:33:49.000000Z'
                            active: true
                          currency:
                            id: 80
                            country_id: 80
                            currency_name: 'Ghanaian Cedi'
                            currency_code: GHS
                            active: true
                        subscription_type:
                          id: 11
                          name: free2
                          description: 'Free Plan'
                          capacity: 250
                          validity: forever
                          currency_id: 80
                          initial_price: 0
                          renewal_price: 0
                          billing_required: 'no'
                          initial_sms_credit: 15
                          monthly_sms_bonus: 0
                          accounts: 10
                          reporting: advanced
                          revenue_tracking: false
                          expenditure_tracking: false
                          events: true
                          featured: false
                          created: '2017-07-15T13:36:51.000000Z'
                          modified: '2022-01-13T05:55:05.000000Z'
                          promotional: false
                          active: true
                      organisation_type:
                        id: 1
                        name: 'Religious Organisation'
                        organisation_count: 0
                  links:
                    first: 'http://api.memberz.test/api/organisations/public?page=1'
                    last: 'http://api.memberz.test/api/organisations/public?page=65'
                    prev: null
                    next: 'http://api.memberz.test/api/organisations/public?page=2'
                  meta:
                    current_page: 1
                    from: 1
                    last_page: 65
                    links:
                      -
                        url: null
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: 'http://api.memberz.test/api/organisations/public?page=1'
                        label: '1'
                        active: true
                      -
                        url: 'http://api.memberz.test/api/organisations/public?page=2'
                        label: '2'
                        active: false
                      -
                        url: 'http://api.memberz.test/api/organisations/public?page=3'
                        label: '3'
                        active: false
                      -
                        url: 'http://api.memberz.test/api/organisations/public?page=4'
                        label: '4'
                        active: false
                      -
                        url: 'http://api.memberz.test/api/organisations/public?page=5'
                        label: '5'
                        active: false
                      -
                        url: 'http://api.memberz.test/api/organisations/public?page=6'
                        label: '6'
                        active: false
                      -
                        url: 'http://api.memberz.test/api/organisations/public?page=7'
                        label: '7'
                        active: false
                      -
                        url: 'http://api.memberz.test/api/organisations/public?page=8'
                        label: '8'
                        active: false
                      -
                        url: 'http://api.memberz.test/api/organisations/public?page=9'
                        label: '9'
                        active: false
                      -
                        url: 'http://api.memberz.test/api/organisations/public?page=10'
                        label: '10'
                        active: false
                      -
                        url: null
                        label: ...
                        active: false
                      -
                        url: 'http://api.memberz.test/api/organisations/public?page=64'
                        label: '64'
                        active: false
                      -
                        url: 'http://api.memberz.test/api/organisations/public?page=65'
                        label: '65'
                        active: false
                      -
                        url: 'http://api.memberz.test/api/organisations/public?page=2'
                        label: 'Next &raquo;'
                        active: false
                    path: 'http://api.memberz.test/api/organisations/public'
                    per_page: 3
                    to: 3
                    total: 193
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 348
                        uuid: 394dca7c-a0cb-434d-853a-7950ea8fc912
                        organisation_type_id: 3
                        name: 'Savanna Opticals and Eyecare'
                        slug: savanna-opticals-and-eyecare-95477
                        address: 'Sabonkudi Plaza'
                        city: Tamale
                        state: Northern
                        post_code: '03720'
                        country_id: 80
                        currency_id: 80
                        email: dan1ogee@gmail.com
                        phone: '+233200252386'
                        website: null
                        logo: null
                        short_description: null
                        long_description: null
                        mission: null
                        cover_photo: null
                        member_account_id: 2722
                        organisation_member_count: 0
                        organisation_account_count: 0
                        discoverable: 1
                        allow_public_join: 0
                        default_public_join_category: null
                        public_directory_enabled: 1
                        locked: 0
                        verified: 0
                        verified_by: null
                        created: '2024-06-10T13:08:05.000000Z'
                        modified: '2024-06-10T13:08:05.000000Z'
                        active: true
                        trashed: 0
                        active_subscription:
                          id: 440
                          organisation_id: 348
                          subscription_type_id: 11
                          organisation_invoice_id: 947
                          start_dt: '2024-06-10T13:08:06.000000Z'
                          end_dt: '2024-07-10T13:08:06.000000Z'
                          length: 1
                          current: true
                          last_renewal_notice_dt: null
                          created: '2024-06-10T13:08:06.000000Z'
                          modified: '2024-06-10T13:08:06.000000Z'
                          organisation_invoice:
                            id: 947
                            organisation_id: 348
                            transaction_type_id: 2
                            member_account_id: 2722
                            invoice_no: '34800947'
                            paid: true
                            currency_id: 80
                            total_due: 0
                            due_date: '2024-06-17'
                            notes: "Your new organisation will be temporarily enabled for <b>7 days</b> within which you will be required to make\n                    payment for your chosen subscription via any cash, cheque or bank transfer to the indicated bank account. <br /><br />\n\n                    Your new organisation setup will be disabled after <b>7 days</b> pending payment."
                            created: '2024-06-10T13:08:06.000000Z'
                            modified: '2024-06-10T13:08:06.000000Z'
                            deleted: false
                            deleted_by: null
                            organisation_invoice_items:
                              -
                                id: 1010
                                organisation_invoice_id: 947
                                qty: 1
                                product_type: subscription
                                product_id: 11
                                description: 'Free Plan Subscription (1 Month)'
                                unit_price: 0
                                tax_amount: null
                                gross_total: null
                                total: 0
                                created: '2024-06-10T13:08:06.000000Z'
                                modified: '2024-06-10T13:08:06.000000Z'
                                deleted: false
                            transaction_type:
                              id: 2
                              group: organisation
                              name: 'Subscription Purchase'
                              member_can_cancel: false
                              created: '2015-06-01T13:33:46.000000Z'
                              modified: '2015-06-01T13:33:49.000000Z'
                              active: true
                            currency:
                              id: 80
                              country_id: 80
                              currency_name: 'Ghanaian Cedi'
                              currency_code: GHS
                              active: true
                          subscription_type:
                            id: 11
                            name: free2
                            description: 'Free Plan'
                            capacity: 250
                            validity: forever
                            currency_id: 80
                            initial_price: 0
                            renewal_price: 0
                            billing_required: 'no'
                            initial_sms_credit: 15
                            monthly_sms_bonus: 0
                            accounts: 10
                            reporting: advanced
                            revenue_tracking: false
                            expenditure_tracking: false
                            events: true
                            featured: false
                            created: '2017-07-15T13:36:51.000000Z'
                            modified: '2022-01-13T05:55:05.000000Z'
                            promotional: false
                            active: true
                        organisation_type:
                          id: 3
                          name: Business
                          organisation_count: 0
                      -
                        id: 347
                        uuid: 212b3f1a-f05e-40ec-b598-c6f650945467
                        organisation_type_id: 6
                        name: 'Tree Bottom Club'
                        slug: tree-bottom-club-32066
                        address: '#11 Nii Ankrah Rd., Community 18, Lashibi'
                        city: Tema
                        state: 'Greater Accra'
                        post_code: GT-025-0337
                        country_id: 80
                        currency_id: 80
                        email: treebottomclub@gmail.com
                        phone: '+233502859254'
                        website: null
                        logo: null
                        short_description: null
                        long_description: null
                        mission: null
                        cover_photo: null
                        member_account_id: 2721
                        organisation_member_count: 0
                        organisation_account_count: 0
                        discoverable: 1
                        allow_public_join: 0
                        default_public_join_category: null
                        public_directory_enabled: 1
                        locked: 0
                        verified: 0
                        verified_by: null
                        created: '2024-05-27T17:40:12.000000Z'
                        modified: '2024-05-27T17:40:12.000000Z'
                        active: true
                        trashed: 0
                        active_subscription:
                          id: 439
                          organisation_id: 347
                          subscription_type_id: 11
                          organisation_invoice_id: 945
                          start_dt: '2024-05-27T17:40:12.000000Z'
                          end_dt: '2024-06-27T17:40:12.000000Z'
                          length: 1
                          current: true
                          last_renewal_notice_dt: null
                          created: '2024-05-27T17:40:12.000000Z'
                          modified: '2024-05-27T17:40:12.000000Z'
                          organisation_invoice:
                            id: 945
                            organisation_id: 347
                            transaction_type_id: 2
                            member_account_id: 2721
                            invoice_no: '34700945'
                            paid: true
                            currency_id: 80
                            total_due: 0
                            due_date: '2024-06-03'
                            notes: "Your new organisation will be temporarily enabled for <b>7 days</b> within which you will be required to make\n                    payment for your chosen subscription via any cash, cheque or bank transfer to the indicated bank account. <br /><br />\n\n                    Your new organisation setup will be disabled after <b>7 days</b> pending payment."
                            created: '2024-05-27T17:40:12.000000Z'
                            modified: '2024-05-27T17:40:12.000000Z'
                            deleted: false
                            deleted_by: null
                            organisation_invoice_items:
                              -
                                id: 1008
                                organisation_invoice_id: 945
                                qty: 1
                                product_type: subscription
                                product_id: 11
                                description: 'Free Plan Subscription (1 Month)'
                                unit_price: 0
                                tax_amount: null
                                gross_total: null
                                total: 0
                                created: '2024-05-27T17:40:12.000000Z'
                                modified: '2024-05-27T17:40:12.000000Z'
                                deleted: false
                            transaction_type:
                              id: 2
                              group: organisation
                              name: 'Subscription Purchase'
                              member_can_cancel: false
                              created: '2015-06-01T13:33:46.000000Z'
                              modified: '2015-06-01T13:33:49.000000Z'
                              active: true
                            currency:
                              id: 80
                              country_id: 80
                              currency_name: 'Ghanaian Cedi'
                              currency_code: GHS
                              active: true
                          subscription_type:
                            id: 11
                            name: free2
                            description: 'Free Plan'
                            capacity: 250
                            validity: forever
                            currency_id: 80
                            initial_price: 0
                            renewal_price: 0
                            billing_required: 'no'
                            initial_sms_credit: 15
                            monthly_sms_bonus: 0
                            accounts: 10
                            reporting: advanced
                            revenue_tracking: false
                            expenditure_tracking: false
                            events: true
                            featured: false
                            created: '2017-07-15T13:36:51.000000Z'
                            modified: '2022-01-13T05:55:05.000000Z'
                            promotional: false
                            active: true
                        organisation_type:
                          id: 6
                          name: Association
                          organisation_count: 0
                      -
                        id: 346
                        uuid: 74780887-084a-4999-9040-51f540da7a04
                        organisation_type_id: 1
                        name: 'EW C'
                        slug: ew-c-25446
                        address: null
                        city: null
                        state: null
                        post_code: null
                        country_id: 80
                        currency_id: 80
                        email: nanayiadom260@gmail.com
                        phone: '+233575522395'
                        website: null
                        logo: null
                        short_description: null
                        long_description: null
                        mission: null
                        cover_photo: null
                        member_account_id: 2718
                        organisation_member_count: 0
                        organisation_account_count: 0
                        discoverable: 1
                        allow_public_join: 0
                        default_public_join_category: null
                        public_directory_enabled: 1
                        locked: 0
                        verified: 0
                        verified_by: null
                        created: '2024-04-14T23:28:58.000000Z'
                        modified: '2024-04-14T23:28:58.000000Z'
                        active: true
                        trashed: 0
                        active_subscription:
                          id: 436
                          organisation_id: 346
                          subscription_type_id: 11
                          organisation_invoice_id: 942
                          start_dt: '2024-04-14T23:28:58.000000Z'
                          end_dt: '2024-05-14T23:28:58.000000Z'
                          length: 1
                          current: true
                          last_renewal_notice_dt: null
                          created: '2024-04-14T23:28:58.000000Z'
                          modified: '2024-04-14T23:28:58.000000Z'
                          organisation_invoice:
                            id: 942
                            organisation_id: 346
                            transaction_type_id: 2
                            member_account_id: 2718
                            invoice_no: '34600942'
                            paid: true
                            currency_id: 80
                            total_due: 0
                            due_date: '2024-04-21'
                            notes: "Your new organisation will be temporarily enabled for <b>7 days</b> within which you will be required to make\n                    payment for your chosen subscription via any cash, cheque or bank transfer to the indicated bank account. <br /><br />\n\n                    Your new organisation setup will be disabled after <b>7 days</b> pending payment."
                            created: '2024-04-14T23:28:58.000000Z'
                            modified: '2024-04-14T23:28:58.000000Z'
                            deleted: false
                            deleted_by: null
                            organisation_invoice_items:
                              -
                                id: 1003
                                organisation_invoice_id: 942
                                qty: 1
                                product_type: subscription
                                product_id: 11
                                description: 'Free Plan Subscription (1 Month)'
                                unit_price: 0
                                tax_amount: null
                                gross_total: null
                                total: 0
                                created: '2024-04-14T23:28:58.000000Z'
                                modified: '2024-04-14T23:28:58.000000Z'
                                deleted: false
                            transaction_type:
                              id: 2
                              group: organisation
                              name: 'Subscription Purchase'
                              member_can_cancel: false
                              created: '2015-06-01T13:33:46.000000Z'
                              modified: '2015-06-01T13:33:49.000000Z'
                              active: true
                            currency:
                              id: 80
                              country_id: 80
                              currency_name: 'Ghanaian Cedi'
                              currency_code: GHS
                              active: true
                          subscription_type:
                            id: 11
                            name: free2
                            description: 'Free Plan'
                            capacity: 250
                            validity: forever
                            currency_id: 80
                            initial_price: 0
                            renewal_price: 0
                            billing_required: 'no'
                            initial_sms_credit: 15
                            monthly_sms_bonus: 0
                            accounts: 10
                            reporting: advanced
                            revenue_tracking: false
                            expenditure_tracking: false
                            events: true
                            featured: false
                            created: '2017-07-15T13:36:51.000000Z'
                            modified: '2022-01-13T05:55:05.000000Z'
                            promotional: false
                            active: true
                        organisation_type:
                          id: 1
                          name: 'Religious Organisation'
                          organisation_count: 0
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 348
                        uuid:
                          type: string
                          example: 394dca7c-a0cb-434d-853a-7950ea8fc912
                        organisation_type_id:
                          type: integer
                          example: 3
                        name:
                          type: string
                          example: 'Savanna Opticals and Eyecare'
                        slug:
                          type: string
                          example: savanna-opticals-and-eyecare-95477
                        address:
                          type: string
                          example: 'Sabonkudi Plaza'
                        city:
                          type: string
                          example: Tamale
                        state:
                          type: string
                          example: Northern
                        post_code:
                          type: string
                          example: '03720'
                        country_id:
                          type: integer
                          example: 80
                        currency_id:
                          type: integer
                          example: 80
                        email:
                          type: string
                          example: dan1ogee@gmail.com
                        phone:
                          type: string
                          example: '+233200252386'
                        website:
                          type: string
                          example: null
                        logo:
                          type: string
                          example: null
                        short_description:
                          type: string
                          example: null
                        long_description:
                          type: string
                          example: null
                        mission:
                          type: string
                          example: null
                        cover_photo:
                          type: string
                          example: null
                        member_account_id:
                          type: integer
                          example: 2722
                        organisation_member_count:
                          type: integer
                          example: 0
                        organisation_account_count:
                          type: integer
                          example: 0
                        discoverable:
                          type: integer
                          example: 1
                        allow_public_join:
                          type: integer
                          example: 0
                        default_public_join_category:
                          type: string
                          example: null
                        public_directory_enabled:
                          type: integer
                          example: 1
                        locked:
                          type: integer
                          example: 0
                        verified:
                          type: integer
                          example: 0
                        verified_by:
                          type: string
                          example: null
                        created:
                          type: string
                          example: '2024-06-10T13:08:05.000000Z'
                        modified:
                          type: string
                          example: '2024-06-10T13:08:05.000000Z'
                        active:
                          type: boolean
                          example: true
                        trashed:
                          type: integer
                          example: 0
                        active_subscription:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 440
                            organisation_id:
                              type: integer
                              example: 348
                            subscription_type_id:
                              type: integer
                              example: 11
                            organisation_invoice_id:
                              type: integer
                              example: 947
                            start_dt:
                              type: string
                              example: '2024-06-10T13:08:06.000000Z'
                            end_dt:
                              type: string
                              example: '2024-07-10T13:08:06.000000Z'
                            length:
                              type: integer
                              example: 1
                            current:
                              type: boolean
                              example: true
                            last_renewal_notice_dt:
                              type: string
                              example: null
                            created:
                              type: string
                              example: '2024-06-10T13:08:06.000000Z'
                            modified:
                              type: string
                              example: '2024-06-10T13:08:06.000000Z'
                            organisation_invoice:
                              type: object
                              properties:
                                id:
                                  type: integer
                                  example: 947
                                organisation_id:
                                  type: integer
                                  example: 348
                                transaction_type_id:
                                  type: integer
                                  example: 2
                                member_account_id:
                                  type: integer
                                  example: 2722
                                invoice_no:
                                  type: string
                                  example: '34800947'
                                paid:
                                  type: boolean
                                  example: true
                                currency_id:
                                  type: integer
                                  example: 80
                                total_due:
                                  type: integer
                                  example: 0
                                due_date:
                                  type: string
                                  example: '2024-06-17'
                                notes:
                                  type: string
                                  example: "Your new organisation will be temporarily enabled for <b>7 days</b> within which you will be required to make\n                    payment for your chosen subscription via any cash, cheque or bank transfer to the indicated bank account. <br /><br />\n\n                    Your new organisation setup will be disabled after <b>7 days</b> pending payment."
                                created:
                                  type: string
                                  example: '2024-06-10T13:08:06.000000Z'
                                modified:
                                  type: string
                                  example: '2024-06-10T13:08:06.000000Z'
                                deleted:
                                  type: boolean
                                  example: false
                                deleted_by:
                                  type: string
                                  example: null
                                organisation_invoice_items:
                                  type: array
                                  example:
                                    -
                                      id: 1010
                                      organisation_invoice_id: 947
                                      qty: 1
                                      product_type: subscription
                                      product_id: 11
                                      description: 'Free Plan Subscription (1 Month)'
                                      unit_price: 0
                                      tax_amount: null
                                      gross_total: null
                                      total: 0
                                      created: '2024-06-10T13:08:06.000000Z'
                                      modified: '2024-06-10T13:08:06.000000Z'
                                      deleted: false
                                  items:
                                    type: object
                                    properties:
                                      id: { type: integer, example: 1010 }
                                      organisation_invoice_id: { type: integer, example: 947 }
                                      qty: { type: integer, example: 1 }
                                      product_type: { type: string, example: subscription }
                                      product_id: { type: integer, example: 11 }
                                      description: { type: string, example: 'Free Plan Subscription (1 Month)' }
                                      unit_price: { type: integer, example: 0 }
                                      tax_amount: { type: string, example: null }
                                      gross_total: { type: string, example: null }
                                      total: { type: integer, example: 0 }
                                      created: { type: string, example: '2024-06-10T13:08:06.000000Z' }
                                      modified: { type: string, example: '2024-06-10T13:08:06.000000Z' }
                                      deleted: { type: boolean, example: false }
                                transaction_type:
                                  type: object
                                  properties:
                                    id:
                                      type: integer
                                      example: 2
                                    group:
                                      type: string
                                      example: organisation
                                    name:
                                      type: string
                                      example: 'Subscription Purchase'
                                    member_can_cancel:
                                      type: boolean
                                      example: false
                                    created:
                                      type: string
                                      example: '2015-06-01T13:33:46.000000Z'
                                    modified:
                                      type: string
                                      example: '2015-06-01T13:33:49.000000Z'
                                    active:
                                      type: boolean
                                      example: true
                                currency:
                                  type: object
                                  properties:
                                    id:
                                      type: integer
                                      example: 80
                                    country_id:
                                      type: integer
                                      example: 80
                                    currency_name:
                                      type: string
                                      example: 'Ghanaian Cedi'
                                    currency_code:
                                      type: string
                                      example: GHS
                                    active:
                                      type: boolean
                                      example: true
                            subscription_type:
                              type: object
                              properties:
                                id:
                                  type: integer
                                  example: 11
                                name:
                                  type: string
                                  example: free2
                                description:
                                  type: string
                                  example: 'Free Plan'
                                capacity:
                                  type: integer
                                  example: 250
                                validity:
                                  type: string
                                  example: forever
                                currency_id:
                                  type: integer
                                  example: 80
                                initial_price:
                                  type: integer
                                  example: 0
                                renewal_price:
                                  type: integer
                                  example: 0
                                billing_required:
                                  type: string
                                  example: 'no'
                                initial_sms_credit:
                                  type: integer
                                  example: 15
                                monthly_sms_bonus:
                                  type: integer
                                  example: 0
                                accounts:
                                  type: integer
                                  example: 10
                                reporting:
                                  type: string
                                  example: advanced
                                revenue_tracking:
                                  type: boolean
                                  example: false
                                expenditure_tracking:
                                  type: boolean
                                  example: false
                                events:
                                  type: boolean
                                  example: true
                                featured:
                                  type: boolean
                                  example: false
                                created:
                                  type: string
                                  example: '2017-07-15T13:36:51.000000Z'
                                modified:
                                  type: string
                                  example: '2022-01-13T05:55:05.000000Z'
                                promotional:
                                  type: boolean
                                  example: false
                                active:
                                  type: boolean
                                  example: true
                        organisation_type:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 3
                            name:
                              type: string
                              example: Business
                            organisation_count:
                              type: integer
                              example: 0
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: 'http://api.memberz.test/api/organisations/public?page=1'
                      last:
                        type: string
                        example: 'http://api.memberz.test/api/organisations/public?page=65'
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: 'http://api.memberz.test/api/organisations/public?page=2'
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: integer
                        example: 1
                      last_page:
                        type: integer
                        example: 65
                      links:
                        type: array
                        example:
                          -
                            url: null
                            label: '&laquo; Previous'
                            active: false
                          -
                            url: 'http://api.memberz.test/api/organisations/public?page=1'
                            label: '1'
                            active: true
                          -
                            url: 'http://api.memberz.test/api/organisations/public?page=2'
                            label: '2'
                            active: false
                          -
                            url: 'http://api.memberz.test/api/organisations/public?page=3'
                            label: '3'
                            active: false
                          -
                            url: 'http://api.memberz.test/api/organisations/public?page=4'
                            label: '4'
                            active: false
                          -
                            url: 'http://api.memberz.test/api/organisations/public?page=5'
                            label: '5'
                            active: false
                          -
                            url: 'http://api.memberz.test/api/organisations/public?page=6'
                            label: '6'
                            active: false
                          -
                            url: 'http://api.memberz.test/api/organisations/public?page=7'
                            label: '7'
                            active: false
                          -
                            url: 'http://api.memberz.test/api/organisations/public?page=8'
                            label: '8'
                            active: false
                          -
                            url: 'http://api.memberz.test/api/organisations/public?page=9'
                            label: '9'
                            active: false
                          -
                            url: 'http://api.memberz.test/api/organisations/public?page=10'
                            label: '10'
                            active: false
                          -
                            url: null
                            label: ...
                            active: false
                          -
                            url: 'http://api.memberz.test/api/organisations/public?page=64'
                            label: '64'
                            active: false
                          -
                            url: 'http://api.memberz.test/api/organisations/public?page=65'
                            label: '65'
                            active: false
                          -
                            url: 'http://api.memberz.test/api/organisations/public?page=2'
                            label: 'Next &raquo;'
                            active: false
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                              example: null
                            label:
                              type: string
                              example: '&laquo; Previous'
                            active:
                              type: boolean
                              example: false
                      path:
                        type: string
                        example: 'http://api.memberz.test/api/organisations/public'
                      per_page:
                        type: integer
                        example: 3
                      to:
                        type: integer
                        example: 3
                      total:
                        type: integer
                        example: 193
      tags:
        - Organisations
  /api/organisations/slugs:
    get:
      summary: 'Get Organisation Slugs'
      operationId: getOrganisationSlugs
      description: ''
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    - demo
                    - cbctaifa
                    - gmpc
                    - puc-alumni
                    - reunion-chapel-international-95453
                    - calvary-methodist-church-adabraka
                    - my-trial-org-69133
                    - church-of-christ-danfa-49446
                    - apostolic-ministerial-international-network-34810
                    - community-colleges-initiative-alumni-21396
                    - love-community-baptist-church-46308
                    - breda
                    - weapons-of-fire-deliverance-ministry-youth-fellows
                    - nubsaa
                    - harvest-chapel-demo-64164
                    - ugscs
                    - seinti-family-74162
                    - pssl-foundation-50206
                    - gbcpa
                    - staff-org-42048
                    - greenfield-residents-association-parakuo-estate-75
                    - agrislove-25398
                    - north-darkuman-presby-95558
                    - apc
                    - old-achimotans-association-2001-21521
                    - ghanainsurers
                    - aci-kaneshie-23341
                    - icare-foundation-ghana-88194
                    - baosa-knust-11898
                    - ahodwo-executive-chapter-fgbmfi-89625
                    - national-union-of-baptist-students-nubs-14115
                    - amazing-grace-baptist-church-bubiashie-73568
                    - treasure-kids-foundation-48678
                    - skpt-94922
                    - moba-2002
                    - the-star-of-david-69983
                    - itc-workers-association-92618
                    - accra-north-circuit-methodist-church-14491
                    - winners-chapel-ghana-71959
                    - triumphant-baptist-church-79948
                    - ahodwo-executive-chapter-35971
                    - creator-s-blessing-church-14071
                    - ispace-foundation-44609
                    - providence-baptist-church
                    - hoversol-limited-71973
                    - x-fitness-gym-16439
                    - gpi-team-46387
                    - dreamoval
                    - kosa99
                    - worshippers-65065
                    - ggbc-wa
                    - beulah-sda-church-56347
                    - presec-2000-79235
                    - bekwai-s-d-a-j-s-s-1999-class-35082
                    - tadenk-group-of-companies-65170
                    - josa-2000-year-group-54177
                    - wisconsin-international-university-college-alumni-
                    - oaa
                    - aviness-55354
                    - church-of-thessalonians-int-65655
                    - bfl
                    - apc-election-committee-87534
                    - qwickfusion-68101
                    - calvary-jewels-patrons-33946
                    - dominion-mandate-chapel-52470
                    - marshalls-46509
                    - knights-of-marshall-c-37-18475
                    - biwc
                    - bahmed-travel-and-tours-77471
                    - absosa-edu
                    - alrotec-solutions-95360
                    - perez-chapel-int-resurection-temple-adenta-53191
                    - rotary-club-of-accra-la-east-85481
                    - a-plus-93520
                    - moba2g3
                    - vibrations-70869
                    - oaa99-12356
                    - country-alliance-on-mental-illness-27826
                    - alrotec-solutions-43881
                    - keep-your-man-101-74119
                    - jesus-is-lord-worship-centre-a-g-77877
                    - iipgh
                    - elistech-60897
                    - nubs-ucc-34634
                    - gbc
                    - dusaf-13129
                    - noble-cares-foundation-ncf-98006
                    - gmpc-youth-fellowship-29206
                    - national-seed-trade-association-of-ghana-93058
                    - pastor-michael-ministries-88268
                    - pcg-aotc-yaf
                    - wealthcreation-53598
                    - diana-care-international-50993
                    - ark-of-praise-gmpc-22553
                    - faith-movers-chapel-intl-22009
                    - boaitey-family-21341
                    - duakwa-vocatioal-training-institute-26545
                    - daybreak-chapel-international-20417
                    - free-sisters-82751
                    - kings-power-chapel-international-63682
                    - global-revival-ministry-la-84935
                    - creative-koncerpt-31659
                    - powermark-22221
                    - nana-kwesi-media-skuul-58251
                    - accra-diocese-myf-21781
                    - akata-places-86700
                    - nubs-korlebu
                    - lawson-okereke-ministries-89549
                    - aalizahmatkesh-15247
                    - nubs-legon
                    - sbn-partners-47153
                    - word-and-spirit-feasts
                    - abusua-nkosuo-plan-18177
                    - exalted-18-95936
                    - graduates-in-village-evangelism-give-94392
                    - bright-kids
                    - biwc-wmu-55090
                    - model-ecowas-summit-78829
                    - skypro-institute-66694
                    - mopheth-church-22396
                    - sumakor-11045
                    - power-baptist-church-74723
                    - christ-apostolic-students-associates-casa-13375
                    - de-temple-gym-fitness-and-health-centre-34628
                    - team-faith-21694
                    - global-commission-46510
                    - turf-masons-74797
                    - waterfalls-church-95744
                    - sample-database-72663
                    - believers-union-ksi
                    - bisa-ghana-30149
                    - ofankor-calvary-congregation-ypg-96822
                    - the-hud-group
                    - kandifo-institute-96862
                    - akrofi-christaller-institute-of-theology-mission-a
                    - ashaiman-district-jy-leaders-67745
                    - maame-amponsah-memorial-academy-mam-academy-22486
                    - living-streams-baptist-church-77047
                    - zion-jy-17967
                    - transvodigital
                    - central-presby-jy-members-43894
                    - jireh-prophetic-school-of-ministry-75257
                    - hallowed-charter-worldwide-58286
                    - formition-53625
                    - extraordinary-peace-enterprise-42298
                    - charismatic-pentecostal-revival-movement-87337
                    - ayim-venture-47911
                    - pvc-faith-temple-32212
                    - transvo-digital-33229
                    - national-youth-ministry-19868
                    - cop-60593
                    - repent-88387
                    - hallel-music-86108
                    - way-to-life-inc-90721
                    - ibk-consult-51623
                    - maranatha-junior-youth-26959
                    - ab-logistics-ltd-60444
                    - jordan-church-11764
                    - hope-jy-ashaiman-district-83640
                    - benok-core-club-66922
                    - ccbc
                    - the-youth-church-51385
                    - christ-s-oasis-ministries-airport-city-campus-4209
                    - isbs-alumni-association-35328
                    - hallel-kingdom-ministries-72469
                    - golden-angels-school-48480
                    - llu-78085
                    - soldiers-of-yahweh-24411
                    - vbci-als-49848
                    - hallel2-44593
                    - python-ghana-70257
                    - cac-agswedro-77184
                    - triumphant-baptist-church-kwadaso-67591
                    - ministers-conference-gbc
                    - shalom-baptist-temple-73113
                    - upper-room-chapel-25085
                    - ghana-baptist-professionals
                    - test-87299
                    - apostolic-ministerial-international-network-48106
                    - apostolic-ministerial-international-network-57388
                    - apostolic-ministerial-international-network-16884
                    - apostolic-ministerial-international-network-95002
                    - the-youth-church-32113
                    - swedru-secondary-school-2001-year-group-65767
                    - swesco-2001-year-group-93102
                    - swesco-2001year-group-68068
                    - powerflow-family-82297
                    - transvo-digital-83509
                    - adom-kiddies-home-85384
                    - goodnews-bible-church-45448
                    - ew-c-25446
                    - tree-bottom-club-32066
                    - savanna-opticals-and-eyecare-95477
                properties:
                  data:
                    type: array
                    example:
                      - demo
                      - cbctaifa
                      - gmpc
                      - puc-alumni
                      - reunion-chapel-international-95453
                      - calvary-methodist-church-adabraka
                      - my-trial-org-69133
                      - church-of-christ-danfa-49446
                      - apostolic-ministerial-international-network-34810
                      - community-colleges-initiative-alumni-21396
                      - love-community-baptist-church-46308
                      - breda
                      - weapons-of-fire-deliverance-ministry-youth-fellows
                      - nubsaa
                      - harvest-chapel-demo-64164
                      - ugscs
                      - seinti-family-74162
                      - pssl-foundation-50206
                      - gbcpa
                      - staff-org-42048
                      - greenfield-residents-association-parakuo-estate-75
                      - agrislove-25398
                      - north-darkuman-presby-95558
                      - apc
                      - old-achimotans-association-2001-21521
                      - ghanainsurers
                      - aci-kaneshie-23341
                      - icare-foundation-ghana-88194
                      - baosa-knust-11898
                      - ahodwo-executive-chapter-fgbmfi-89625
                      - national-union-of-baptist-students-nubs-14115
                      - amazing-grace-baptist-church-bubiashie-73568
                      - treasure-kids-foundation-48678
                      - skpt-94922
                      - moba-2002
                      - the-star-of-david-69983
                      - itc-workers-association-92618
                      - accra-north-circuit-methodist-church-14491
                      - winners-chapel-ghana-71959
                      - triumphant-baptist-church-79948
                      - ahodwo-executive-chapter-35971
                      - creator-s-blessing-church-14071
                      - ispace-foundation-44609
                      - providence-baptist-church
                      - hoversol-limited-71973
                      - x-fitness-gym-16439
                      - gpi-team-46387
                      - dreamoval
                      - kosa99
                      - worshippers-65065
                      - ggbc-wa
                      - beulah-sda-church-56347
                      - presec-2000-79235
                      - bekwai-s-d-a-j-s-s-1999-class-35082
                      - tadenk-group-of-companies-65170
                      - josa-2000-year-group-54177
                      - wisconsin-international-university-college-alumni-
                      - oaa
                      - aviness-55354
                      - church-of-thessalonians-int-65655
                      - bfl
                      - apc-election-committee-87534
                      - qwickfusion-68101
                      - calvary-jewels-patrons-33946
                      - dominion-mandate-chapel-52470
                      - marshalls-46509
                      - knights-of-marshall-c-37-18475
                      - biwc
                      - bahmed-travel-and-tours-77471
                      - absosa-edu
                      - alrotec-solutions-95360
                      - perez-chapel-int-resurection-temple-adenta-53191
                      - rotary-club-of-accra-la-east-85481
                      - a-plus-93520
                      - moba2g3
                      - vibrations-70869
                      - oaa99-12356
                      - country-alliance-on-mental-illness-27826
                      - alrotec-solutions-43881
                      - keep-your-man-101-74119
                      - jesus-is-lord-worship-centre-a-g-77877
                      - iipgh
                      - elistech-60897
                      - nubs-ucc-34634
                      - gbc
                      - dusaf-13129
                      - noble-cares-foundation-ncf-98006
                      - gmpc-youth-fellowship-29206
                      - national-seed-trade-association-of-ghana-93058
                      - pastor-michael-ministries-88268
                      - pcg-aotc-yaf
                      - wealthcreation-53598
                      - diana-care-international-50993
                      - ark-of-praise-gmpc-22553
                      - faith-movers-chapel-intl-22009
                      - boaitey-family-21341
                      - duakwa-vocatioal-training-institute-26545
                      - daybreak-chapel-international-20417
                      - free-sisters-82751
                      - kings-power-chapel-international-63682
                      - global-revival-ministry-la-84935
                      - creative-koncerpt-31659
                      - powermark-22221
                      - nana-kwesi-media-skuul-58251
                      - accra-diocese-myf-21781
                      - akata-places-86700
                      - nubs-korlebu
                      - lawson-okereke-ministries-89549
                      - aalizahmatkesh-15247
                      - nubs-legon
                      - sbn-partners-47153
                      - word-and-spirit-feasts
                      - abusua-nkosuo-plan-18177
                      - exalted-18-95936
                      - graduates-in-village-evangelism-give-94392
                      - bright-kids
                      - biwc-wmu-55090
                      - model-ecowas-summit-78829
                      - skypro-institute-66694
                      - mopheth-church-22396
                      - sumakor-11045
                      - power-baptist-church-74723
                      - christ-apostolic-students-associates-casa-13375
                      - de-temple-gym-fitness-and-health-centre-34628
                      - team-faith-21694
                      - global-commission-46510
                      - turf-masons-74797
                      - waterfalls-church-95744
                      - sample-database-72663
                      - believers-union-ksi
                      - bisa-ghana-30149
                      - ofankor-calvary-congregation-ypg-96822
                      - the-hud-group
                      - kandifo-institute-96862
                      - akrofi-christaller-institute-of-theology-mission-a
                      - ashaiman-district-jy-leaders-67745
                      - maame-amponsah-memorial-academy-mam-academy-22486
                      - living-streams-baptist-church-77047
                      - zion-jy-17967
                      - transvodigital
                      - central-presby-jy-members-43894
                      - jireh-prophetic-school-of-ministry-75257
                      - hallowed-charter-worldwide-58286
                      - formition-53625
                      - extraordinary-peace-enterprise-42298
                      - charismatic-pentecostal-revival-movement-87337
                      - ayim-venture-47911
                      - pvc-faith-temple-32212
                      - transvo-digital-33229
                      - national-youth-ministry-19868
                      - cop-60593
                      - repent-88387
                      - hallel-music-86108
                      - way-to-life-inc-90721
                      - ibk-consult-51623
                      - maranatha-junior-youth-26959
                      - ab-logistics-ltd-60444
                      - jordan-church-11764
                      - hope-jy-ashaiman-district-83640
                      - benok-core-club-66922
                      - ccbc
                      - the-youth-church-51385
                      - christ-s-oasis-ministries-airport-city-campus-4209
                      - isbs-alumni-association-35328
                      - hallel-kingdom-ministries-72469
                      - golden-angels-school-48480
                      - llu-78085
                      - soldiers-of-yahweh-24411
                      - vbci-als-49848
                      - hallel2-44593
                      - python-ghana-70257
                      - cac-agswedro-77184
                      - triumphant-baptist-church-kwadaso-67591
                      - ministers-conference-gbc
                      - shalom-baptist-temple-73113
                      - upper-room-chapel-25085
                      - ghana-baptist-professionals
                      - test-87299
                      - apostolic-ministerial-international-network-48106
                      - apostolic-ministerial-international-network-57388
                      - apostolic-ministerial-international-network-16884
                      - apostolic-ministerial-international-network-95002
                      - the-youth-church-32113
                      - swedru-secondary-school-2001-year-group-65767
                      - swesco-2001-year-group-93102
                      - swesco-2001year-group-68068
                      - powerflow-family-82297
                      - transvo-digital-83509
                      - adom-kiddies-home-85384
                      - goodnews-bible-church-45448
                      - ew-c-25446
                      - tree-bottom-club-32066
                      - savanna-opticals-and-eyecare-95477
                    items:
                      type: string
      tags:
        - Organisations
  /api/organisations/recommended:
    get:
      summary: 'Get Recommended Organisations'
      operationId: getRecommendedOrganisations
      description: "Returns a short list of organisations that one can join. Current criteria is to\nreturn the 10 most recently updated organisations with more than 25 members"
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    id: 21
                    uuid: 5070006a-d56e-4571-9605-f953d7ed2892
                    organisation_type_id: 1
                    name: Memberz.Org
                    slug: demo
                    address: ''
                    city: Accra
                    state: 'Greater Accra'
                    post_code: ''
                    country_id: 80
                    currency_id: 80
                    email: support@memberz.org
                    phone: '+233377593003'
                    website: 'https://memberz.org/demo'
                    logo: 'https://files.memberz.org/img/org_21/account/20160911_903495_155808.png'
                    short_description: 'The Memberz.Org Demo Account, where we test out some of our awesome new features first. You can join this account and be part of the fun.'
                    long_description: 'The Memberz.Org Demo Account, where we test out some of our awesome new features first. You can join this account and be part of the fun.'
                    mission: ''
                    cover_photo: null
                    member_account_id: 1
                    organisation_member_count: 11
                    organisation_account_count: 3
                    discoverable: 1
                    allow_public_join: 1
                    default_public_join_category: null
                    public_directory_enabled: 1
                    locked: 0
                    verified: 1
                    verified_by: null
                    created: '2013-08-26T23:00:03.000000Z'
                    modified: '2022-01-03T06:45:38.000000Z'
                    active: true
                    trashed: 0
                    membership_count: 44
                    recent_membership: '2021-05-12 14:02:26'
                    organisation_type:
                      id: 1
                      name: 'Religious Organisation'
                      organisation_count: 0
                  -
                    id: 44
                    uuid: c2a93251-672f-415d-8fb2-9c4f312b6bb0
                    organisation_type_id: 1
                    name: 'Charismatic Baptist Church, Taifa'
                    slug: cbctaifa
                    address: 'P. O. Box TA 21, Taifa Accra'
                    city: Accra
                    state: 'Greater Accra'
                    post_code: null
                    country_id: 80
                    currency_id: 80
                    email: c_baptistchurch@yahoo.com
                    phone: +233-30-2401-392
                    website: 'http://www.facebook.com/cbctaifa'
                    logo: 'https://api-beta.memberz.org/storage/organisation_logos/b64_1706921606.png'
                    short_description: 'Charismatic Baptist Church has been evangelizing, winning and nurturing souls in and around the Taifa community since 1988.'
                    long_description: "A vibrant church in the heart of the Taifa community. Charismatic Baptist Church has been evangelizing, winning and nurturing souls in and around the Taifa community since 1988. We are committed to the ministry of Christ and empowered by the Holy Spirit to make a difference.\r\n\r\nLed by Rev. Joseph Adasi-Bekoe, Charismatic Baptist Church, Taifa is on a mission to continue the great commission of Jesus Christ, to ensure many come to the saving knowledge of him."
                    mission: 'To expand the Kingdom of God through the winning of souls'
                    cover_photo: null
                    member_account_id: 1
                    organisation_member_count: 1072
                    organisation_account_count: 9
                    discoverable: 1
                    allow_public_join: 0
                    default_public_join_category: null
                    public_directory_enabled: 1
                    locked: 1
                    verified: 1
                    verified_by: null
                    created: '2014-04-08T11:57:53.000000Z'
                    modified: '2024-02-03T00:53:27.000000Z'
                    active: true
                    trashed: 0
                    membership_count: 1467
                    recent_membership: '2024-09-04 10:44:08'
                    organisation_type:
                      id: 1
                      name: 'Religious Organisation'
                      organisation_count: 0
                  -
                    id: 51
                    uuid: 3989999d-45b8-465f-9d9a-d2d867626db2
                    organisation_type_id: 1
                    name: 'Garrison Methodist Presbyterian Church'
                    slug: gmpc
                    address: 'BT 488'
                    city: 'Burma Camp'
                    state: 'Greater Accra'
                    post_code: '00233'
                    country_id: 80
                    currency_id: 80
                    email: andyadjetey@gmail.com
                    phone: '0208373586'
                    website: ''
                    logo: 'https://files.memberz.org/img/org_51/account/2015-04-01%2021.05.17.jpg'
                    short_description: 'We are a church'
                    long_description: 'Join the Christ Family'
                    mission: 'Christ is Risen!'
                    cover_photo: null
                    member_account_id: 13
                    organisation_member_count: 1871
                    organisation_account_count: 4
                    discoverable: 1
                    allow_public_join: 0
                    default_public_join_category: null
                    public_directory_enabled: 1
                    locked: 0
                    verified: 0
                    verified_by: null
                    created: '2014-12-31T12:36:36.000000Z'
                    modified: '2022-06-12T11:02:38.000000Z'
                    active: true
                    trashed: 0
                    membership_count: 2441
                    recent_membership: '2024-10-20 11:58:29'
                    organisation_type:
                      id: 1
                      name: 'Religious Organisation'
                      organisation_count: 0
                  -
                    id: 54
                    uuid: e3a333f7-066c-4546-8a8e-b95f814c57e5
                    organisation_type_id: 6
                    name: 'Presbyterian University College ALUMNI'
                    slug: puc-alumni
                    address: ''
                    city: Abetifi
                    state: 'Eastern Region'
                    post_code: '00233'
                    country_id: 80
                    currency_id: 80
                    email: edemar08@hotmail.com
                    phone: ''
                    website: ''
                    logo: 'https://files.memberz.org/img/org_54/account/20150927_298192_105013.jpg'
                    short_description: 'This Presbyterian University College, Ghana, is envisaged as  â€œA University of excellence which blends modern trends that reflect Christian principlesâ€.'
                    long_description: 'The Presbyterian University College is conceived as a response to the challenge presented by the high demand for student admission in Ghanaian Universities (low access), the perceived lowering of academic standards and the erosion of moral and ethical values in the Ghanaian Society. It will relate its programmes to the developmental needs of Ghana in the 21st Century and beyond, in terms of training, research, extension and service. It will identify and fill important niches in the development of higher education in the country.'
                    mission: 'The mission of the University is  â€˜â€˜To design and implement relevant academic and Professional programmes of teaching, research and outreach for a global population within the context of Christian ethics that produce holistic human development.â€™â€™'
                    cover_photo: null
                    member_account_id: 13
                    organisation_member_count: 424
                    organisation_account_count: 2
                    discoverable: 1
                    allow_public_join: 1
                    default_public_join_category: null
                    public_directory_enabled: 0
                    locked: 1
                    verified: 0
                    verified_by: null
                    created: '2015-01-24T20:41:36.000000Z'
                    modified: '2022-04-01T15:19:29.000000Z'
                    active: true
                    trashed: 0
                    membership_count: 439
                    recent_membership: '2018-02-26 15:46:38'
                    organisation_type:
                      id: 6
                      name: Association
                      organisation_count: 0
                  -
                    id: 61
                    uuid: 9644f817-552d-47f1-9761-ab7d581c712d
                    organisation_type_id: 1
                    name: 'Calvary Methodist Church, Adabraka'
                    slug: calvary-methodist-church-adabraka
                    address: 'Post Office Box 7628, Accra North'
                    city: Accra
                    state: 'Greater Accra'
                    post_code: ''
                    country_id: 80
                    currency_id: 80
                    email: info@calvarymethodistchurchghana.org
                    phone: '+233302679317'
                    website: 'http://www.calvarymethodistchurch.org'
                    logo: 'https://files.memberz.org/img/org_61/account/20160419_838898_173241.jpg'
                    short_description: 'A warm and inviting Church located in the center of the capitalï¼Œ Accra(Adabraka precisely). 90 years and more of Walking with Christ and birthing 5 daughter churches. This is the home Church of blessed individuals of the society. Calvary Meth Church looks forward to having you worship with us during the English service at 7.30am service on Sunday or the fore-noon Fante/ Twi Service at 9:30am.'
                    long_description: "A member of the Methodist Church Ghana with the vision to build a vibrant, spirit-filled and spirit-led church for the Holistic Transformation of the society.\r\n\r\nHer mission is to equip the church for ministry work through the demonstration of Christian Faith and Love."
                    mission: 'Equipping the Church to reach out the love of Christ to all.'
                    cover_photo: null
                    member_account_id: 19
                    organisation_member_count: 129
                    organisation_account_count: 4
                    discoverable: 1
                    allow_public_join: 0
                    default_public_join_category: null
                    public_directory_enabled: 1
                    locked: 1
                    verified: 0
                    verified_by: null
                    created: '2015-06-09T11:38:19.000000Z'
                    modified: '2022-04-01T15:19:30.000000Z'
                    active: true
                    trashed: 0
                    membership_count: 198
                    recent_membership: '2019-08-09 16:55:02'
                    organisation_type:
                      id: 1
                      name: 'Religious Organisation'
                      organisation_count: 0
                  -
                    id: 75
                    uuid: cfabbf4d-8668-44d7-a810-057e7ef28f90
                    organisation_type_id: 1
                    name: 'Weapons of Fire Deliverance Ministry Youth Fellowship'
                    slug: weapons-of-fire-deliverance-ministry-youth-fellows
                    address: ''
                    city: Accra
                    state: Accra
                    post_code: '00233'
                    country_id: 80
                    currency_id: 80
                    email: mpkal29@gmail.com
                    phone: '+233200170100'
                    website: ''
                    logo: null
                    short_description: null
                    long_description: null
                    mission: null
                    cover_photo: null
                    member_account_id: 50
                    organisation_member_count: 23
                    organisation_account_count: 1
                    discoverable: 1
                    allow_public_join: 0
                    default_public_join_category: null
                    public_directory_enabled: 1
                    locked: 0
                    verified: 0
                    verified_by: null
                    created: '2015-07-02T19:48:03.000000Z'
                    modified: '2022-01-03T06:45:38.000000Z'
                    active: true
                    trashed: 0
                    membership_count: 23
                    recent_membership: '2015-07-07 23:45:03'
                    organisation_type:
                      id: 1
                      name: 'Religious Organisation'
                      organisation_count: 0
                  -
                    id: 76
                    uuid: 88f9c442-c682-4b9d-9463-71a069ce1a9e
                    organisation_type_id: 2
                    name: 'National Union of Baptist Students Alumni and Associates'
                    slug: nubsaa
                    address: 'C/o Ghana Baptist Convention'
                    city: Accra
                    state: 'Greater Accra'
                    post_code: '0302'
                    country_id: 80
                    currency_id: 80
                    email: nubsaagh@gmail.com
                    phone: '+233262118627'
                    website: 'http://www.facebook.com/nubsaagh'
                    logo: 'https://files.memberz.org/img/org_76/account/20180914_222160_081238.png'
                    short_description: 'NUBSAA is the National Union of Baptist Students Alumni & Associates. NUBSAA was formed as a avenue for Baptist Students Alumni and Associates to support the Youth and Students Ministries of the Ghana Baptist Convention.'
                    long_description: 'NUBSAA is the National Union of Baptist Students Alumni & Associates. NUBSAA was formed as a avenue for Baptist Students Alumni and Associates to support the Youth and Students Ministries of the Ghana Baptist Convention.'
                    mission: ''
                    cover_photo: null
                    member_account_id: 15
                    organisation_member_count: 162
                    organisation_account_count: 4
                    discoverable: 1
                    allow_public_join: 1
                    default_public_join_category: null
                    public_directory_enabled: 1
                    locked: 1
                    verified: 0
                    verified_by: null
                    created: '2015-07-04T11:49:08.000000Z'
                    modified: '2022-06-17T20:14:35.000000Z'
                    active: true
                    trashed: 0
                    membership_count: 173
                    recent_membership: '2022-07-15 20:28:43'
                    organisation_type:
                      id: 2
                      name: 'Non-Profit Organisation'
                      organisation_count: 0
                  -
                    id: 90
                    uuid: f8d339cc-cdc1-4629-a9bc-a807d158932b
                    organisation_type_id: 2
                    name: 'GBC Prayer Army'
                    slug: gbcpa
                    address: ''
                    city: Accra
                    state: GA
                    post_code: '0233'
                    country_id: 80
                    currency_id: 80
                    email: amaduny@yahoo.com
                    phone: '+233243613648'
                    website: ''
                    logo: null
                    short_description: null
                    long_description: null
                    mission: null
                    cover_photo: null
                    member_account_id: 26
                    organisation_member_count: 102
                    organisation_account_count: 2
                    discoverable: 1
                    allow_public_join: 0
                    default_public_join_category: null
                    public_directory_enabled: 1
                    locked: 0
                    verified: 1
                    verified_by: null
                    created: '2015-09-29T10:56:35.000000Z'
                    modified: '2022-01-03T06:45:38.000000Z'
                    active: true
                    trashed: 0
                    membership_count: 278
                    recent_membership: '2019-04-12 15:22:07'
                    organisation_type:
                      id: 2
                      name: 'Non-Profit Organisation'
                      organisation_count: 0
                  -
                    id: 91
                    uuid: a552c612-1050-4cbb-8b24-0ce511a5424a
                    organisation_type_id: 3
                    name: 'Staff Org'
                    slug: staff-org-42048
                    address: ''
                    city: Accra
                    state: 'GT Accra'
                    post_code: ''
                    country_id: 80
                    currency_id: 80
                    email: senyafi@gmail.com
                    phone: '+233244186650'
                    website: ''
                    logo: null
                    short_description: null
                    long_description: null
                    mission: null
                    cover_photo: null
                    member_account_id: 526
                    organisation_member_count: 6
                    organisation_account_count: 1
                    discoverable: 0
                    allow_public_join: 0
                    default_public_join_category: null
                    public_directory_enabled: 1
                    locked: 0
                    verified: 0
                    verified_by: null
                    created: '2015-10-16T13:27:28.000000Z'
                    modified: '2022-01-03T06:45:38.000000Z'
                    active: true
                    trashed: 0
                    membership_count: 6
                    recent_membership: '2015-10-29 15:40:15'
                    organisation_type:
                      id: 3
                      name: Business
                      organisation_count: 0
                  -
                    id: 100
                    uuid: 1a1b222a-3fe0-4498-8947-7f51e411a51f
                    organisation_type_id: 6
                    name: 'Asante Professionals Club'
                    slug: apc
                    address: 'P.O.Box 979'
                    city: Accra
                    state: 'Gt Accra'
                    post_code: 'AD 979'
                    country_id: 80
                    currency_id: 80
                    email: asanteprofessionalsclub@gmail.com
                    phone: '+233266138286'
                    website: ''
                    logo: 'https://files.memberz.org/img/org_100/account/20151126_301269_181025.jpg'
                    short_description: 'We are a club of professionals who owe allegiance to the Golden Stool. We harness our various expertise for the good of Asanteman.'
                    long_description: ''
                    mission: 'The Asante Professional Club is a network of Asante Professionals pursuing development in Asanteman.'
                    cover_photo: null
                    member_account_id: 529
                    organisation_member_count: 276
                    organisation_account_count: 6
                    discoverable: 1
                    allow_public_join: 1
                    default_public_join_category: null
                    public_directory_enabled: 0
                    locked: 1
                    verified: 0
                    verified_by: null
                    created: '2015-11-26T17:49:54.000000Z'
                    modified: '2022-04-01T15:19:31.000000Z'
                    active: true
                    trashed: 0
                    membership_count: 319
                    recent_membership: '2022-03-27 10:06:43'
                    organisation_type:
                      id: 6
                      name: Association
                      organisation_count: 0
      tags:
        - Organisations
  '/api/organisations/{id}/logo':
    post:
      summary: ''
      operationId: postApiOrganisationsIdLogo
      description: ''
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Organisations
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
                  description: 'Must be a file. Must not be greater than 5000 kilobytes.'
                image_base64:
                  type: string
                  description: ''
                  example: magni
              required:
                - image
                - image_base64
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the organisation.'
        example: 21
        required: true
        schema:
          type: integer
  /api/organisations/count:
    get:
      summary: 'Count Resources'
      operationId: countResources
      description: 'Returns a simple count of data in this resource'
      parameters:
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Organisation not found'
                properties:
                  message:
                    type: string
                    example: 'Organisation not found'
      tags:
        - Organisations
  /api/organisations/search:
    get:
      summary: 'Search Resources'
      operationId: searchResources
      description: "Allows searching for data in this resource using multiple options.\n\nOptions for searching\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
          example: suscipit
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
            example: suscipit
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Organisation not found'
                properties:
                  message:
                    type: string
                    example: 'Organisation not found'
      tags:
        - Organisations
  /api/organisations:
    get:
      summary: 'Get All'
      operationId: getAll
      description: "Returns a list of items in this resource and allows filtering the data based on fields in the database\n\nOptions for searching / filtering\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Organisations
    post:
      summary: 'Create Organisation'
      operationId: createOrganisation
      description: ''
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Organisations
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                organisation_type_id:
                  type: number
                  description: ''
                  example: 128.19399565
                name:
                  type: string
                  description: ''
                  example: dolores
                slug:
                  type: string
                  description: ''
                  example: dolores
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: lucy.schmitt@example.net
                phone:
                  type: string
                  description: ''
                  example: quia
                website:
                  type: string
                  description: 'Must be a valid URL.'
                  example: 'https://www.cormier.com/veniam-maiores-non-magni-culpa'
                country_id:
                  type: number
                  description: ''
                  example: 567563.19883276
                currency_id:
                  type: number
                  description: ''
                  example: 595666079.006
                logo:
                  type: string
                  description: 'Must be a valid URL.'
                  example: 'https://smith.net/natus-saepe-hic-doloremque-sequi-eum-iusto-qui.html'
                address:
                  type: string
                  description: ''
                  example: voluptas
                city:
                  type: string
                  description: ''
                  example: fugiat
                state:
                  type: string
                  description: ''
                  example: explicabo
                post_code:
                  type: string
                  description: ''
                  example: accusantium
                short_description:
                  type: string
                  description: ''
                  example: quod
                long_description:
                  type: string
                  description: ''
                  example: non
                subscription_type_id:
                  type: number
                  description: ''
                  example: 9.32
                subscription_length:
                  type: number
                  description: ''
                  example: 6.3571
              required:
                - organisation_type_id
                - name
                - email
                - phone
                - country_id
                - subscription_type_id
                - subscription_length
  '/api/organisations/{id}':
    get:
      summary: 'View Resource'
      operationId: viewResource
      description: "Returns information about a specific record in this resource. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Organisation not found'
                properties:
                  message:
                    type: string
                    example: 'Organisation not found'
      tags:
        - Organisations
    put:
      summary: 'Update Organisation'
      operationId: updateOrganisation
      description: ''
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Organisations
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                organisation_type_id:
                  type: number
                  description: ''
                  example: 6270738.56086
                name:
                  type: string
                  description: ''
                  example: sunt
                slug:
                  type: string
                  description: ''
                  example: aut
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: lemke.sophie@example.net
                phone:
                  type: string
                  description: ''
                  example: iure
                website:
                  type: string
                  description: 'Must be a valid URL.'
                  example: 'http://www.upton.com/aut-odio-sequi-delectus-sed-ut-recusandae-ex-aspernatur'
                country_id:
                  type: number
                  description: ''
                  example: 0.358711
                currency_id:
                  type: number
                  description: ''
                  example: 163752.0
                logo:
                  type: string
                  description: 'Must be a valid URL.'
                  example: 'http://www.bins.com/vero-accusantium-praesentium-officiis-est-a-natus-et.html'
                address:
                  type: string
                  description: ''
                  example: nam
                city:
                  type: string
                  description: ''
                  example: dignissimos
                state:
                  type: string
                  description: ''
                  example: quia
                post_code:
                  type: string
                  description: ''
                  example: repellat
                short_description:
                  type: string
                  description: ''
                  example: voluptas
                long_description:
                  type: string
                  description: ''
                  example: voluptates
              required:
                - organisation_type_id
                - name
                - email
                - phone
                - country_id
    delete:
      summary: 'Delete Resource'
      operationId: deleteResource
      description: 'Deletes the record with the specified `id`'
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Resource deleted'
                  data:
                    id: 1
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Resource deleted'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - Organisations
    parameters:
      -
        in: path
        name: id
        description: 'The id of the resource to view'
        example: 19
        required: true
        schema:
          type: integer
  /api/permissions/count:
    get:
      summary: 'Count Resources'
      operationId: countResources
      description: 'Returns a simple count of data in this resource'
      parameters:
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Permissions
  /api/permissions/search:
    get:
      summary: 'Search Resources'
      operationId: searchResources
      description: "Allows searching for data in this resource using multiple options.\n\nOptions for searching\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
          example: est
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
            example: est
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Permissions
  /api/permissions:
    get:
      summary: 'Get All'
      operationId: getAll
      description: "Returns a list of items in this resource and allows filtering the data based on fields in the database\n\nOptions for searching / filtering\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Permissions
    post:
      summary: 'Create Resource'
      operationId: createResource
      description: "Create a new record of this resource in the database. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message:
                    - 'validation error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: array
                    example:
                      - 'validation error message'
                    items:
                      type: string
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Details of error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Details of error message'
      tags:
        - Permissions
  '/api/permissions/{id}':
    get:
      summary: 'View Resource'
      operationId: viewResource
      description: "Returns information about a specific record in this resource. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - Permissions
    put:
      summary: 'Update Resource'
      operationId: updateResource
      description: "Updates the data of the record with the specified `id`. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message:
                    - 'validation error messages'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: array
                    example:
                      - 'validation error messages'
                    items:
                      type: string
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Details of error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Details of error message'
      tags:
        - Permissions
    delete:
      summary: 'Delete Resource'
      operationId: deleteResource
      description: 'Deletes the record with the specified `id`'
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Resource deleted'
                  data:
                    id: 1
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Resource deleted'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - Permissions
    parameters:
      -
        in: path
        name: id
        description: 'The id of the resource to view'
        example: 11
        required: true
        schema:
          type: integer
  /api/sms_account_messages/count:
    get:
      summary: 'Count Resources'
      operationId: countResources
      description: 'Returns a simple count of data in this resource'
      parameters:
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'SMS Account Messages'
  /api/sms_account_messages/search:
    get:
      summary: 'Search Resources'
      operationId: searchResources
      description: "Allows searching for data in this resource using multiple options.\n\nOptions for searching\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
          example: dolores
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
            example: dolores
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'SMS Account Messages'
  /api/sms_account_messages:
    get:
      summary: 'Get All'
      operationId: getAll
      description: "Returns a list of items in this resource and allows filtering the data based on fields in the database\n\nOptions for searching / filtering\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'SMS Account Messages'
    post:
      summary: 'Send Message'
      operationId: sendMessage
      description: 'Adds a message to the queue to dispatch to the phone number'
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'SMS Account Messages'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                module_sms_account_id:
                  type: number
                  description: ''
                  example: 5.4052629
                member_id:
                  type: number
                  description: ''
                  example: 47309.0
                to:
                  type: string
                  description: ''
                  example: sit
                message:
                  type: string
                  description: ''
                  example: unde
                sent_by:
                  type: number
                  description: ''
                  example: 71.1931
              required:
                - module_sms_account_id
                - member_id
                - to
                - message
  '/api/sms_account_messages/{id}':
    get:
      summary: 'View Resource'
      operationId: viewResource
      description: "Returns information about a specific record in this resource. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'SMS Account Messages'
    put:
      summary: 'Update Message'
      operationId: updateMessage
      description: 'Updates an existing message before / after it has been sent'
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'SMS Account Messages'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                module_sms_account_id:
                  type: number
                  description: ''
                  example: 94102602.05
                member_id:
                  type: number
                  description: ''
                  example: 21.2193
                to:
                  type: string
                  description: ''
                  example: incidunt
                message:
                  type: string
                  description: ''
                  example: rerum
                sent_by:
                  type: number
                  description: ''
                  example: 402176.14693214
              required:
                - module_sms_account_id
                - member_id
                - to
                - message
    delete:
      summary: 'Delete Resource'
      operationId: deleteResource
      description: 'Deletes the record with the specified `id`'
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Resource deleted'
                  data:
                    id: 1
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Resource deleted'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'SMS Account Messages'
    parameters:
      -
        in: path
        name: id
        description: 'The id of the resource to view'
        example: 1
        required: true
        schema:
          type: integer
  /api/sms_account_topups/count:
    get:
      summary: 'Count Resources'
      operationId: countResources
      description: 'Returns a simple count of data in this resource'
      parameters:
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'SMS Account Topups'
  /api/sms_account_topups/search:
    get:
      summary: 'Search Resources'
      operationId: searchResources
      description: "Allows searching for data in this resource using multiple options.\n\nOptions for searching\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
          example: amet
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
            example: amet
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'SMS Account Topups'
  /api/sms_account_topups:
    get:
      summary: 'Get All'
      operationId: getAll
      description: "Returns a list of items in this resource and allows filtering the data based on fields in the database\n\nOptions for searching / filtering\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'SMS Account Topups'
    post:
      summary: 'Create Resource'
      operationId: createResource
      description: "Create a new record of this resource in the database. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message:
                    - 'validation error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: array
                    example:
                      - 'validation error message'
                    items:
                      type: string
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Details of error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Details of error message'
      tags:
        - 'SMS Account Topups'
  '/api/sms_account_topups/{id}':
    get:
      summary: 'View Resource'
      operationId: viewResource
      description: "Returns information about a specific record in this resource. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'SMS Account Topups'
    put:
      summary: 'Update Resource'
      operationId: updateResource
      description: "Updates the data of the record with the specified `id`. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message:
                    - 'validation error messages'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: array
                    example:
                      - 'validation error messages'
                    items:
                      type: string
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Details of error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Details of error message'
      tags:
        - 'SMS Account Topups'
    delete:
      summary: 'Delete Resource'
      operationId: deleteResource
      description: 'Deletes the record with the specified `id`'
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Resource deleted'
                  data:
                    id: 1
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Resource deleted'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'SMS Account Topups'
    parameters:
      -
        in: path
        name: id
        description: 'The id of the resource to view'
        example: 4
        required: true
        schema:
          type: integer
  /api/sms_accounts/count:
    get:
      summary: 'Count Resources'
      operationId: countResources
      description: 'Returns a simple count of data in this resource'
      parameters:
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'SMS Accounts'
  /api/sms_accounts/search:
    get:
      summary: 'Search Resources'
      operationId: searchResources
      description: "Allows searching for data in this resource using multiple options.\n\nOptions for searching\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
          example: distinctio
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
            example: distinctio
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'SMS Accounts'
  /api/sms_accounts:
    get:
      summary: 'Get All'
      operationId: getAll
      description: "Returns a list of items in this resource and allows filtering the data based on fields in the database\n\nOptions for searching / filtering\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'SMS Accounts'
    post:
      summary: 'Create Resource'
      operationId: createResource
      description: "Create a new record of this resource in the database. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message:
                    - 'validation error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: array
                    example:
                      - 'validation error message'
                    items:
                      type: string
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Details of error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Details of error message'
      tags:
        - 'SMS Accounts'
  '/api/sms_accounts/{id}':
    get:
      summary: 'View Resource'
      operationId: viewResource
      description: "Returns information about a specific record in this resource. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'SMS Accounts'
    put:
      summary: 'Update Resource'
      operationId: updateResource
      description: "Updates the data of the record with the specified `id`. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message:
                    - 'validation error messages'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: array
                    example:
                      - 'validation error messages'
                    items:
                      type: string
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Details of error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Details of error message'
      tags:
        - 'SMS Accounts'
    delete:
      summary: 'Delete Resource'
      operationId: deleteResource
      description: 'Deletes the record with the specified `id`'
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Resource deleted'
                  data:
                    id: 1
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Resource deleted'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'SMS Accounts'
    parameters:
      -
        in: path
        name: id
        description: 'The id of the resource to view'
        example: 20
        required: true
        schema:
          type: integer
  /api/sms_broadcasts/count:
    get:
      summary: 'Count Resources'
      operationId: countResources
      description: 'Returns a simple count of data in this resource'
      parameters:
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'SMS Broadcast'
  /api/sms_broadcasts/search:
    get:
      summary: 'Search Resources'
      operationId: searchResources
      description: "Allows searching for data in this resource using multiple options.\n\nOptions for searching\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
          example: sequi
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
            example: sequi
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'SMS Broadcast'
  /api/sms_broadcasts:
    get:
      summary: 'Get All'
      operationId: getAll
      description: "Returns a list of items in this resource and allows filtering the data based on fields in the database\n\nOptions for searching / filtering\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'SMS Broadcast'
    post:
      summary: 'Create Resource'
      operationId: createResource
      description: "Create a new record of this resource in the database. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message:
                    - 'validation error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: array
                    example:
                      - 'validation error message'
                    items:
                      type: string
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Details of error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Details of error message'
      tags:
        - 'SMS Broadcast'
  '/api/sms_broadcasts/{id}':
    get:
      summary: 'View Resource'
      operationId: viewResource
      description: "Returns information about a specific record in this resource. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'SMS Broadcast'
    put:
      summary: 'Update Resource'
      operationId: updateResource
      description: "Updates the data of the record with the specified `id`. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message:
                    - 'validation error messages'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: array
                    example:
                      - 'validation error messages'
                    items:
                      type: string
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Details of error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Details of error message'
      tags:
        - 'SMS Broadcast'
    delete:
      summary: 'Delete Resource'
      operationId: deleteResource
      description: 'Deletes the record with the specified `id`'
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Resource deleted'
                  data:
                    id: 1
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Resource deleted'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'SMS Broadcast'
    parameters:
      -
        in: path
        name: id
        description: 'The id of the resource to view'
        example: 3
        required: true
        schema:
          type: integer
  /api/sms_broadcast_lists/filters:
    get:
      summary: ''
      operationId: getApiSms_broadcast_listsFilters
      description: ''
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'SMS Broadcast Lists'
  '/api/sms_broadcast_lists/preview/{smsBroadcastList_id}':
    get:
      summary: ''
      operationId: getApiSms_broadcast_listsPreviewSmsBroadcastList_id
      description: ''
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'SMS Broadcast Lists'
    parameters:
      -
        in: path
        name: smsBroadcastList_id
        description: 'The ID of the smsBroadcastList.'
        example: 156
        required: true
        schema:
          type: integer
  /api/sms_broadcast_lists/count:
    get:
      summary: 'Count Resources'
      operationId: countResources
      description: 'Returns a simple count of data in this resource'
      parameters:
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'SMS Broadcast Lists'
  /api/sms_broadcast_lists/search:
    get:
      summary: 'Search Resources'
      operationId: searchResources
      description: "Allows searching for data in this resource using multiple options.\n\nOptions for searching\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
          example: ducimus
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
            example: ducimus
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'SMS Broadcast Lists'
  /api/sms_broadcast_lists:
    get:
      summary: 'Get All'
      operationId: getAll
      description: "Returns a list of items in this resource and allows filtering the data based on fields in the database\n\nOptions for searching / filtering\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'SMS Broadcast Lists'
    post:
      summary: 'Create Resource'
      operationId: createResource
      description: "Create a new record of this resource in the database. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message:
                    - 'validation error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: array
                    example:
                      - 'validation error message'
                    items:
                      type: string
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Details of error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Details of error message'
      tags:
        - 'SMS Broadcast Lists'
  '/api/sms_broadcast_lists/{id}':
    get:
      summary: 'View Resource'
      operationId: viewResource
      description: "Returns information about a specific record in this resource. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'SMS Broadcast Lists'
    put:
      summary: 'Update Resource'
      operationId: updateResource
      description: "Updates the data of the record with the specified `id`. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message:
                    - 'validation error messages'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: array
                    example:
                      - 'validation error messages'
                    items:
                      type: string
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Details of error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Details of error message'
      tags:
        - 'SMS Broadcast Lists'
    delete:
      summary: 'Delete Resource'
      operationId: deleteResource
      description: 'Deletes the record with the specified `id`'
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Resource deleted'
                  data:
                    id: 1
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Resource deleted'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'SMS Broadcast Lists'
    parameters:
      -
        in: path
        name: id
        description: 'The id of the resource to view'
        example: 14
        required: true
        schema:
          type: integer
  /api/sms_credits/count:
    get:
      summary: 'Count Resources'
      operationId: countResources
      description: 'Returns a simple count of data in this resource'
      parameters:
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'SMS Credits'
  /api/sms_credits/search:
    get:
      summary: 'Search Resources'
      operationId: searchResources
      description: "Allows searching for data in this resource using multiple options.\n\nOptions for searching\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
          example: cumque
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
            example: cumque
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'SMS Credits'
  /api/sms_credits:
    get:
      summary: 'Get All'
      operationId: getAll
      description: "Returns a list of items in this resource and allows filtering the data based on fields in the database\n\nOptions for searching / filtering\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'SMS Credits'
    post:
      summary: 'Create Resource'
      operationId: createResource
      description: "Create a new record of this resource in the database. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message:
                    - 'validation error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: array
                    example:
                      - 'validation error message'
                    items:
                      type: string
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Details of error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Details of error message'
      tags:
        - 'SMS Credits'
  '/api/sms_credits/{id}':
    get:
      summary: 'View Resource'
      operationId: viewResource
      description: "Returns information about a specific record in this resource. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'SMS Credits'
    put:
      summary: 'Update Resource'
      operationId: updateResource
      description: "Updates the data of the record with the specified `id`. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message:
                    - 'validation error messages'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: array
                    example:
                      - 'validation error messages'
                    items:
                      type: string
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Details of error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Details of error message'
      tags:
        - 'SMS Credits'
    delete:
      summary: 'Delete Resource'
      operationId: deleteResource
      description: 'Deletes the record with the specified `id`'
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Resource deleted'
                  data:
                    id: 1
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Resource deleted'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'SMS Credits'
    parameters:
      -
        in: path
        name: id
        description: 'The id of the resource to view'
        example: 18
        required: true
        schema:
          type: integer
  /api/sms/summary:
    get:
      summary: ''
      operationId: getApiSmsSummary
      description: ''
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'SMS Summary'
  /api/subscription_types/count:
    get:
      summary: 'Count Resources'
      operationId: countResources
      description: 'Returns a simple count of data in this resource'
      parameters:
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Subscription Types'
  /api/subscription_types/search:
    get:
      summary: 'Search Resources'
      operationId: searchResources
      description: "Allows searching for data in this resource using multiple options.\n\nOptions for searching\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
          example: distinctio
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
            example: distinctio
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Subscription Types'
  /api/subscription_types:
    get:
      summary: 'Get All'
      operationId: getAll
      description: "Returns a list of items in this resource and allows filtering the data based on fields in the database\n\nOptions for searching / filtering\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Subscription Types'
    post:
      summary: 'Create Resource'
      operationId: createResource
      description: "Create a new record of this resource in the database. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message:
                    - 'validation error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: array
                    example:
                      - 'validation error message'
                    items:
                      type: string
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Details of error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Details of error message'
      tags:
        - 'Subscription Types'
  '/api/subscription_types/{id}':
    get:
      summary: 'View Resource'
      operationId: viewResource
      description: "Returns information about a specific record in this resource. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'Subscription Types'
    put:
      summary: 'Update Resource'
      operationId: updateResource
      description: "Updates the data of the record with the specified `id`. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message:
                    - 'validation error messages'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: array
                    example:
                      - 'validation error messages'
                    items:
                      type: string
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Details of error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Details of error message'
      tags:
        - 'Subscription Types'
    delete:
      summary: 'Delete Resource'
      operationId: deleteResource
      description: 'Deletes the record with the specified `id`'
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Resource deleted'
                  data:
                    id: 1
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Resource deleted'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'Subscription Types'
    parameters:
      -
        in: path
        name: id
        description: 'The id of the resource to view'
        example: 14
        required: true
        schema:
          type: integer
  /api/system_setting_category/count:
    get:
      summary: 'Count Resources'
      operationId: countResources
      description: 'Returns a simple count of data in this resource'
      parameters:
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'System Setting Categories'
  /api/system_setting_category/search:
    get:
      summary: 'Search Resources'
      operationId: searchResources
      description: "Allows searching for data in this resource using multiple options.\n\nOptions for searching\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
          example: nam
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
            example: nam
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'System Setting Categories'
  /api/system_setting_category:
    get:
      summary: 'Get All'
      operationId: getAll
      description: "Returns a list of items in this resource and allows filtering the data based on fields in the database\n\nOptions for searching / filtering\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'System Setting Categories'
    post:
      summary: 'Create Resource'
      operationId: createResource
      description: "Create a new record of this resource in the database. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message:
                    - 'validation error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: array
                    example:
                      - 'validation error message'
                    items:
                      type: string
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Details of error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Details of error message'
      tags:
        - 'System Setting Categories'
  '/api/system_setting_category/{id}':
    get:
      summary: 'View Resource'
      operationId: viewResource
      description: "Returns information about a specific record in this resource. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'System Setting Categories'
    put:
      summary: 'Update Resource'
      operationId: updateResource
      description: "Updates the data of the record with the specified `id`. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message:
                    - 'validation error messages'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: array
                    example:
                      - 'validation error messages'
                    items:
                      type: string
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Details of error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Details of error message'
      tags:
        - 'System Setting Categories'
    delete:
      summary: 'Delete Resource'
      operationId: deleteResource
      description: 'Deletes the record with the specified `id`'
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Resource deleted'
                  data:
                    id: 1
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Resource deleted'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'System Setting Categories'
    parameters:
      -
        in: path
        name: id
        description: 'The id of the resource to view'
        example: 16
        required: true
        schema:
          type: integer
  /api/system/settings:
    get:
      summary: 'Get All'
      operationId: getAll
      description: "Returns a list of items in this resource and allows filtering the data based on fields in the database\n\nOptions for searching / filtering\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 10
                      setting_type_category_id: 1
                      name: sms_credits
                      type: number
                      description: 'SMS Credits Available in System for Messaging'
                      value: '3259'
                      created: '2023-03-16T22:53:32.000000Z'
                      modified: '2024-09-25T07:00:02.000000Z'
                    -
                      id: 9
                      setting_type_category_id: 1
                      name: try_new_platform
                      type: flag
                      description: 'Enable this to provide option for trying new angular platform'
                      value: '0'
                      created: '2022-03-04T17:48:56.000000Z'
                      modified: '2022-03-04T17:49:00.000000Z'
                    -
                      id: 8
                      setting_type_category_id: 2
                      name: accept_slydepay_payments
                      type: flag
                      description: 'Enable this feature to accept payments via Slydepay'
                      value: '1'
                      created: '2016-06-04T06:06:01.000000Z'
                      modified: '2017-05-25T14:57:20.000000Z'
                  links:
                    first: 'http://api.memberz.test/api/system/settings?page=1'
                    last: 'http://api.memberz.test/api/system/settings?page=4'
                    prev: null
                    next: 'http://api.memberz.test/api/system/settings?page=2'
                  meta:
                    current_page: 1
                    from: 1
                    last_page: 4
                    links:
                      -
                        url: null
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: 'http://api.memberz.test/api/system/settings?page=1'
                        label: '1'
                        active: true
                      -
                        url: 'http://api.memberz.test/api/system/settings?page=2'
                        label: '2'
                        active: false
                      -
                        url: 'http://api.memberz.test/api/system/settings?page=3'
                        label: '3'
                        active: false
                      -
                        url: 'http://api.memberz.test/api/system/settings?page=4'
                        label: '4'
                        active: false
                      -
                        url: 'http://api.memberz.test/api/system/settings?page=2'
                        label: 'Next &raquo;'
                        active: false
                    path: 'http://api.memberz.test/api/system/settings'
                    per_page: 3
                    to: 3
                    total: 10
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 10
                        setting_type_category_id: 1
                        name: sms_credits
                        type: number
                        description: 'SMS Credits Available in System for Messaging'
                        value: '3259'
                        created: '2023-03-16T22:53:32.000000Z'
                        modified: '2024-09-25T07:00:02.000000Z'
                      -
                        id: 9
                        setting_type_category_id: 1
                        name: try_new_platform
                        type: flag
                        description: 'Enable this to provide option for trying new angular platform'
                        value: '0'
                        created: '2022-03-04T17:48:56.000000Z'
                        modified: '2022-03-04T17:49:00.000000Z'
                      -
                        id: 8
                        setting_type_category_id: 2
                        name: accept_slydepay_payments
                        type: flag
                        description: 'Enable this feature to accept payments via Slydepay'
                        value: '1'
                        created: '2016-06-04T06:06:01.000000Z'
                        modified: '2017-05-25T14:57:20.000000Z'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 10
                        setting_type_category_id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: sms_credits
                        type:
                          type: string
                          example: number
                        description:
                          type: string
                          example: 'SMS Credits Available in System for Messaging'
                        value:
                          type: string
                          example: '3259'
                        created:
                          type: string
                          example: '2023-03-16T22:53:32.000000Z'
                        modified:
                          type: string
                          example: '2024-09-25T07:00:02.000000Z'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: 'http://api.memberz.test/api/system/settings?page=1'
                      last:
                        type: string
                        example: 'http://api.memberz.test/api/system/settings?page=4'
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: 'http://api.memberz.test/api/system/settings?page=2'
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: integer
                        example: 1
                      last_page:
                        type: integer
                        example: 4
                      links:
                        type: array
                        example:
                          -
                            url: null
                            label: '&laquo; Previous'
                            active: false
                          -
                            url: 'http://api.memberz.test/api/system/settings?page=1'
                            label: '1'
                            active: true
                          -
                            url: 'http://api.memberz.test/api/system/settings?page=2'
                            label: '2'
                            active: false
                          -
                            url: 'http://api.memberz.test/api/system/settings?page=3'
                            label: '3'
                            active: false
                          -
                            url: 'http://api.memberz.test/api/system/settings?page=4'
                            label: '4'
                            active: false
                          -
                            url: 'http://api.memberz.test/api/system/settings?page=2'
                            label: 'Next &raquo;'
                            active: false
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                              example: null
                            label:
                              type: string
                              example: '&laquo; Previous'
                            active:
                              type: boolean
                              example: false
                      path:
                        type: string
                        example: 'http://api.memberz.test/api/system/settings'
                      per_page:
                        type: integer
                        example: 3
                      to:
                        type: integer
                        example: 3
                      total:
                        type: integer
                        example: 10
      tags:
        - 'System Settings'
  /api/system_settings/count:
    get:
      summary: 'Count Resources'
      operationId: countResources
      description: 'Returns a simple count of data in this resource'
      parameters:
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'System Settings'
  /api/system_settings/search:
    get:
      summary: 'Search Resources'
      operationId: searchResources
      description: "Allows searching for data in this resource using multiple options.\n\nOptions for searching\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
          example: minima
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
            example: minima
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'System Settings'
  /api/system_settings:
    get:
      summary: 'Get All'
      operationId: getAll
      description: "Returns a list of items in this resource and allows filtering the data based on fields in the database\n\nOptions for searching / filtering\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'System Settings'
    post:
      summary: 'Create Resource'
      operationId: createResource
      description: "Create a new record of this resource in the database. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message:
                    - 'validation error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: array
                    example:
                      - 'validation error message'
                    items:
                      type: string
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Details of error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Details of error message'
      tags:
        - 'System Settings'
  '/api/system_settings/{id}':
    get:
      summary: 'View Resource'
      operationId: viewResource
      description: "Returns information about a specific record in this resource. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'System Settings'
    put:
      summary: 'Update Resource'
      operationId: updateResource
      description: "Updates the data of the record with the specified `id`. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message:
                    - 'validation error messages'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: array
                    example:
                      - 'validation error messages'
                    items:
                      type: string
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Details of error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Details of error message'
      tags:
        - 'System Settings'
    delete:
      summary: 'Delete Resource'
      operationId: deleteResource
      description: 'Deletes the record with the specified `id`'
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Resource deleted'
                  data:
                    id: 1
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Resource deleted'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'System Settings'
    parameters:
      -
        in: path
        name: id
        description: 'The id of the resource to view'
        example: 12
        required: true
        schema:
          type: integer
  /api/tags/types:
    get:
      summary: 'Get Tag Types'
      operationId: getTagTypes
      description: ''
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Tags
  /api/tags/count:
    get:
      summary: 'Count Resources'
      operationId: countResources
      description: 'Returns a simple count of data in this resource'
      parameters:
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Tags
  /api/tags/search:
    get:
      summary: 'Search Resources'
      operationId: searchResources
      description: "Allows searching for data in this resource using multiple options.\n\nOptions for searching\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
          example: enim
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
            example: enim
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Tags
  /api/tags:
    get:
      summary: 'Get All'
      operationId: getAll
      description: "Returns a list of items in this resource and allows filtering the data based on fields in the database\n\nOptions for searching / filtering\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Tags
    post:
      summary: 'Create Resource'
      operationId: createResource
      description: "Create a new record of this resource in the database. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message:
                    - 'validation error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: array
                    example:
                      - 'validation error message'
                    items:
                      type: string
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Details of error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Details of error message'
      tags:
        - Tags
  '/api/tags/{id}':
    get:
      summary: 'View Resource'
      operationId: viewResource
      description: "Returns information about a specific record in this resource. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - Tags
    put:
      summary: 'Update Resource'
      operationId: updateResource
      description: "Updates the data of the record with the specified `id`. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message:
                    - 'validation error messages'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: array
                    example:
                      - 'validation error messages'
                    items:
                      type: string
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Details of error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Details of error message'
      tags:
        - Tags
    delete:
      summary: 'Delete Resource'
      operationId: deleteResource
      description: 'Deletes the record with the specified `id`'
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Resource deleted'
                  data:
                    id: 1
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Resource deleted'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - Tags
    parameters:
      -
        in: path
        name: id
        description: 'The id of the resource to view'
        example: 13
        required: true
        schema:
          type: integer
  /api/transaction_types/count:
    get:
      summary: 'Count Resources'
      operationId: countResources
      description: 'Returns a simple count of data in this resource'
      parameters:
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Transaction Types'
  /api/transaction_types/search:
    get:
      summary: 'Search Resources'
      operationId: searchResources
      description: "Allows searching for data in this resource using multiple options.\n\nOptions for searching\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
          example: hic
          required: false
          schema:
            type: string
            description: 'Pass any field and value to search by e.g. `name=John&email=any@aol.com`. Search logic may use LIKE or `=` depending on field'
            example: hic
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Transaction Types'
  /api/transaction_types:
    get:
      summary: 'Get All'
      operationId: getAll
      description: "Returns a list of items in this resource and allows filtering the data based on fields in the database\n\nOptions for searching / filtering\n- By field name: e.g. `?name=John` - Specific search\n- By field name with `LIKE` operator: e.g. `?name_like=John` - Fuzzy search\n- By field name with `!=` operator: e.g. `?age_not=5`\n- By field name with `>` or `<` operator: e.g. `?age_gt=5` or `?age_lt=10`\n- By field name with `>=` or `<=` operator: e.g. `?age_gte=5` or `?age_lte=10`\n- By field name with `IN` or `NOT IN` operator: e.g. `?id_in=1,3,5` or `?id_notIn=2,4`\n- By field name with `NULL` or `NOT NULL` operator: e.g. `?email_isNull` or `?email_isNotNull`"
      parameters:
        -
          in: query
          name: limit
          description: 'Total items to return e.g. `?limit=15`.'
          example: '3'
          required: false
          schema:
            type: string
            description: 'Total items to return e.g. `?limit=15`.'
            example: '3'
        -
          in: query
          name: page
          description: 'Page of items to return e.g. `?page=1`.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page of items to return e.g. `?page=1`.'
            example: 1
        -
          in: query
          name: sort
          description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Sorting options e.g. `?sort=field1:asc,field2:asc` OR `?sort=latest/oldest`.'
            example: latest
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: query
          name: fieldName
          description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Pass any field and value to filter results e.g. `name=John&email=any@aol.com`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Transaction Types'
    post:
      summary: 'Create Resource'
      operationId: createResource
      description: "Create a new record of this resource in the database. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message:
                    - 'validation error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: array
                    example:
                      - 'validation error message'
                    items:
                      type: string
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Details of error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Details of error message'
      tags:
        - 'Transaction Types'
  '/api/transaction_types/{id}':
    get:
      summary: 'View Resource'
      operationId: viewResource
      description: "Returns information about a specific record in this resource. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'Transaction Types'
    put:
      summary: 'Update Resource'
      operationId: updateResource
      description: "Updates the data of the record with the specified `id`. You can return related data or counts of related data\nin the response using the `count` and `contain` query params"
      parameters:
        -
          in: query
          name: count
          description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: integer
            description: 'Count related models. Alternatively `with_count` e.g. `?count=relation1,relation2`.'
            example: null
        -
          in: query
          name: contain
          description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
          example: null
          required: false
          schema:
            type: string
            description: 'Contain data from related model e.g. `?contain=relation1,relation2`.'
            example: null
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message:
                    - 'validation error messages'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: array
                    example:
                      - 'validation error messages'
                    items:
                      type: string
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Details of error message'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Details of error message'
      tags:
        - 'Transaction Types'
    delete:
      summary: 'Delete Resource'
      operationId: deleteResource
      description: 'Deletes the record with the specified `id`'
      parameters:
        -
          in: header
          name: X-Tenant-ID
          description: ''
          example: '{{tenant_id}}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Resource deleted'
                  data:
                    id: 1
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Resource deleted'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: failed
                  message: 'Resource not found'
                properties:
                  status:
                    type: string
                    example: failed
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - 'Transaction Types'
    parameters:
      -
        in: path
        name: id
        description: 'The id of the resource to view'
        example: 5
        required: true
        schema:
          type: integer
tags:
  -
    name: 'Activity Logs'
    description: ''
  -
    name: Auth
    description: ''
  -
    name: Banks
    description: ''
  -
    name: 'Batch Requests'
    description: ''
  -
    name: Birthdays
    description: ''
  -
    name: 'Contribution Receipt Settings'
    description: ''
  -
    name: 'Contribution Receipts'
    description: ''
  -
    name: 'Contribution Summary Reports'
    description: ''
  -
    name: 'Contribution Types'
    description: ''
  -
    name: Contributions
    description: ''
  -
    name: Countries
    description: ''
  -
    name: Currencies
    description: ''
  -
    name: Endpoints
    description: ''
  -
    name: 'Event Attendees'
    description: ''
  -
    name: 'Event Calendars'
    description: ''
  -
    name: 'Event Reminder Broadcasts'
    description: ''
  -
    name: 'Event Reminders'
    description: ''
  -
    name: 'Event Sessions'
    description: ''
  -
    name: Events
    description: ''
  -
    name: 'Expenditure - Account Balances'
    description: ''
  -
    name: 'Expenditure - Accounts'
    description: ''
  -
    name: 'Expenditure - Expense Request Items'
    description: ''
  -
    name: 'Expenditure - Expense Requests'
    description: ''
  -
    name: 'Expenditure - Expense Types'
    description: ''
  -
    name: 'Expenditure - Expenses'
    description: ''
  -
    name: 'Finance Reporting'
    description: ''
  -
    name: 'Member Accounts'
    description: ''
  -
    name: 'Member Category Settings'
    description: ''
  -
    name: 'Member Images'
    description: ''
  -
    name: 'Member Profiles'
    description: ''
  -
    name: 'Member Relation Types'
    description: ''
  -
    name: 'Member Relations'
    description: ''
  -
    name: 'Membership Registration'
    description: ''
  -
    name: Notifications
    description: ''
  -
    name: Organisation
    description: ''
  -
    name: 'Organisation Accounts'
    description: ''
  -
    name: 'Organisation Anniversary'
    description: ''
  -
    name: 'Organisation Branches'
    description: ''
  -
    name: 'Organisation File Imports'
    description: ''
  -
    name: 'Organisation Group Leaders'
    description: ''
  -
    name: 'Organisation Group Types'
    description: ''
  -
    name: 'Organisation Groups'
    description: ''
  -
    name: 'Organisation Invoice Items'
    description: ''
  -
    name: 'Organisation Invoice Payments'
    description: ''
  -
    name: 'Organisation Invoices'
    description: ''
  -
    name: 'Organisation Member Categories'
    description: ''
  -
    name: 'Organisation Member Groups'
    description: ''
  -
    name: 'Organisation Member Imports'
    description: ''
  -
    name: 'Organisation Members'
    description: ''
  -
    name: 'Organisation Payment Platforms'
    description: ''
  -
    name: 'Organisation Roles'
    description: ''
  -
    name: 'Organisation Setting Types'
    description: ''
  -
    name: 'Organisation Settings'
    description: ''
  -
    name: 'Organisation Subscrptions'
    description: ''
  -
    name: 'Organisation Types'
    description: ''
  -
    name: Organisations
    description: ''
  -
    name: Permissions
    description: ''
  -
    name: 'SMS Account Messages'
    description: ''
  -
    name: 'SMS Account Topups'
    description: ''
  -
    name: 'SMS Accounts'
    description: ''
  -
    name: 'SMS Broadcast'
    description: ''
  -
    name: 'SMS Broadcast Lists'
    description: ''
  -
    name: 'SMS Credits'
    description: ''
  -
    name: 'SMS Summary'
    description: ''
  -
    name: 'Subscription Types'
    description: ''
  -
    name: 'System Setting Categories'
    description: ''
  -
    name: 'System Settings'
    description: ''
  -
    name: Tags
    description: ''
  -
    name: 'Transaction Types'
    description: ''
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: 'Generate an auth token by calling the login endpoint with a valid username and password combo'
security:
  -
    default: []
